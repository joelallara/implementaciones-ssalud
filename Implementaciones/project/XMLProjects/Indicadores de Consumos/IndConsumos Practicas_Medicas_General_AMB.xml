<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/7/2015 11:46:18 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\pgonzalez"
  DTS:DTSID="{78CF2081-E9BC-4BE5-8420-EEA06AEB7576}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="IndConsumos Practicas_Medicas_General_AMB"
  DTS:PackageType="5"
  DTS:VersionBuild="155"
  DTS:VersionGUID="{E684B5EC-C31A-4506-972A-7CD2BCF22ED3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[(local).DW_SALUD]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{03F86ECB-B2C7-44DC-A683-EF30DBC451C0}"
      DTS:ObjectName="(local).DW_SALUD">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=AMS06X;Initial Catalog=DW_SALUD;Provider=SQLNCLI11;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Ind  Practicas Medicas en AMB-{03F86ECB-B2C7-44DC-A683-EF30DBC451C0}(local).DW_SALUD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[(local).msdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1F26E43A-CCB8-4602-A3EF-FE7DB1067386}"
      DTS:ObjectName="(local).msdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=(local);Initial Catalog=msdb;Provider=SQLNCLI11;Integrated Security=SSPI;Application Name=SSIS-Ind  Practicas Medicas en AMB-{1F26E43A-CCB8-4602-A3EF-FE7DB1067386}(local).msdb;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{5E6C4985-B4E4-4052-972C-7CDFD62CCFA1}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{5E6C4985-B4E4-4052-972C-7CDFD62CCFA1}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\AUX  Ind Determ de Laboratorio en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{66704ae6-320d-4b1c-a913-9ead08360691}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX  Ind Determ de Laboratorio en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 3&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,   sum(cant_prest_amb_pag) as cant_practicas_indicador ,S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA; FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA; JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA; JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA; JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA; WHERE A.id_rubro_ind_consumo in ('I') /* Rubro Determ de Laboratorio en AMB */&#xA;   and id_clase_producto_original in ('S')&#xA;   and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;   and id_periodo = @Periodo&#xA;   and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;   and P.id_segmento_original not in (3)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;   and S.ccosto1 = 1&#xA; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA; HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;   and P.id_periodo = C.id_periodo&#xA;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;   WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;   &#xA;  /* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#xA;   UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;   FROM H_ORD_AMB_DET C&#xA;   JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;   WHERE id_periodo = @Periodo &#xA;     and P.id_rubro_ind_consumo in ('I') /* Rubro Determ de Laboratorio en AMB */&#xA;&#xA;   UPDATE H_ORD_AMB_DET&#xA;    set consumo_indicador = 1&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;   JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;   JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;   JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;   WHERE id_clase_producto_original in ('S')&#xA;     and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;     and PR.id_segmento_original not in (3)&#xA;     and id_ind_consumo = @Indicador &#xA;     and C.id_periodo = @Periodo&#xA;     and PRE.id_rubro_ind_consumo in ('I') /* Rubro Determ de Laboratorio en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA; (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA; SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad,  SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real ,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA; FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA; WHERE id_periodo = @Periodo_Anterior&#xA;   and id_clase_producto in ('S')&#xA;   and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA; GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo , S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA; &#xA;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;     UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;     JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;     JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;     JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;     WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('I') /* Rubro Determ de Laboratorio en AMB */&#xA;&#xA;     /* Borra las personas que están capitadas en Determ de Laboratorio */ &#xA;     &#xA;     -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;     DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;     JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;     JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;     WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('I') /* Rubro Determ de Laboratorio en AMB */&#xA;&#xA;   /* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;   UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;    SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;   JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;   JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;   WHERE id_ind_consumo = @Indicador&#xA;  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Imagenes por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{810F2130-F184-4E73-B01E-0B0115187A30}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Imagenes por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 53 --Imagenes por Benef.(sumatoria de rubros C D E F G, equivalente a indicadores 4 6 7 8 9)&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;    &#xA;-- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador,  S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_rubro_ind_consumo in ('C','D','E','F','G') /* Radiologia en AMB, Ecografias en AMB, Ecodoppler en AMB, T_A_C Tomografias en AMB y R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA; &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('C','D','E','F','G') /* Radiologia en AMB, Ecografias en AMB, Ecodoppler en AMB, T_A_C Tomografias en AMB y R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('C','D','E','F','G') /* Radiologia en AMB, Ecografias en AMB, Ecodoppler en AMB, T_A_C Tomografias en AMB y R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,   S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;/* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('C','D','E','F','G')&#xA;&#xA;&#x9;/* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('C','D','E','F','G')&#xA;&#xA;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind Ecodoppler en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{93ed9285-aaa7-4f44-b9a6-cef6757f4b25}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind Ecodoppler en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 7&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador,S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_rubro_ind_consumo in ('E') /* Rubro Ecodoppler en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;            and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;     &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;    &#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('E') /* Rubro Ecodoppler en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('E') /* Rubro Ecodoppler en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;&#x9;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('E') /* Rubro Ecodoppler en AMB */&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('E') /* Rubro Ecodoppler en AMB */&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador&#xA;&#x9;  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind Ecografias en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{c7f292b5-dce4-4e34-97d0-802672a2c41d}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind Ecografias en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 5&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9; WHERE&#x9;A.id_rubro_ind_consumo in ('D','E') /* Rubro Ecodoppler en AMB + Ecografias en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S') &#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA; &#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;   &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;  &#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('D','E') /* Rubro Ecodoppler en AMB + Ecografias en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador&#xA;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('D','E') /* Rubro Ecodoppler en AMB + Ecografias en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_periodo_real , id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad,  SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real ,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('D','E') /* Rubro Ecodoppler en AMB + Ecografias en AMB */&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('D','E') /* Rubro Ecodoppler en AMB + Ecografias en AMB */&#xA;&#xA;&#x9;&#x9; /* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;  SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;  id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;  id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;  &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind Ecografias Sin Doppler en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{22297cf3-63bc-427e-a15f-6d9cab918270}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind Ecografias Sin Doppler en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 6&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_rubro_ind_consumo in ('D') /* Rubro Ecografias en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S') &#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A')  /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;  &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE id_periodo = @Periodo and P.id_rubro_ind_consumo in ('D') /* Rubro Ecografias en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('D') /* Rubro Ecografias en AMB */&#xA;&#xA;-- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,   cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad,  SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('D') /* Rubro Ecografias en AMB */&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('D') /* Rubro Ecografias en AMB */&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind Fisiokinesiologia en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{bda71f94-20ac-4bc0-92a4-6e5ee81c6a95}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind Fisiokinesiologia en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 26&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA;&#x9;  INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;  (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador , id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;  SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, sum(cant_prest_amb_pag) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;  FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;  JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;  JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;  JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;  WHERE id_rubro_ind_consumo in ('N') /* Rubro Fisiokinesiología en AMB*/&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S') &#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;   &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('N') /* Rubro Fisiokinesiología en AMB*/&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('N') /* Rubro Fisiokinesiología en AMB*/&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;  INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;  (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_periodo_real , id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;  SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad,  SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real ,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;  FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;  JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;  JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;  GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;&#x9;/* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('N') /* Rubro Fisiokinesiología en AMB*/&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('N') /* Rubro Fisiokinesiología en AMB*/&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;   UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;   JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;   JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;   JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador&#xA;&#x9;  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind Radiologia en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{b4f777f7-460a-4e9f-b58f-8cea0f5245fa}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind Radiologia en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 4&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;    &#xA;/* Consumos */&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_rubro_ind_consumo in ('C') /* Rubro Radiologia en AMB*/&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S') &#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#x9;&#xA; &#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;     &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('C') /* Rubro Radiologia en AMB*/&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('C') /* Rubro Radiologia en AMB*/&#xA;&#xA;&#xA;-- Capitas.........&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,   S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#xA; /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('C')&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('C')&#xA;&#xA;&#xA;&#x9;&#x9;&#x9; /* Calcula Sexo, Posicion y Provincia */&#xA;&#x9;&#x9;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;  SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;  id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;  id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;&#x9;  id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;  &#xA;  " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind R_M_N Resonancia Magnetica Nuclear en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{e40ac6c0-c4c9-4942-911f-1d2556da2bd4}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind R_M_N Resonancia Magnetica Nuclear en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 9&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador,S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;A.id_rubro_ind_consumo in ('G') /* Rubro R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;   &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('G') /* Rubro R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('G') /* Rubro R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad,  SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#x9; &#xA;&#x9;&#x9;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('G') /* Rubro R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('G') /* Rubro R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;&#x9;&#x9; /* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9; UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET&#x9; id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9; FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9; JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9; JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9; WHERE id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Ind T_A_C Tomografias en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2e1a5263-6389-4e86-902c-49e180a33912}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind T_A_C Tomografias en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 8&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;---- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, sum(cant_prest_amb_pag) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_rubro_ind_consumo in ('F') /* Rubro T_A_C Tomografias en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;   &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('F') /* Rubro T_A_C Tomografias en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('F') /* Rubro T_A_C Tomografias en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad,  SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;&#x9;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('F') /* Rubro T_A_C Tomografias en AMB */&#xA;&#xA;&#x9;&#x9;   /* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('F') /* Rubro T_A_C Tomografias en AMB */&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Practicas Medicas Anatomopatologia"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{40454800-6d93-4e95-8b96-d515ee256156}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Practicas Medicas Anatomopatologia"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 17&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  IsNull(SUM(cant_prest_amb_pag),0) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA; FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA; JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA; JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA; JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA; WHERE id_rubro_ind_consumo in ('L') /* Rubro Practicas Medicas Anatomopatologías en AMB */&#xA;   and id_clase_producto_original in ('S')&#xA;   and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;   and id_periodo = @Periodo&#xA;   and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;   and P.id_segmento_original not in (3)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;   and S.ccosto1 = 1&#xA; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA; HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;  &#xA;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;   and P.id_periodo = C.id_periodo&#xA;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;   WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;  &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;     &#xA;  /* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;  &#xA;   UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;   FROM H_ORD_AMB_DET C&#xA;   JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;   WHERE id_periodo = @Periodo &#xA;     and P.id_rubro_ind_consumo in ('L') /* Rubro Practicas Medicas Anatom. en AMB */&#xA;&#xA;   UPDATE H_ORD_AMB_DET&#xA;    set consumo_indicador = 1&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;   JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;   JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;   JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;   WHERE id_clase_producto_original in ('S')&#xA;    and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;    and PR.id_segmento_original not in (3)&#xA;    and id_ind_consumo = @Indicador&#xA;    and C.id_periodo = @Periodo&#xA;    and PRE.id_rubro_ind_consumo in ('L') /* Rubro Practicas Medicas Anatomopatologías en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_periodo_real , id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo  as id_periodo,  @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real ,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;   &#xA;   &#xA;   /* Borra las personas que están capitadas en Consultas. */ &#xA;     &#xA;     DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;     JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;     JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;     WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('L') /* Rubro Practicas Medicas Anatomopatologías en AMB */&#xA;&#xA;   /* Calcula Sexo, Posicion y Provincia */&#xA;   &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9; id_posicion = LA.id_posicion,&#xA;&#x9;&#x9; id_provincia = LA.id_provincia,&#xA;&#x9;&#x9; id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE I.id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Practicas Medicas General"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BFCFA2DF-BC53-4189-8C77-D2CCE5328E9B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Practicas Medicas General"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 2&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;    &#xA;-- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador,  S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_rubro_ind_consumo in ('B','C','D','E','F','G','N') /* Practicas Medicas en AMB, Radiologia en AMB, Ecografias en AMB, Ecodoppler en AMB, T_A_C Tomografias en AMB y R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA; &#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;/* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;&#x9;&#x9;&#x9;FROM H_ORD_AMB_DET C&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_periodo = @Periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and P.id_rubro_ind_consumo in ('B','C','D','E','F','G','N') /* Practicas Medicas en AMB, Radiologia en AMB, Ecografias en AMB, Ecodoppler en AMB, T_A_C Tomografias en AMB y R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE H_ORD_AMB_DET&#xA;&#x9;&#x9;&#x9;&#x9;set consumo_indicador = 1&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;&#x9;&#x9;&#x9;WHERE&#x9;id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;&#x9;and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;&#x9;and PR.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and id_ind_consumo = @Indicador &#xA;&#x9;&#x9;&#x9;&#x9;and C.id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;&#x9;and PRE.id_rubro_ind_consumo in ('B','C','D','E','F','G','N') /* Practicas Medicas en AMB, Radiologia en AMB, Ecografias en AMB, Ecodoppler en AMB, T_A_C Tomografias en AMB y R_N_N Resonancia Magnetica Nuclear en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,   S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;/* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;&#x9;&#x9;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto&#xA;&#x9;&#x9;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('B','C','D','E','F','G','N')&#xA;&#xA;&#x9;/* Borra las personas que están capitadas en Consultas. */ &#xA;&#x9;&#x9;   &#xA;&#x9;&#x9;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#x9;&#x9;  &#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('B','C','D','E','F','G','N')&#xA;&#xA;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Practicas Medicas Salud Mental"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{31460bb2-2398-4187-b130-97e6921489ef}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Practicas Medicas Salud Mental"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 18&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;        &#xA;---- Consumos............&#xA;&#xA;   INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;   (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo,  cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;   SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,   IsNull(SUM(cant_prest_amb_pag),0) as cant_practicas_indicador ,S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;   FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;   JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;   JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;   JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;   WHERE id_rubro_ind_consumo in ('M') /* Rubro Practicas Medicas Salud Mental en AMB */&#xA;   and id_clase_producto_original in ('S')&#xA;   and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;   and id_periodo = @Periodo&#xA;   and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;   and P.id_segmento_original not in (3)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;   and S.ccosto1 = 1&#xA;   GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;   HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN  consultas_dw.dbo.AUX_H_PERSONAS_CAPITAS_SALUD  C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;   and P.id_periodo = C.id_periodo&#xA;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;   WHERE id_ind_consumo = @Indicador &#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;   UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;    SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;   JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;   JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;   WHERE id_ind_consumo = @Indicador&#xA;&#xA;  /* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#xA;   UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;   FROM H_ORD_AMB_DET C&#xA;   JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;   WHERE id_periodo = @Periodo &#xA;     and P.id_rubro_ind_consumo in ('M') /* Rubro Practicas Medicas Salud Mental en AMB */&#xA;&#xA;   UPDATE H_ORD_AMB_DET&#xA;    set consumo_indicador = 1&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;   JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;   JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;   JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;   WHERE id_clase_producto_original in ('S')&#xA;    and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;    and PR.id_segmento_original not in (3)&#xA;    and id_ind_consumo = @Indicador&#xA;    and C.id_periodo = @Periodo&#xA;    and PRE.id_rubro_ind_consumo in ('M') /* Rubro Practicas Medicas Salud Mental en AMB */&#xA;&#xA;---- Capitas.........&#xA; &#xA; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA; (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA; SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real ,S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA; FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA; WHERE id_periodo = @Periodo_Anterior&#xA;   and id_clase_producto in ('S')&#xA;   and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA; GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;   &#xA;   /* Borra las personas que están capitadas en Consultas. */ &#xA;   &#xA;     DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;     JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;     JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;     WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('M') /* Rubro Practicas Medicas Salud Mental en AMB */&#xA;&#xA;  /* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;   UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;    SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;   JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;   JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;   WHERE id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Prácticas Médicas Puras por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{ED841AFA-1FA9-47D6-A09C-3282115CEE3F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Prácticas Médicas Puras por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 54 --  Prácticas Médicas Puras por Benef.&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;    &#xA;-- Consumos............&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo,  sum(cant_prest_amb_pag) as cant_practicas_indicador,  S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_rubro_ind_consumo = 'B'&#xA;&#x9;&#x9;&#x9;and id_clase_producto_original in ('S')&#xA;&#x9;&#x9;&#x9;and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;&#x9;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#x9;and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;&#x9;&#x9;&#x9;and P.id_segmento_original not in (3)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.ccosto1 = 1&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA;&#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#xA;&#xA;---- Capitas.........CANTIDAD DE AFILIADOS&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real,   S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/* Borra las personas que están capitadas en Consultas. */ &#xA;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.  &#xA;&#x9;&#x9;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;&#x9;&#x9;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo = 'B'&#xA;&#xA;&#xA;&#x9;/* Calcula Sexo, Posicion y Provincia */&#x9;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{857C4086-029B-4D76-A14C-AB6AB66EB9A5}"
      DTS:From="Package\AUX Practicas Medicas General"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\AUX Imagenes por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{AD0EDF99-35EC-4889-BF43-3644D2B27C62}"
      DTS:From="Package\AUX Ind Radiologia en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\AUX Ind Ecografias en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{35977B78-8871-4512-A0CE-11661F4A803A}"
      DTS:From="Package\AUX Prácticas Médicas Puras por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\AUX Ind Radiologia en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{34FD5F77-7244-420E-B3E1-D29C6AD2D154}"
      DTS:From="Package\AUX Imagenes por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\AUX Prácticas Médicas Puras por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{9AB68C2C-71B1-4492-AE4D-42A118DFC9AC}"
      DTS:From="Package\AUX Ind Ecografias en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\AUX Ind Ecografias Sin Doppler en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{90A9422F-98D4-4241-8A62-F69EFE1C6A73}"
      DTS:From="Package\AUX Ind Ecografias Sin Doppler en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\AUX Ind Ecodoppler en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{23993E1A-1175-46E7-B97D-F8EA10191B7A}"
      DTS:From="Package\AUX Ind Ecodoppler en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\AUX Ind T_A_C Tomografias en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{79FBCCD9-7E53-4A2D-A928-3A21F1B286E5}"
      DTS:From="Package\AUX Ind T_A_C Tomografias en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\AUX Ind R_M_N Resonancia Magnetica Nuclear en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{623C1872-B44D-4AF4-BE52-9283404FAEF1}"
      DTS:From="Package\AUX Ind R_M_N Resonancia Magnetica Nuclear en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\AUX Ind Fisiokinesiologia en AMB" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{66C5E71A-08E8-45D3-ABF3-1405D55A909D}"
      DTS:From="Package\AUX Ind Fisiokinesiologia en AMB"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\AUX Practicas Medicas Anatomopatologia" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{70F1D47B-BDA6-4ED2-9EF5-BDD583F34AD0}"
      DTS:From="Package\AUX Practicas Medicas Anatomopatologia"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\AUX Practicas Medicas Salud Mental" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{B892BE85-052D-4A20-A213-8382B3ED3E51}"
      DTS:From="Package\AUX Practicas Medicas Salud Mental"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\AUX  Ind Determ de Laboratorio en AMB" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="277,42"
          Id="Package\AUX  Ind Determ de Laboratorio en AMB"
          TopLeft="43.9767779390421,859.198113207547" />
        <NodeLayout
          Size="203,42"
          Id="Package\AUX Imagenes por Benef"
          TopLeft="80.9767779390421,76.6415094339623" />
        <NodeLayout
          Size="220,42"
          Id="Package\AUX Ind Ecodoppler en AMB"
          TopLeft="72.4767779390421,432.349056603774" />
        <NodeLayout
          Size="217,42"
          Id="Package\AUX Ind Ecografias en AMB"
          TopLeft="73.9767779390421,290.066037735849" />
        <NodeLayout
          Size="277,42"
          Id="Package\AUX Ind Ecografias Sin Doppler en AMB"
          TopLeft="43.9767779390421,361.207547169811" />
        <NodeLayout
          Size="246,42"
          Id="Package\AUX Ind Fisiokinesiologia en AMB"
          TopLeft="59.4767779390421,645.77358490566" />
        <NodeLayout
          Size="358,42"
          Id="Package\AUX Ind R_M_N Resonancia Magnetica Nuclear en AMB"
          TopLeft="3.47677793904211,574.632075471698" />
        <NodeLayout
          Size="217,42"
          Id="Package\AUX Ind Radiologia en AMB"
          TopLeft="73.9767779390421,218.924528301887" />
        <NodeLayout
          Size="263,42"
          Id="Package\AUX Ind T_A_C Tomografias en AMB"
          TopLeft="50.9767779390421,503.490566037736" />
        <NodeLayout
          Size="285,42"
          Id="Package\AUX Practicas Medicas Anatomopatologia"
          TopLeft="39.9767779390421,716.915094339623" />
        <NodeLayout
          Size="236,42"
          Id="Package\AUX Practicas Medicas General"
          TopLeft="64.4767779390421,5.49999999999999" />
        <NodeLayout
          Size="276,42"
          Id="Package\AUX Prácticas Médicas Puras por Benef"
          TopLeft="44.4767779390421,147.783018867925" />
        <NodeLayout
          Size="261,42"
          Id="Package\AUX Practicas Medicas Salud Mental"
          TopLeft="51.9767779390421,788.056603773585" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="182.476777939042,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="182.476777939042,260.924528301887">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="182.476777939042,189.783018867925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="182.476777939042,118.641509433962">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="182.476777939042,332.066037735849">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="182.476777939042,403.207547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="182.476777939042,474.349056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="182.476777939042,545.490566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="182.476777939042,616.632075471698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="182.476777939042,687.77358490566">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="182.476777939042,758.915094339623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="182.476777939042,830.056603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1415094339623"
              Start="0,0"
              End="0,21.6415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>