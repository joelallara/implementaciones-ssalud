<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/10/2015 9:14:48 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\pgonzalez"
  DTS:DTSID="{4FC38EC5-2D07-4227-8BAC-88F387605C21}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="IndConsumos Internaciones_INT"
  DTS:PackageType="5"
  DTS:VersionBuild="168"
  DTS:VersionGUID="{DB4777EF-9D55-4556-BE9D-9C5FF6A90038}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{C473C6A3-814E-44AA-A737-F8EE8B510BC9}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{C473C6A3-814E-44AA-A737-F8EE8B510BC9}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\AUX Internaciones - Normales"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4e3c006c-cd06-4b7e-b0f0-5134625c4f71}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Internaciones - Normales"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 23&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;-- Consumos............&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;-- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad , SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Internaciones. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona  = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\AUX Internaciones - Prolongadas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6067f971-c8b6-45f8-9d3b-ab82141de298}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Internaciones - Prolongadas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int Set @Indicador = 22&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;&#xA;-- Consumos............&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_empresa_PE_ind, S.id_tipo_entidad_PE_ind, S.id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Consultas. */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;-- Capitas.........&#xA;&#xA;&#x9;-- Inserta Indicadores 22 (Internaciones Prolongadas por Benef). Se toma el mismo indicador que el 11, en la misma columna. A nivel tablero se filtra en la métrica por indicador 22 u 11 según corresponda.&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_localidad_indicador_consumo, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT S.id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, id_provincia, id_posicion, id_sexo, S.edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_localidad_indicador_consumo, id_convenio, id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI S WHERE id_ind_consumo = 11&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Cesareas por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{27b623d0-53ac-45ce-88a8-1e26925f64f8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Cesareas por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 43&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;---- Internaciones Cesarea por Benef&#xA;---- Consumos............&#xA;&#xA;&#x9;---- NORMALES&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion,  id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion,  S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;           &#x9;&#x9;&#x9;--and S.id_diagnostico in ('O82') /* Cesareas. */&#xA;&#x9;&#x9;&#x9;and  S.id_tipo_internacion in ('CE')  /* Tipo Internacion Cesarea. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;---- PROLONGADAS&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion,  id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;and  S.id_tipo_internacion in ('CE')  /* Tipo Internacion Cesarea. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Cesareas. */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,   cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Neo. */&#xA;&#x9;&#x9; &#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;&#x9;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Clinicas por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{78F60E40-E35E-4FAC-B654-2F56237686F9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Clinicas por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 40&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;/* Internaciones Clinicas por Benef */&#xA;   /* Consumos */&#xA;&#xA;&#x9; /* NORMALES */&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('CC') /* Tipo Internacion Clinica. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;   /* PROLONGADAS */&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('CC') /* Tipo Internacion Clinica. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Clinicas. */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9; JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Int. Clínicas. */&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;&#xA;&#x9;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Domiciliarias por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{843e1574-3938-4b60-bb92-917fdcb3b206}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Domiciliarias por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 46&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;/*  Internaciones Domiciliarias por Benef */&#xA;/*  Consumos */&#xA;&#xA;&#x9;/* NORMALES */&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion,  id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion,  S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('CD') /* Tipo Internacion Domicialiaria */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;/* PROLONGADAS */&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('CD') /* Tipo Internacion Domicialiaria */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Psiquiat */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9; &#xA;/* Capitas */&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,   cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Psiquiat */&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Neonatologia por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{e492fb9f-6cf2-4093-b850-56980fc7e2b2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Neonatologia por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 44&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;---- Internaciones Neonatologia por Benef&#xA;---- Consumos............&#xA;&#xA;&#x9;---- NORMALES&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('RN') /* Tipo Internacion NEONATOLOGIA. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;---- PROLONGADAS&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('RN') /* Tipo Internacion NEONATOLOGIA. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Neo. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Neo */&#x9;&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Partos por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ea957e41-c479-4391-b914-15dc110ef97a}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Partos por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 42&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;---- Internaciones Parto por Benef&#xA;---- Consumos............&#xA;&#xA;&#x9;---- NORMALES&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9;&#x9;&#x9;--and  S.id_diagnostico in ('O80') /* Parto. */&#xA;&#x9;&#x9;&#x9;and  S.id_tipo_internacion = 'P' /* Parto. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;---- PROLONGADAS&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;and  S.id_tipo_internacion = 'P' /* Parto. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Partos. */&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9; JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9; &#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Int. Partos. */&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Psiquiatricas por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{631ae5aa-3f6f-41da-bbc9-2e53582432f5}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Psiquiatricas por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 45&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;---- Internaciones Psiquiatricas por Benef&#xA;---- Consumos............&#xA;&#xA;&#x9;---- NORMALES&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('CP') /* Tipo Internacion Psiquiatricas */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;---- PROLONGADAS&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('CP') /* Tipo Internacion Psiquiatricas */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Psiquiatricas. */&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#x9;&#xA;&#xA; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#x9;&#x9; &#xA;&#x9; /* Capitas */&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Psiquiatricas. */&#x9;&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Quirúrgicas por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1dae911b-47a8-4c2a-a613-ca85f37dbb1e}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Quirúrgicas por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 41&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;---- Internaciones Quirúrgicas por Benef&#xA;---- Consumos............&#xA;&#xA;&#x9;---- NORMALES&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo_fecha_internacion between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('QC') /* Tipo Internacion Quirúrgicas. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;---- PROLONGADAS&#xA;&#x9; &#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_tipo_internacion in ('QC') /* Tipo Internacion Quirúrgicas. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Int Quirúrgicas. */&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,   cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Quirúrgicas. */&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Internaciones Totales por Benef"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5CCDF34B-FC32-4A00-AF5B-9A665A6922E1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Internaciones Totales por Benef"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int SET @Indicador = 11&#xA;DECLARE @Periodo_Hasta_Ejecucion Int Set @Periodo_Hasta_Ejecucion = (select MAX(id_periodo) from AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;DECLARE @Periodo_Desde_Ejecucion Int Set @Periodo_Desde_Ejecucion = dbo.PeriodosAnteriores(@Periodo_Hasta_Ejecucion,12) &#xA;DECLARE @Fecha Datetime SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo_Hasta_Ejecucion)&#xA;DECLARE @Periodo_Anterior Int SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#xA;-- Consumos............&#xA;&#xA;&#x9;---- NORMALES&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo_fecha_internacion, @Indicador as id_ind_consumo, S.id_persona, nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, S.id_internacion_prolongada, sum(cant_internaciones) as cant_practicas_indicador, S.id_empresa_PE_int as id_empresa_PE_ind, S.id_tipo_entidad_PE_int as id_tipo_entidad_PE_ind, S.id_marca_PE_int as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.H_INTERNACIONES_CARLOS S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and  id_periodo_fecha_internacion   between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and S.id_internacion_prolongada in ('N') /* Solo Internacion Normal. */&#xA;&#x9; GROUP BY S.id_periodo_fecha_internacion, S.id_persona, S.nro_orden,  S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, S.id_internacion_prolongada, S.id_empresa_PE_int, S.id_tipo_entidad_PE_int, S.id_marca_PE_int, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9;---- PROLONGADAS&#xA;&#xA;&#x9; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_internacion_prolongada_int, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, 'F' as id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, 0 as id_acreedor, 0 as nro_cursograma, 0 as Nro_Lote, 0 as nro_secuencia, '' as id_prestacion, 'S' as id_internacion_prolongada_int, sum(cant_internaciones) as cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9; FROM DW_SALUD.dbo.AUX_H_INTERNACIONES_PROLONGADAS_INDICADORES S&#xA;&#x9; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9; WHERE&#x9;id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and id_periodo between @Periodo_Desde_Ejecucion and @Periodo_Hasta_Ejecucion&#xA;&#x9;&#x9;&#x9;and S.id_tipo_orden = 6 /* Solo tipo orden Internacion */&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;and cant_internaciones = 1 /* Al ser distinto de 0 solo cuenta las que inician en este periodo y no las que vienen prolongadas pero iniciadas periodos anteriores. En el paso de REPROCESO se agrega a cada periodo lo que le corresponde de días de periodos que vienen mas adelante. Aqui solo actualiza el ultimo periodo. */&#xA;&#x9; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_orden, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;&#x9; /* Borra las personas que están capitadas en Internaciones. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9; /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;&#x9;&#x9;  UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;  FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;  WHERE id_ind_consumo = @Indicador&#xA;&#xA;---- Capitas.........&#xA;&#xA;&#x9;INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;(id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad,  cant_afiliados_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA;&#x9;SELECT @Periodo_Hasta_Ejecucion as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA;&#x9;JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA;&#x9;JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA;&#x9;WHERE&#x9;id_periodo = @Periodo_Anterior&#xA;&#x9;&#x9;&#x9;and id_clase_producto in ('S')&#xA;&#x9;&#x9;&#x9;and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;&#x9;and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;&#x9;&#x9;&#x9;and not ((S.id_producto = 4 and S.id_plan_producto = 'PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;&#x9;&#x9;&#x9;or  (S.id_producto = 35 and S.id_plan_producto = 'PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;&#x9;GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#x9;&#xA;&#x9;&#x9; /* Borra las personas que están capitadas en Int Totales*/&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;&#x9;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;&#x9;JOIN D_CAPITAS_SALUD CA on C.id_capita = CA.id_capita&#xA;&#x9;&#x9;&#x9;WHERE id_ind_consumo = @Indicador and CA.id_capita_os = 1 and CA.capita_internacion = 'SI'&#xA;&#xA;&#x9;&#x9;/* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;     &#x9;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES L on P.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = L.id_localidad&#xA;&#x9;&#x9;&#x9;WHERE I.id_ind_consumo = @Indicador&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{BA9FE2C4-DF87-4AF4-AC5F-6B450776E9A4}"
      DTS:From="Package\Internaciones Totales por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\AUX Internaciones - Prolongadas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{DE705F82-2A36-4B7B-9B7A-77C22CB7A6BB}"
      DTS:From="Package\AUX Internaciones - Prolongadas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\AUX Internaciones - Normales" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{E48C7658-838F-45C0-8EEA-F6D6F76B3AFD}"
      DTS:From="Package\AUX Internaciones - Normales"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Internaciones Clinicas por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{ADCF3B9B-DE61-4EA5-BA27-F69D82744E52}"
      DTS:From="Package\Internaciones Clinicas por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Internaciones Quirúrgicas por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{CF3D00CD-854E-46F8-8E92-0163271C621F}"
      DTS:From="Package\Internaciones Quirúrgicas por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Internaciones Partos por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{056C2E58-D8AE-44F8-A73E-4F073B9FC65B}"
      DTS:From="Package\Internaciones Partos por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Internaciones Cesareas por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{1B95DFCC-96A5-4257-B977-868A54FE6EF2}"
      DTS:From="Package\Internaciones Cesareas por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Internaciones Neonatologia por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{EBA3934A-1AC1-4E1B-88E5-2B8268A5D9C4}"
      DTS:From="Package\Internaciones Neonatologia por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Internaciones Psiquiatricas por Benef" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{8CDED7FF-D83F-4E9B-8F25-7EB528431BF2}"
      DTS:From="Package\Internaciones Psiquiatricas por Benef"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Internaciones Domiciliarias por Benef" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="227,42"
          Id="Package\AUX Internaciones - Normales"
          TopLeft="44.8141509433962,137.072327044025" />
        <NodeLayout
          Size="242,42"
          Id="Package\AUX Internaciones - Prolongadas"
          TopLeft="37.3141509433962,71.2861635220126" />
        <NodeLayout
          Size="246,42"
          Id="Package\Internaciones Cesareas por Benef"
          TopLeft="35.3141509433962,400.216981132076" />
        <NodeLayout
          Size="237,42"
          Id="Package\Internaciones Clinicas por Benef"
          TopLeft="39.8141509433962,202.858490566038" />
        <NodeLayout
          Size="261,42"
          Id="Package\Internaciones Domiciliarias por Benef"
          TopLeft="27.8141509433962,597.575471698113" />
        <NodeLayout
          Size="263,42"
          Id="Package\Internaciones Neonatologia por Benef"
          TopLeft="26.8141509433962,466.003144654088" />
        <NodeLayout
          Size="230,42"
          Id="Package\Internaciones Partos por Benef"
          TopLeft="43.3141509433962,334.430817610063" />
        <NodeLayout
          Size="261,42"
          Id="Package\Internaciones Psiquiatricas por Benef"
          TopLeft="27.8141509433962,531.789308176101" />
        <NodeLayout
          Size="255,42"
          Id="Package\Internaciones Quirúrgicas por Benef"
          TopLeft="30.8141509433962,268.64465408805" />
        <NodeLayout
          Size="235,42"
          Id="Package\Internaciones Totales por Benef"
          TopLeft="40.8141509433962,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="158.314150943396,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="158.314150943396,113.286163522013">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.314150943396,179.072327044025">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="158.314150943396,244.858490566038">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="158.314150943396,310.64465408805">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="158.314150943396,376.430817610063">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="158.314150943396,442.216981132076">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220126"
              Start="0,0"
              End="0,16.2861635220126">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220126" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="158.314150943396,508.003144654088">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220125"
              Start="0,0"
              End="0,16.2861635220125">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220125" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="158.314150943396,573.789308176101">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.7861635220125"
              Start="0,0"
              End="0,16.2861635220125">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.2861635220125" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>