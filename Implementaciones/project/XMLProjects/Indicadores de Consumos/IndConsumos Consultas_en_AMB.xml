<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/7/2015 10:01:28 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\pgonzalez"
  DTS:DTSID="{F54806E8-9472-4069-9277-009C4A28F10D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="IndConsumos Consultas_en_AMB"
  DTS:PackageType="5"
  DTS:VersionBuild="94"
  DTS:VersionGUID="{F4A6F4AE-98C3-4D44-893D-735B73DAB36A}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{F76BAFF5-B884-4068-829F-34F5136F15FD}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{F76BAFF5-B884-4068-829F-34F5136F15FD}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\AUX Ind Consultas en AMB"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{9315f7b5-77b7-47f6-b81a-6dc866c82f8f}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="AUX Ind Consultas en AMB"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A3223EA0-900E-4B20-A33F-FDC7A3B40426}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Indicador Int , @Periodo Int, @Fecha Datetime, @Periodo_Anterior Int&#xA;        SET @Indicador = 1&#xA;        SET @Periodo = (select MAX(id_periodo) from DW_SALUD.dbo.AUX_PERIODO_MES_BORRA_IND_CONSUMOS)&#xA;        SET @Fecha = (select MAX(id_fecha) from D_FECHA where id_periodo = @Periodo )&#xA;        SET @Periodo_Anterior = (select dbo.PeriodoAnterior(@Fecha))&#xA;&#x9;&#x9;&#xA;---- Consumos............&#xA;&#xA; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA; (id_periodo, id_ind_consumo, id_persona, nro_orden, id_tipo_orden, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_reintegro, id_sexo, edad_orden, edad_periodo, id_rango_edad, id_acreedor, nro_cursograma, Nro_Lote, nro_secuencia, id_prestacion, id_rubro_ind_consumo, cant_practicas_indicador, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA; SELECT id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, ' ' as id_provincia, 0 as id_posicion, S.id_reintegro, 'X' as id_sexo, S.edad_orden, 0 as edad_periodo, 0 as id_rango_edad, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, sum(cant_prest_amb_pag) as cant_practicas_indicador, S.id_empresa_PE_cons as id_empresa_PE_ind, S.id_tipo_entidad_PE_cons as id_tipo_entidad_PE_ind, S.id_marca_PE_cons as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA; FROM DW_SALUD.dbo.H_ORD_AMB_DET S&#xA; JOIN DW_SALUD.dbo.D_PRESTACION A on S.id_prestacion = A.id_prestacion&#xA; JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL P on P.id_producto_original = S.id_producto&#xA; JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = S.id_producto and PL.id_plan_producto_original = S.id_plan_producto&#xA; WHERE A.id_rubro_ind_consumo in ('A') /* Rubro Consultas en AMB */&#xA;   and id_clase_producto_original in ('S')&#xA;   and S.id_origen_prestacion in ('A') /* Solo Ambulatorio. */&#xA;   and id_periodo = @Periodo&#xA;   and S.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;   and P.id_segmento_original not in (3)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;   and S.ccosto1 = 1&#xA; GROUP BY S.id_periodo, S.id_persona, S.nro_orden, S.id_tipo_orden, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_posicion_prestacion, S.id_reintegro, S.edad_orden, S.id_acreedor, S.nro_cursograma, S.Nro_Lote, S.nro_secuencia, S.id_prestacion, A.id_rubro_ind_consumo, S.id_empresa_PE_cons, S.id_tipo_entidad_PE_cons, S.id_marca_PE_cons, S.id_convenio, S.id_tipo_entidad_convenio&#xA; HAVING sum(cant_prest_amb_pag) &gt; 0&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;&#x9;&#x9;JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;&#x9;&#x9;and P.id_periodo = C.id_periodo&#xA;&#x9;&#x9;JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita and P.id_rubro_ind_consumo = RC.id_rubro_ind_consumo&#xA;&#x9;&#x9;WHERE id_ind_consumo = @Indicador &#xA; &#xA;   /* Calcula Sexo, Posicion, Provincia y Edad Periodo*/&#xA;&#xA;     UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST&#xA;     SET id_sexo = P.id_sexo,&#xA;     id_posicion = LA.id_posicion,&#xA;     id_provincia = LA.id_provincia,&#xA;     id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;     FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST I&#xA;     JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;     JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;     WHERE id_ind_consumo = @Indicador&#xA;&#xA;  /* Marca en el Data de Consumos las practicas tomadas para luego utilizar las metricas de importes desde Consumos que no están a nivel de Indicadores. */&#xA;&#xA;   UPDATE H_ORD_AMB_DET set consumo_indicador = 0 &#xA;   FROM H_ORD_AMB_DET C&#xA;   JOIN D_PRESTACION P on C.id_prestacion = P.id_prestacion&#xA;   WHERE id_periodo = @Periodo and P.id_rubro_ind_consumo in ('A') /* Rubro Consultas en AMB */&#xA;&#xA;   UPDATE H_ORD_AMB_DET&#xA;    set consumo_indicador = 1&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_PREST P&#xA;   JOIN H_ORD_AMB_DET C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.nro_cursograma = C.nro_cursograma and P.Nro_Lote = C.Nro_Lote and P.nro_secuencia = C.nro_secuencia&#xA;   JOIN DW_SALUD.dbo.D_PRODUCTOS_ORIGINAL PR on PR.id_producto_original = P.id_producto&#xA;   JOIN DW_SALUD.dbo.D_PLANES_ORIGINAL PL on PL.id_producto_original = P.id_producto and PL.id_plan_producto_original = P.id_plan_producto&#xA;   JOIN D_PRESTACION PRE on P.id_prestacion = PRE.id_prestacion&#xA;   WHERE id_clase_producto_original in ('S')&#xA;    and P.id_reintegro in ('F','R','C') /* No se tiene en cuenta ajustes. Capitas si pero solo porque en Consumos venian registros de prestaciones como Capita pero eran Facturacion. */&#xA;    and PR.id_segmento_original not in (3)&#xA;    and id_ind_consumo = @Indicador&#xA;    and C.id_periodo = @Periodo&#xA;    and PRE.id_rubro_ind_consumo in ('A') /* Rubro Consultas en AMB */&#xA;&#xA;---- Capitas.........&#xA;&#xA; INSERT INTO DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA; (id_periodo, id_ind_consumo, id_persona, id_producto, id_subproducto, id_plan_producto, id_provincia, id_posicion, id_sexo, edad_periodo, id_rango_edad, cant_afiliados_indicador, id_periodo_real, id_empresa_PE_ind, id_tipo_entidad_PE_ind, id_marca_PE_ind, id_convenio, id_tipo_entidad_convenio)&#xA; SELECT @Periodo as id_periodo, @Indicador as id_ind_consumo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, 'X' as id_provincia, 0 as id_posicion, 'X' id_sexo, S.edad_periodo, 0 as id_rango_edad, SUM(S.comer_cant_grupo_activo) as cant_afiliados_indicador, S.id_periodo as id_periodo_real, S.id_empresa_PE as id_empresa_PE_ind, S.id_tipo_entidad_PE as id_tipo_entidad_PE_ind, S.id_marca_PE as id_marca_PE_ind, S.id_convenio, S.id_tipo_entidad_convenio&#xA; FROM DW_SALUD.dbo.H_COMER_STOCK_AFILIA S&#xA; JOIN DW_SALUD.dbo.D_PRODUCTOS P on P.id_producto = S.id_producto&#xA; JOIN DW_SALUD.dbo.D_PLANES PL on PL.id_producto = S.id_producto and PL.id_plan_producto = S.id_plan_producto&#xA; WHERE id_periodo = @Periodo_Anterior&#xA;   and id_clase_producto in ('S')&#xA;   and PL.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;   and not exists (select FP.id_producto, FP.id_plan_producto from FILTRO_PLAN_PRODUCTO FP where FP.id_producto = S.id_producto and FP.id_plan_producto = S.id_plan_producto) /* Filtros de Tablero. */&#xA;   and not ((S.id_producto=4 and S.id_plan_producto='PMO  ') /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA;    or  (S.id_producto=35 and S.id_plan_producto='PMO  ')) /* A demás del filtro de planes (igual a Tablero) aqui tampoco tomamos PMO. */&#xA; GROUP BY S.id_periodo, S.id_persona, S.id_producto, S.id_subproducto, S.id_plan_producto, S.edad_periodo, S.id_empresa_PE, S.id_tipo_entidad_PE, S.id_marca_PE, S.id_convenio, S.id_tipo_entidad_convenio&#xA;&#xA;  /* Marca en el Data Comercial las Personas tomadas para luego utilizar la relacion con Stock desde Comercial que no están a nivel de Indicadores. */&#xA;&#xA;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 0 WHERE id_periodo = @Periodo_Anterior&#xA;&#xA;   UPDATE H_COMER_STOCK_AFILIA set cant_personas_capita = 1&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD CA on P.id_persona = CA.id_persona and P.id_producto = CA.id_producto and P.id_plan_producto = CA.id_plan_producto -- Lo relaciona para sacar la capita&#xA;   JOIN H_COMER_STOCK_AFILIA C on P.id_periodo_real = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = CA.id_capita&#xA;   WHERE id_ind_consumo = @Indicador and C.id_periodo = @Periodo_Anterior and RC.id_rubro_ind_consumo in ('A')&#xA;&#xA;   /* Borra las personas que están capitadas en Consultas. */ &#xA;   &#xA;   -- A diferencia de Consumos aqui primero marca en el Data y luego elimina las personas de la auxiliar.&#xA;&#xA;   DELETE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;   FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI P&#xA;   JOIN Consultas_DW.dbo.AUX_H_PERSONAS_CAPITAS_SALUD C on P.id_periodo = C.id_periodo and P.id_persona = C.id_persona and P.id_producto = C.id_producto and P.id_plan_producto = C.id_plan_producto&#xA;   JOIN RUBROS_COBERTURAS_CAPITAS RC on RC.id_capita = C.id_capita&#xA;   WHERE id_ind_consumo = @Indicador and RC.id_rubro_ind_consumo in ('A')&#xA;&#xA;  /* Calcula Sexo, Posicion y Provincia */&#xA;&#xA;&#x9;UPDATE DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI&#xA;&#x9;&#x9;SET id_sexo = P.id_sexo,&#xA;&#x9;&#x9;&#x9;id_posicion = LA.id_posicion,&#xA;&#x9;&#x9;&#x9;id_provincia = LA.id_provincia,&#xA;&#x9;&#x9;&#x9;id_localidad_indicador_consumo = P.id_localidad_afiliado&#xA;&#x9;FROM DW_SALUD.dbo.AUX_H_INDICADORES_CONS_CANT_AFI I&#xA;&#x9;JOIN DW_SALUD.dbo.D_PERSONAS P on P.id_persona = I.id_persona&#xA;&#x9;JOIN DW_SALUD.dbo.D_LOCALIDADES_AFILIADO LA on LA.id_localidad_afiliado = P.id_localidad_afiliado&#xA;&#x9;WHERE id_ind_consumo = @Indicador&#xA;&#xA;&#xA; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="214,42"
          Id="Package\AUX Ind Consultas en AMB"
          TopLeft="5.5,6.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>