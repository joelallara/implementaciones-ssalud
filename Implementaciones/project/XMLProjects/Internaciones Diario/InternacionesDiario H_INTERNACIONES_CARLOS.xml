<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/3/2019 11:48:57 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\jtrinchier"
  DTS:DTSID="{79BD2B5F-4BA9-475F-A32B-1A7B4523D3D5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="InternacionesDiario H_INTERNACIONES_CARLOS"
  DTS:PackageType="5"
  DTS:VersionBuild="45"
  DTS:VersionGUID="{195B7132-AE08-436C-B11A-F7976A1BDECE}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{438D06AC-8576-4863-9F1D-51EBC1E6756E}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{438D06AC-8576-4863-9F1D-51EBC1E6756E}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza D_USUARIO_AUDITOR y D_USUARIO_CARGA"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{80671BA8-6549-4820-A54D-63BA867F299E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza D_USUARIO_AUDITOR y D_USUARIO_CARGA"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{87B3EF38-D424-4CA0-9B98-F49ED069F118}"
          SQLTask:SqlStatementSource="---- H_INTERNACIONES_CARLOS&#xA;&#xA; /* Actualiza la D_USUARIO_AUDITOR */&#xA;&#xA;--- Carga las id_usuario_auditor que no estan en d_usuario_auditor en una temporal&#xA;select distinct id_usuario_auditor &#xA;into #temp_internaciones_auditor&#xA;from H_INTERNACIONES_CARLOS&#xA;where id_usuario_auditor not in (select id_usuario_auditor from D_USUARIO_AUDITOR&#xA;group by id_usuario_auditor)&#xA;&#xA;--- Insert los campos nuevos a la D_USUARIO_AUDITOR&#xA;insert into D_USUARIO_AUDITOR  &#xA;(id_usuario_auditor, de_usuario_auditor, id_categoria_usuario_auditor)&#xA;select t.id_usuario_auditor as id_usuario_auditor , t.id_usuario_auditor as de_usuario_auditor,&#xA;' ' as id_categoria_usuario_auditor&#xA;from #temp_internaciones_auditor  t&#xA;&#xA;/* Actualiza la D_USUARIO_CARGA */&#xA;&#xA;--- Carga las id_usuario_auditor que no estan en D_USUARIO_CARGA en una temporal&#xA;select distinct id_usuario_auditor &#xA;into #temp_internaciones_auditor_carga&#xA;from H_INTERNACIONES_CARLOS&#xA;where id_usuario_auditor not in (select id_usuario_carga from D_USUARIO_CARGA&#xA;group by id_usuario_carga)&#xA;&#xA;&#xA;--- Insert los campos nuevos a la D_USUARIO_CARGA&#xA;insert into D_USUARIO_CARGA &#xA;(id_usuario_carga, de_usuario_carga, id_categoria_usuario_carga)&#xA;select t.id_usuario_auditor as id_usuario_carga , t.id_usuario_auditor as de_usuario_carga,&#xA;' ' as id_categoria_usuario_carga&#xA;from #temp_internaciones_auditor_carga t&#xA;&#xA; /* Actualiza la D_USUARIO_AUDITOR */&#xA;&#xA;--- Carga las id_Usuario_Operador_Auditor que no estan en d_usuario_auditor en una temporal&#xA;select distinct id_Usuario_Operador_Auditor &#xA;into #temp_internaciones_Operador_Auditor &#xA;from H_INTERNACIONES_CARLOS&#xA;where id_Usuario_Operador_Auditor not in (select id_usuario_auditor from D_USUARIO_AUDITOR&#xA;group by id_usuario_auditor)&#xA;&#xA;&#xA;--- Insert los campos nuevos a la D_USUARIO_AUDITOR&#xA;insert into D_USUARIO_AUDITOR  &#xA;(id_usuario_auditor, de_usuario_auditor, id_categoria_usuario_auditor)&#xA;select t.id_Usuario_Operador_Auditor as id_usuario_auditor , t.id_Usuario_Operador_Auditor as de_usuario_auditor,&#xA;' ' as id_categoria_usuario_auditor&#xA;from #temp_internaciones_Operador_Auditor  t&#xA;&#xA;&#xA;/* Actualiza la D_USUARIO_CARGA */&#xA;&#xA;--- Carga las id_Usuario_Operador_Auditor que no estan en D_USUARIO_CARGA en una temporal&#xA;select distinct id_Usuario_Operador_Auditor &#xA;into #temp_internaciones_Operador_auditor_carga&#xA;from H_INTERNACIONES_CARLOS&#xA;where id_Usuario_Operador_Auditor not in (select id_usuario_carga from D_USUARIO_CARGA&#xA;group by id_usuario_carga)&#xA;&#xA;--- Insert los campos nuevos a la D_USUARIO_CARGA&#xA;insert into D_USUARIO_carga &#xA;(id_usuario_carga, de_usuario_carga, id_categoria_usuario_carga)&#xA;select t.id_Usuario_Operador_Auditor as id_usuario_carga , t.id_Usuario_Operador_Auditor as de_usuario_carga,&#xA;' ' as id_categoria_usuario_carga&#xA;from #temp_internaciones_Operador_auditor_carga t&#xA;&#xA; /* Actualiza la D_USUARIO_AUDITOR */&#xA;&#xA;--- Carga las id_usuario_calificador_auditoria que no estan en d_usuario_auditor en una temporal&#xA;select distinct id_usuario_calificador_auditoria &#xA;into #temp_internaciones_calificador_Auditor &#xA;from H_INTERNACIONES_CARLOS&#xA;where id_usuario_calificador_auditoria not in (select id_usuario_auditor from D_USUARIO_AUDITOR&#xA;group by id_usuario_auditor)&#xA;&#xA;&#xA;--- Insert los campos nuevos a la D_USUARIO_AUDITOR&#xA;insert into D_USUARIO_AUDITOR  &#xA;(id_usuario_auditor, de_usuario_auditor, id_categoria_usuario_auditor)&#xA;select t.id_usuario_calificador_auditoria as id_usuario_auditor , &#xA;t.id_usuario_calificador_auditoria as de_usuario_auditor,&#xA;' ' as id_categoria_usuario_auditor&#xA;from #temp_internaciones_calificador_Auditor  t&#xA;&#xA; /* Actualiza la D_USUARIO_CARGA */&#xA;&#xA;--- Carga las id_Usuario_Operador_Auditor que no estan en D_USUARIO_CARGA en una temporal&#xA;select distinct id_usuario_calificador_auditoria &#xA;into #temp_internaciones_Operador_calificador_carga&#xA;from H_INTERNACIONES_CARLOS&#xA;where id_usuario_calificador_auditoria not in (select id_usuario_carga from D_USUARIO_CARGA&#xA;group by id_usuario_carga)&#xA;&#xA;&#xA;--- Insert los campos nuevos a la D_USUARIO_CARGA&#xA;insert into D_USUARIO_carga &#xA;(id_usuario_carga, de_usuario_carga, id_categoria_usuario_carga)&#xA;select t.id_usuario_calificador_auditoria as id_usuario_carga , t.id_usuario_calificador_auditoria as de_usuario_carga,&#xA;' ' as id_categoria_usuario_carga&#xA;from #temp_internaciones_Operador_calificador_carga t" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_INTERNACIONES_CARLOS 1 de 2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{2EA7AF08-69F2-452A-AA02-89F493BCB815}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_INTERNACIONES_CARLOS 1 de 2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{87B3EF38-D424-4CA0-9B98-F49ED069F118}"
          SQLTask:SqlStatementSource="-- historial de cambios&#xA;-- AQ 13.11.2019 -- se ajusta para T05-Internaciones-Nuevo&#xA;-- AQ 29.11.2019 -- se ajusta por nuevos Criterios Categoría Auditable a partir de 01/01/2020&#xA;-- AQ 03.01.2020 -- se ajusta para internaciones específicas de más de 2 días para nuevas categorías (13,14,15,16,18,19)&#xA;---- 29/04/2020, JFT. Cambie de lugar esta actualización porque necesitaba que el id_reintenación este actualizado para script del PASO 2. Paso del paso 2 al paso 1.&#xA;&#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;/* Calcula Periodos (Desde - Hasta) a procesar */&#xA;&#xA;&#x9;DECLARE @Periodo_Hasta Datetime&#xA;&#x9;SET @Periodo_Hasta = (SELECT MAX(Id_Fecha) from D_FECHA)&#xA;&#xA;&#x9;DECLARE @Periodo_Desde Datetime&#xA;&#x9;SET @Periodo_Desde = DATEADD(MONTH, -11, @Periodo_Hasta)&#xA;&#x9;---------------------------------------------------------&#xA;&#xA;&#x9;DECLARE @Periodo_Desde_INT INT&#xA;&#x9;SET @Periodo_Desde_INT = dbo.DevuelvePeriodo(@Periodo_Desde)&#xA;&#xA;&#x9;DECLARE @Periodo_Hasta_INT INT&#xA;&#x9;SET @Periodo_Hasta_INT = dbo.DevuelvePeriodo(@Periodo_Hasta)&#xA;&#xA;&#xA;&#xA;--- Actualiza Fecha ingreso Sancor Salud, tomando la info de H_COMER_STOCK_AFILIA&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;UPDATE [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS] SET fecha_ingreso_Sancor_Salud = case isdate(S.fecha_ingreso_sancor_salud) WHEN 1 THEN S.fecha_ingreso_sancor_salud  WHEN 0 THEN '1900-01-01' END&#xA;FROM [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS] I&#xA;INNER JOIN H_COMER_STOCK_AFILIA S ON I.id_persona = S.id_persona AND I.id_producto = S.id_producto AND I.id_plan_producto = S.id_plan_producto AND S.id_periodo in (Select MAX(id_periodo) from H_COMER_STOCK_AFILIA) &#xA;&#xA;&#xA;update [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS]&#xA; set edad_orden = case isdate(Fecha_Nacimiento) when 0 then 0 else datediff(YEAR, Fecha_Nacimiento, a11.fecha_internacion) end&#xA; from [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS] a11 inner join D_PERSONAS t on (a11.id_persona = t.id_persona)&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS SET edad_orden = 0 WHERE edad_orden IS NULL&#xA;&#xA;&#xA;-- Calculo Días Transcurridos &#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cant_dias_transcurridos  = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN fecha_alta_internacion is null and getdate() &gt; fecha_internacion THEN datediff(dd, fecha_internacion, getdate())&#xA;&#x9;&#x9;WHEN NOT(fecha_alta_internacion is null) AND fecha_alta_internacion &lt;&gt; fecha_internacion THEN datediff(dd, fecha_internacion, fecha_alta_internacion)&#xA;&#x9;    WHEN NOT(fecha_alta_internacion is null) AND fecha_alta_internacion = fecha_internacion THEN 1&#xA;&#x9;&#x9;WHEN fecha_alta_internacion is null AND convert(char(10), fecha_internacion, 120) = convert(char(10), getdate(), 120) THEN 1&#xA;&#x9;ELSE Null&#xA;END&#xA;&#xA;&#xA;-- Calculo diferencia de dias entre Fecha Internacion y fecha recepcion internacion &#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;update H_internaciones_carlos set diferencia_fecha_int_recep = isnull(dbo.DiasHabiles(fecha_internacion, fecha_recep_int),0)&#xA;update H_internaciones_carlos set diferencia_fecha_int_recep = 0 WHERE diferencia_fecha_int_recep &lt; 0&#xA;&#xA;&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_estado_recepcion  = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN diferencia_fecha_int_recep &lt;&gt; 0 THEN 1&#xA;&#x9;ELSE 2&#xA;END&#xA;&#xA;---Ojo esta forma de resolver la edad de la orden tomando de Internaciones cabecera no es confiable&#xA;---debido a que a veces la orden no se encuentra en consumo &#xA;---UPDATE H_INTERNACIONES_CARLOS SET edad_orden = IC.edad_orden&#xA;---FROM H_INTERNACIONES_CARLOS I&#xA;---INNER JOIN H_ORD_INT_CAB IC ON IC.id_orden_int = I.nro_orden AND I.id_persona = IC.id_persona AND I.id_tipo_orden = IC.id_tipo_orden &#xA;&#xA;---UPDATE [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS] SET edad_orden = s.edad_periodo&#xA;---from [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS] I&#xA;---inner join H_COMER_STOCK_AFILIA S ON I.id_persona = S.id_persona and s.id_periodo = i.id_periodo&#xA;&#xA;-- Calculo diferencia de dias entre Fecha recepcion internacion y fecha carga&#xA;&#xA;UPDATE H_internaciones_carlos set diferencia_fecha_recep_carga = isnull(datediff(dd, fecha_recep_int, fecha_proceso_orden),0)&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_estado_carga_internacion  = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN fecha_recep_int &lt; Fecha_Proceso_Orden THEN 1&#xA;&#x9;&#x9;WHEN id_estado_carga_internacion = 0 THEN 2&#xA;&#x9;ELSE 2&#xA;END&#xA;&#xA;---- Se agrego este cambio 16 de Mayo 2017&#xA;&#xA;--- Genera Temp para actualizar el campo &quot;cant_visitas_ejecutivos_atencion&quot;&#xA;&#xA;Select id_posicion_no_facturador, pedido, sum(cant_visitas) as cant_visitas_ejecutivos_atencion &#xA;INTO #SUM_VISITA_EJECUTIVOS_ATENCION&#xA;FROM H_VISITAS_INTERNACIONES&#xA;where id_usuario_auditor = 'MROCCHICCI' or id_usuario_auditor = 'PCUEZZO' or  id_usuario_auditor = 'RHERMIDA' &#xA;or id_usuario_auditor = 'ATORNATORE' or id_usuario_auditor = 'VARGANIARA' or id_usuario_auditor = 'VDAMETTO' &#xA;or id_usuario_auditor = 'MCARMELE' or id_usuario_auditor = 'EVALLEJOS' or id_usuario_auditor = 'MBENEJAM'&#xA;GROUP BY id_usuario_auditor, id_posicion_no_facturador, pedido&#xA;&#xA;&#xA;--- Actualizacion en  h_internaciones_carlos al campo &quot;cant_visitas_ejecutivos_atencion&quot;&#xA;&#xA;Update h_internaciones_carlos &#xA;set cant_visitas_ejecutivos_atencion = s.cant_visitas_ejecutivos_atencion&#xA;from H_INTERNACIONES_CARLOS H&#xA;inner join #SUM_VISITA_EJECUTIVOS_ATENCION S on (H.id_posicion_no_facturador = S.ID_POSICION_NO_FACTURADOR&#xA;AND H.pedido = S.pedido)&#xA;&#xA;---- Se agrego este cambio 26 de Mayo 2017&#xA;&#xA;--- Actualiza el campo cant_int_con_visitas_ejecutivos_atencion de H_INTERNACIONES_CARLOS&#xA;&#xA;Update H_INTERNACIONES_CARLOS set  cant_int_con_visitas_ejecutivos_atencion = 1&#xA;FROM H_INTERNACIONES_CARLOS&#xA;where cant_visitas_ejecutivos_atencion &gt; 0&#xA;&#xA;-- Calculo atributo id_estado_internacion (Activa - Vencida - Vencida Mas de 5 Dias)&#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_estado_internacion   = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN fecha_alta_internacion is null and dateadd(dd, cant_dias_aut_total, fecha_internacion) &gt; getdate() THEN 'A'&#xA;&#x9;&#x9;WHEN fecha_alta_internacion is null and datediff(dd, dateadd(dd, cant_dias_aut_total, fecha_internacion), getdate())  &lt;= 3 AND id_estado_internacion = 'R' THEN 'V'&#xA;&#x9;&#x9;WHEN fecha_alta_internacion is null and datediff(dd, dateadd(dd, cant_dias_aut_total, fecha_internacion), getdate())  &gt; 3 AND id_estado_internacion = 'R' THEN 'X'&#x9;&#x9;&#xA;&#x9;    WHEN NOT(fecha_alta_internacion IS NULL) THEN 'C'&#xA;&#x9;ELSE 'C'&#xA;END&#xA;&#xA;&#xA;--Nuevo criterio para el calculo del estado de recepcion a partir del 15/03/2018, tolera un dia de diferencia en la recepcion&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_estado_recepcion_nuevo_criterio   = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN diferencia_fecha_int_recep &gt; 1 THEN 1&#xA;&#x9;ELSE 2&#xA;END&#xA;&#xA;&#xA;declare @ultimoperiodo int&#xA;set @ultimoperiodo = (select MAX(id_periodo) from H_INTERNACIONES_CARLOS)&#xA;declare @periodo13 int&#xA;set @periodo13 = dbo.PeriodosAnteriores(@ultimoperiodo,13)&#xA;&#xA;/* La marca de reporte consumo es 1 cuando: el periodo esta en los ultimos 13 meses y esta internado o&#xA;el tipo de internacion es DISTINTO a domiciliaria y psiquiatrica*/&#xA;/* La marca de reporte consumo es 2 cuando: el periodo esta en los ultimos 13 meses y &#xA;el tipo de internacion es domiciliaria y psiquiatrica O es menor a los ultimos 13 meses y sigue internado*/&#xA;-- La marca de reporte consumo es 0 cuando: es anterior a los ultimos 13 meses y esta cerrada &#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET [id_marca_reporte_consumos_futuros]  = &#xA;&#x9;CASE&#xA;&#x9;WHEN id_periodo &gt;= @periodo13 and (id_estado_internacion = 'C' or id_tipo_internacion not in('CD','CP')) THEN 1&#xA;&#x9;    WHEN (id_periodo &gt;= @periodo13 and (id_estado_internacion not in ('C') and id_tipo_internacion in('CD','CP')))&#xA;&#x9;or (id_periodo &lt; @periodo13 and (id_estado_internacion not in ('C')))  THEN 2&#xA;&#x9;&#x9;WHEN id_periodo &lt; @periodo13 and id_estado_internacion  in ('C') THEN 0&#xA;&#x9;ELSE 0&#xA;END&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;/*  Actualizaciones del PASO 2  */&#xA;&#xA;&#xA;-- Actualizo si una persona estuvo internada más de una vez en el último año &#xA;-- Modificación hecha el 19/01 por Liliana Alasia (No considerar los RN como persona reincidente) &#xA;-- No considerar en los contadores los que fecha de internacion es menor al periodo desde porque&#xA;-- dan mas de 365 dias y no se muestra bien el dato&#xA;&#xA;&#xA;update h_internacioneS_carlos set id_persona_reincidente = IsNull(Internaciones_Persona.cantidad_internaciones, 1) - 1&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, count(*) as cantidad_internaciones from h_internacioneS_carlos &#xA;where id_periodo between @Periodo_desde_INT AND @Periodo_hasta_INT&#xA;and id_tipo_internacion &lt;&gt; 'RN' and (datediff(DAY, fecha_alta_internacion, getdate())) &lt;= 365&#xA;group by id_persona&#xA;having count(*) &gt; 1) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona&#xA;&#xA;-- Actualizo Fecha Actualización&#xA;&#xA;UPDATE h_internacioneS_carlos set fecha_actualizacion_internaciones = CONVERT(CHAR(10),getdate(),120)&#xA;&#xA;-- Busco los formularios 4 asociados a los formularios 6 y veo si se marcaron como AUDITABLES los formularios 4 &#xA;&#xA;UPDATE h_internacioneS_carlos set id_empresa_auditoria = A.O03EMP&#xA;FROM h_internacioneS_carlos I&#xA;INNER JOIN [HOST03].[HOST03].[DWHSMPD].[AFORMU4] A ON I.nro_orden = A.OW1NOR AND I.id_persona = A.OW1NPE&#xA;WHERE I.id_empresa_auditoria = 0&#xA;&#xA;&#xA;-- Actualizo si es una internación PROLONGADA o NO &#xA;---- 26/09/2017, se cambio por pedido de Jorge Lombardo que la cantidad id_internacion_prolongada debe ser igual o mayor a 30 días &#xA;&#xA;---- 06/02/2018, se cambio por pedido que la cantidad id_internacion_prolongada debe ser mayor a 30 días&#xA; &#xA;UPDATE h_internacioneS_carlos set id_internacion_prolongada = 'S'&#xA;FROM h_internacioneS_carlos I&#xA;WHERE cant_dias_aut_total &gt;  30&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_prolongada = 'N'&#xA;FROM h_internacioneS_carlos I&#xA;WHERE id_internacion_prolongada Is NULL&#xA;&#xA;-- Actualizo si una internación fue VISITADA o NO&#xA;&#xA;UPDATE h_internacioneS_carlos set cant_internacion_visitada = 1&#xA;FROM h_internacioneS_carlos I&#xA;WHERE (cant_visitas_medicas &gt; 0)&#xA;&#xA;UPDATE h_internacioneS_carlos set cant_internacion_visitada = 0&#xA;FROM h_internacioneS_carlos I&#xA;WHERE (cant_visitas_medicas = 0)&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set cantidad_int_plan_activo = 1&#xA;where id_plan_producto in ('P500','P1000','P2000','P3000','P4000')&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set cantidad_int_plan_activo = 0&#xA;where cantidad_int_plan_activo is NULL&#xA;&#xA;&#xA;---- 29/04/2020, JFT. Cambie de lugar estas actualizaciones porque necesitaba que el id_reintenación este actualizado para script del PASO 2. Paso del paso 2 al paso 1.&#xA;&#xA;--- Cálculo de marca si es una reinternación con derivación. Estos casos se &#xA;--- excluirán de las marcas de reinternaciones. Es para eliminar los duplicados que pueden ser errores de carga.  &#xA;&#xA;update h_internacioneS_carlos set id_marca_con_derivacion = 0&#xA;&#xA;select id_persona, fecha_internacion, COUNT(*) as cant, MIN(nro_orden) as minimo&#xA;INTO #paso2&#xA;from H_INTERNACIONES_CARLOS &#xA;where id_tipo_internacion &lt;&gt; 'RN'&#xA;group by id_persona, fecha_internacion&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set id_marca_con_derivacion = 1&#xA;from H_INTERNACIONES_CARLOS I inner join #paso2 p2 &#xA;on (i.id_persona = p2.id_persona and i.nro_orden = minimo)&#xA;where cant &gt; 1&#xA;&#xA;drop table #paso2&#xA;&#xA;&#xA;/*Actualizacion de campos id_reinternacion , id_internacion_c_reinternacion , cant_dias_reinternacion */&#xA;&#xA;-- Actualizo aquellas interanciones que tienen reinternaciones dentro de los 30 dias&#xA;&#xA;update h_internacioneS_carlos set id_reinternacion = 0&#xA;&#xA;update h_internacioneS_carlos set id_internacion_c_reinternacion = 0 &#xA;update h_internaciones_carlos set cant_dias_reinternacion = 0 &#xA;&#xA;update h_internacioneS_carlos set id_internacion_c_reinternacion = CASE WheN IsNull(Internaciones_Persona.cant_internaciones, 0) = 0 THEN 0 ELSE 1 END,&#xA;cant_dias_reinternacion = Internaciones_Persona.cant_dias_aut_total&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, fecha_alta_internacion, cant_internaciones, cant_dias_aut_total from h_internacioneS_carlos &#xA;where id_tipo_internacion &lt;&gt; 'RN' &#xA;AND id_marca_con_derivacion = 0&#xA;AND NOT(fecha_alta_internacion IS NULL) &#xA;&#xA;) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona AND Internaciones_Persona.fecha_alta_internacion &gt; H.fecha_alta_internacion AND Internaciones_Persona.fecha_alta_internacion &lt;= DATEADD(DAY,30,H.fecha_alta_internacion) &#xA;where id_marca_con_derivacion = 0 and id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;update h_internaciones_carlos set cant_dias_reinternacion = 0 where cant_dias_reinternacion is null&#xA;&#xA;&#xA;-- Actualizo aquellas internaciones que son reinternacion de otra dentro de los 30 dias&#xA;&#xA;update h_internacioneS_carlos set id_reinternacion = CASE WHEN IsNull(Internaciones_Persona.cant_internaciones, 0) = 0 THEN 0 ELSE 1 END&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, fecha_alta_internacion, cant_internaciones from h_internacioneS_carlos &#xA;where id_tipo_internacion &lt;&gt; 'RN' &#xA;and id_marca_con_derivacion = 0&#xA;AND NOT(fecha_alta_internacion IS NULL)&#xA;&#xA;) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona AND Internaciones_Persona.fecha_alta_internacion &lt; H.fecha_alta_internacion AND Internaciones_Persona.fecha_alta_internacion &gt;= DATEADD(DAY,-30,H.fecha_alta_internacion) &#xA;where id_marca_con_derivacion = 0 AND id_tipo_internacion &lt;&gt; 'RN'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_INTERNACIONES_CARLOS 2 de 2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{fe78ed98-252d-474a-a461-945f9ab36073}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_INTERNACIONES_CARLOS 2 de 2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{87B3EF38-D424-4CA0-9B98-F49ED069F118}"
          SQLTask:SqlStatementSource="-- historial de cambios&#xA;-- AQ 29.11.2019 -- se fracciona Query en 2 pasos&#xA;-- AQ 05.12.2019 -- se adiciona nueva columna cant_int_auditable_y_visitada_total para nuevo fact&#xA;-- AQ 16.12.2019 se actualiza 'id_periodo_anual_internaciones' para tener siempre mes actual y anterior&#xA;-- AQ 29.01.2020 se actualiza meses 'en Gestión'&#xA;---- 29/04/2020, JFT. Cambie de lugar esta actualización de id_categoria_auditable porque se necesitaba que el id_reintenación este actualizado. Paso del paso 1 al paso 2.&#xA;&#xA;-- Actualizo si una internación debe ser AUDITADA o NO en base a la cantidad de dìas totales autorizados &#xA;-- Cálculo vigente hasta el 31/10/2015&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S', &#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where [cant_dias_aut_total] &gt;= 3 AND id_diagnostico &lt;&gt; 'O82' and id_periodo &lt; 201511&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'N',&#xA;id_categoria_auditable = 0&#xA;FROM h_internacioneS_carlos I where [cant_dias_aut_total] &lt; 3 AND id_diagnostico &lt;&gt; 'O82' and id_periodo &lt; 201511&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where [cant_dias_aut_total] &gt;= 4 AND id_diagnostico = 'O82' and id_periodo &lt; 201511&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'N',&#xA;id_categoria_auditable = 0&#xA;FROM h_internacioneS_carlos I where [cant_dias_aut_total] &lt; 4 AND id_diagnostico = 'O82' and id_periodo &lt; 201511&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where edad_orden &gt; 65   -- Si es mayor a 65 años and id_periodo &lt; 201511&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where id_reinternacion = 1  and id_periodo &lt; 201511 -- Si es una reinternación dentro de los 30 dias.&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'RN'  and id_periodo &lt; 201511 -- Si es Neonatologia &#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S', &#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where cantidad_int_plan_activo &gt; 0  and id_periodo &lt; 201511 -- Si es un plan de Activo&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'CP'  and id_periodo &lt; 201511  -- Si es internacion Psiquiatrica&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 10&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'CD' and id_periodo &lt; 201511  -- Si es internacion Domiciliaria&#xA;&#xA;&#xA;--- Actualizo si una internación debe ser AUDITADA o NO en base a nuevo cálculo vigente a partir del 1/11/2015&#xA;-- Cálculo vigente hasta el 30/11/2019 (La nueva es a partir del 01/01/2020)  &#xA;-- AQ 29.11.2019&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 1&#xA;FROM h_internacioneS_carlos I where cant_dias_aut_total &gt;= 3 AND id_diagnostico &lt;&gt; 'O82' &#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'N',&#xA;id_categoria_auditable = 0&#xA;FROM h_internacioneS_carlos I where cant_dias_aut_total &lt; 3 AND id_diagnostico &lt;&gt; 'O82'&#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- Si la internación es cesárea, es auditable cuando la cantidad de dias autorizado total &#xA;--- supera los 4 días&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 2&#xA;FROM h_internacioneS_carlos I where [cant_dias_aut_total] &gt;= 4 AND id_diagnostico = 'O82'&#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'N',&#xA;id_categoria_auditable = 0&#xA;FROM h_internacioneS_carlos I where cant_dias_aut_total &lt; 4 AND id_diagnostico = 'O82'&#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si es mayor de 65 años y la cantidad de dias autorizados total supera o es igual a 3 dias&#xA;--- se graba la categoria de auditable 3&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 3&#xA;FROM h_internacioneS_carlos I where edad_orden &gt;= 65 and cant_dias_aut_total &gt;= 3   &#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si es reinternación y la cantidad de días autorizados total supera o es igual a 3 días &#xA;--- se graba la categoría de auditable 8&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 8&#xA;FROM h_internacioneS_carlos I where id_reinternacion = 1 and id_internacion_auditable_calculada = 'S' &#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si es internación RN y la cantidad de días autorizados total supera o es igual a 3 dias &#xA;--- se graba la categoría de auditable 6&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 6&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'RN' and cant_dias_aut_total &gt;= 3 &#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si es plan activo, es auditable &#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 7&#xA;FROM h_internacioneS_carlos I where cantidad_int_plan_activo &gt; 0&#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si la internacion es Psiquiatrica y cantidad de días autorizados total supera o es igual a 3 &#xA;--- días, poner categoria auditable = 5&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 5&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'CP' and cant_dias_aut_total &gt;= 3 &#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si la internacion es domiciliaria y cantidad de días autorizados total supera o es igual a &#xA;--- 3 días, poner categoria auditable = 9&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 9&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'CD' and cant_dias_aut_total &gt;= 3&#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si el diagnostico de la internacion es posible caso severo y la cantidad de días autorizados&#xA;--- total supera o es igual a 3 días &#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 4&#xA;FROM h_internacioneS_carlos I &#xA;INNER JOIN d_diagnostico D on (i.id_diagnostico = d.id_diagnostico) &#xA;where id_marca_severo = 'S' and cant_dias_aut_total &gt;= 3 and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;--- si es Internacion Domiciliaria y tiene marca de discapacitado = 'S' no es auditable&#xA;UPDATE h_internaciones_carlos set id_internacion_auditable_calculada = 'N', &#xA;id_categoria_auditable = 0&#xA;FROM h_internaciones_carlos I &#xA;INNER JOIN D_PERSONAS D on (i.id_persona = d.id_persona) &#xA;where d.Discapacitado = 'S' and i.id_tipo_internacion = 'CD'  &#xA;and id_periodo &gt;= 201511 and id_periodo &lt; 202001&#xA;&#xA;&#xA;-- AQ 29.11.2019 -- Comienzo nuevo criterio categoría auditable a partir de 01.12.2019&#xA;--- Actualizo si una internación debe ser AUDITADA o NO en base a nuevo cálculo vigente a partir del 01/01/2020&#xA;-- AQ 29.11.2019 -- Ajuste para agregar nueva validación a partir del 01.01.2020&#xA;-- si es plan activo, NO se comporta más de forma particular, entra en la validación general&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 11 -- Nueva Categoria 'Int. con &gt;= a 2 días aut.'&#xA;FROM h_internacioneS_carlos I where cant_dias_aut_total &gt;= 2 AND id_tipo_internacion NOT IN ('P', 'CE') &#xA;and id_periodo &gt;= 202001 &#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'N',&#xA;id_categoria_auditable = 0&#xA;FROM h_internacioneS_carlos I where cant_dias_aut_total &lt; 2 AND id_tipo_internacion NOT IN ('P', 'CE') &#xA;and id_periodo &gt;= 202001&#xA;&#xA;&#xA;--- Si la internación es parto o cesárea, es auditable cuando la cantidad de dias autorizado total &#xA;--- supera los 4 días&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'S',&#xA;id_categoria_auditable = 12  -- Nueva Categoria 'Parto o Cesárea con &gt;= a 4 días aut. '&#xA;FROM h_internacioneS_carlos I where [cant_dias_aut_total] &gt;= 4 AND id_tipo_internacion IN ('P', 'CE') &#xA;and id_periodo &gt;= 202001&#xA;&#xA;UPDATE h_internacioneS_carlos set id_internacion_auditable_calculada = 'N',&#xA;id_categoria_auditable = 0&#xA;FROM h_internacioneS_carlos I where cant_dias_aut_total &lt; 4 AND id_tipo_internacion IN ('P', 'CE') &#xA;and id_periodo &gt;= 202001&#xA;&#xA;&#xA;-- VALIDACIONES EXISTENTES con mayor precisión, es decir, ingresan en nuevo criterio y se especializan con los que ya estaban:&#xA;-- AQ 03.01.2020 -- se ajusta para internaciones específicas de más de 2 días para nuevas categorías (13,14,15,16,18,19)&#xA;--- si es mayor de 65 años y la cantidad de dias autorizados total supera o es igual a 3 dias&#xA;--- se graba la categoria de auditable 3&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 13&#xA;FROM h_internacioneS_carlos I where edad_orden &gt;= 65 and cant_dias_aut_total &gt;= 3   &#xA;and id_periodo &gt;= 202001&#xA;&#xA;--- si es reinternación y la cantidad de días autorizados total supera o es igual a 3 días &#xA;--- se graba la categoría de auditable 8&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 18&#xA;FROM h_internacioneS_carlos I where id_reinternacion = 1 and id_internacion_auditable_calculada = 'S' &#xA;and id_periodo &gt;= 202001&#xA;&#xA;--- si es internación RN y la cantidad de días autorizados total supera o es igual a 3 dias &#xA;--- se graba la categoría de auditable 6&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 16&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'RN' and cant_dias_aut_total &gt;= 3 &#xA;and id_periodo &gt;= 202001&#xA;&#xA;&#xA;--- si la internacion es Psiquiatrica y cantidad de días autorizados total supera o es igual a 3 &#xA;--- días, poner categoria auditable = 5&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 15&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'CP' and cant_dias_aut_total &gt;= 3 &#xA;and id_periodo &gt;= 202001&#xA;&#xA;--- si la internacion es domiciliaria y cantidad de días autorizados total supera o es igual a &#xA;--- 3 días, poner categoria auditable = 9&#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 19&#xA;FROM h_internacioneS_carlos I where id_tipo_internacion = 'CD' and cant_dias_aut_total &gt;= 3&#xA;and id_periodo &gt;= 202001&#xA;&#xA;--- si el diagnostico de la internacion es posible caso severo y la cantidad de días autorizados&#xA;--- total supera o es igual a 3 días &#xA;UPDATE h_internacioneS_carlos set id_categoria_auditable = 14&#xA;FROM h_internacioneS_carlos I &#xA;INNER JOIN d_diagnostico D on (i.id_diagnostico = d.id_diagnostico) &#xA;where id_marca_severo = 'S' and cant_dias_aut_total &gt;= 3 and id_periodo &gt;= 202001&#xA;&#xA;--- si es Internacion Domiciliaria y tiene marca de discapacitado = 'S' no es auditable&#xA;UPDATE h_internaciones_carlos set id_internacion_auditable_calculada = 'N', &#xA;id_categoria_auditable = 0&#xA;FROM h_internaciones_carlos I &#xA;INNER JOIN D_PERSONAS D on (i.id_persona = d.id_persona) &#xA;where d.Discapacitado = 'S' and i.id_tipo_internacion = 'CD'  &#xA;and id_periodo &gt;= 202001 &#xA;-- AQ 29.11.2019 -- Fin nuevo criterio categoría auditable a partir de 01.01.2020&#xA;&#xA;&#xA;-- Actualizo la fecha de ingreso al segmento de la persona&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS SET fecha_ingreso_segmento_internaciones = S.fecha_ingreso_segmento_comercial&#xA;from H_INTERNACIONES_CARLOS I &#xA;&#x9;INNER JOIN h_Comer_Stock_afilia S ON I.id_persona = S.id_persona &#xA;&#x9;&#x9;AND S.id_periodo in (Select MAX(id_periodo) from H_comer_stock_Afilia)&#xA;&#xA;&#xA;---- Actualizo si una persona estuvo internada más de una vez dentro de los ùltimos 30 dias&#xA;&#xA;update h_internacioneS_carlos set id_clasificacion_reinternaciones = 1&#xA;where NOT(fecha_alta_internacion is null) AND datediff(DAY, fecha_alta_internacion, getdate()) between 0 and 30&#xA;and id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;---- Actualizo si una persona estuvo internada más de una vez dentro de los ùltimos 60 días&#xA;&#xA;update h_internacioneS_carlos set id_clasificacion_reinternaciones = 2&#xA;where NOT(fecha_alta_internacion is null) AND datediff(DAY, fecha_alta_internacion, getdate()) between 31 and 60 &#xA;and id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;---- Actualizo si una persona estuvo internada más de una vez dentro de los ùltimos 90 días &#xA;&#xA;update h_internacioneS_carlos set id_clasificacion_reinternaciones = 3&#xA;where NOT(fecha_alta_internacion is null) AND datediff(DAY, fecha_alta_internacion, getdate()) between 61 and 90 &#xA;and id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;---- Actualizo si una persona estuvo internada más de una vez en el rango de 90 días y 365 &#xA;&#xA;update h_internacioneS_carlos set id_clasificacion_reinternaciones = 4&#xA;where NOT(fecha_alta_internacion is null) AND datediff(DAY, fecha_alta_internacion, getdate()) between 91 and 365 &#xA;and id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;---- Actualizo si una persona estuvo internada más de una vez pero no se conoce de alguna internación la fecha de alta &#xA;&#xA;update h_internacioneS_carlos set id_clasificacion_reinternaciones = 5&#xA;where (fecha_alta_internacion is null) and id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;&#xA;------- Actualizacion Posicion Establecimiento Asistencial&#xA;&#xA;----update H_INTERNACIONES_CARLOS&#xA;----set id_posicion_estab_asist = lo.id_posicion&#xA;----from H_INTERNACIONES_CARLOS I &#xA;----inner join D_NO_FACTURADOR NF on (i.id_no_facturador = NF.id_no_facturador and NF.id_tipo_Prestador = I.id_tipo_prestador)&#xA;----inner join D_LOCALIDADES LO on (NF.id_localidad_no_facturador = LO.id_localidad)&#xA;&#xA;&#xA;&#xA;--select * from H_INTERNACIONES_CARLOS where id_persona = 442&#xA;-- Actualizo si las reinternaciones fueron en diferente Establecimiento Asistencial o Igual&#xA;&#xA;-------------------------------------------and (datediff(DAY, fecha_alta_internacion, getdate())) between 0 and 60&#xA;&#xA;--update h_internacioneS_carlos set id_reinternacion_igual_est = IsNull(Internaciones_Persona.cant_no_facturador, 0)&#xA;--from h_internacioneS_carlos H&#xA;--LEFT OUTER JOIN (&#xA;&#xA;--select id_persona, count(distinct id_no_facturador) as  cant_no_facturador from h_internacioneS_carlos &#xA;--where id_periodo in (201403, 201404, 201405, 201406, 201407, 201408, 201409, 201410, 201411, 201412, 201501, 201502, 201503)&#xA;--and id_tipo_internacion &lt;&gt; 'RN'&#xA;--group by id_persona) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona&#xA;&#xA;&#xA;--- Actualizar el campo cant_internaciones_casos_severos &#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set cant_internaciones_caso_severo = 1&#xA;from H_INTERNACIONES_CARLOS I inner join D_DIAGNOSTICO D on (i.id_diagnostico = d.id_diagnostico)&#xA;where d.id_marca_severo = 'S'&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set cant_internaciones_caso_severo = 0&#xA;from H_INTERNACIONES_CARLOS I inner join D_DIAGNOSTICO D on (i.id_diagnostico = d.id_diagnostico)&#xA;where d.id_marca_severo = 'N'&#xA;&#xA;&#xA;--- Actualizacion Posicion NO Facturador&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set id_posicion_no_facturador = lo.id_posicion&#xA;from H_INTERNACIONES_CARLOS I &#xA;inner join D_NO_FACTURADOR NF on (i.id_no_facturador = NF.id_no_facturador and NF.id_tipo_Prestador = I.id_tipo_prestador)&#xA;inner join D_LOCALIDADES LO on (NF.id_localidad_no_facturador = LO.id_localidad)&#xA;&#xA;---- Actualizo Rangos de Reinternacion dentro de 30 / 60 / 90 o más dias&#xA;&#xA;update h_internacioneS_carlos set id_rango_reinternacion_30_dias = 0&#xA;update h_internacioneS_carlos set id_rango_reinternacion_60_dias = 0&#xA;update h_internacioneS_carlos set id_rango_reinternacion_90_dias = 0&#xA;update h_internacioneS_carlos set id_rango_reinternacion_mas90_dias = 0&#xA;&#xA;&#xA;update h_internacioneS_carlos set id_rango_reinternacion_30_dias = CASE WHEN IsNull(Internaciones_Persona.cant_internaciones, 0) = 0 THEN 0 ELSE 1 END&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, fecha_alta_internacion, cant_internaciones from h_internacioneS_carlos &#xA;where id_tipo_internacion &lt;&gt; 'RN' &#xA;and id_marca_con_derivacion = 0&#xA;AND NOT(fecha_alta_internacion IS NULL)&#xA;&#xA;) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona AND Internaciones_Persona.fecha_alta_internacion &gt; H.fecha_alta_internacion AND Internaciones_Persona.fecha_alta_internacion &lt;= DATEADD(DAY,30,H.fecha_alta_internacion) &#xA;where id_marca_con_derivacion = 0 AND id_tipo_internacion &lt;&gt; 'RN'&#xA;&#xA;update h_internacioneS_carlos set id_rango_reinternacion_60_dias = CASE WHEN IsNull(Internaciones_Persona.cant_internaciones, 0) = 0 THEN 0 ELSE 1 END&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, fecha_alta_internacion, cant_internaciones from h_internacioneS_carlos &#xA;where id_tipo_internacion &lt;&gt; 'RN' &#xA;and id_marca_con_derivacion = 0&#xA;AND NOT(fecha_alta_internacion IS NULL)&#xA;&#xA;) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona AND Internaciones_Persona.fecha_alta_internacion &gt; DATEADD(DAY,30,H.fecha_alta_internacion)  AND Internaciones_Persona.fecha_alta_internacion &lt;= DATEADD(DAY,60,H.fecha_alta_internacion) &#xA;where id_marca_con_derivacion = 0 AND id_tipo_internacion &lt;&gt; 'RN'&#xA;AND id_rango_reinternacion_30_dias = 0&#xA;&#xA;update h_internacioneS_carlos set id_rango_reinternacion_90_dias = CASE WHEN IsNull(Internaciones_Persona.cant_internaciones, 0) = 0 THEN 0 ELSE 1 END&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, fecha_alta_internacion, cant_internaciones from h_internacioneS_carlos &#xA;where id_tipo_internacion &lt;&gt; 'RN' &#xA;and id_marca_con_derivacion = 0&#xA;AND NOT(fecha_alta_internacion IS NULL)&#xA;&#xA;) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona AND Internaciones_Persona.fecha_alta_internacion &gt; DATEADD(DAY,60,H.fecha_alta_internacion) AND Internaciones_Persona.fecha_alta_internacion &lt;= DATEADD(DAY,90,H.fecha_alta_internacion) &#xA;where id_marca_con_derivacion = 0 AND id_tipo_internacion &lt;&gt; 'RN'&#xA;AND id_rango_reinternacion_60_dias = 0 AND id_rango_reinternacion_30_dias = 0&#xA;&#xA;update h_internacioneS_carlos set id_rango_reinternacion_mas90_dias = CASE WHEN IsNull(Internaciones_Persona.cant_internaciones, 0) = 0 THEN 0 ELSE 1 END&#xA;from h_internacioneS_carlos H&#xA;LEFT OUTER JOIN (&#xA;&#xA;select id_persona, fecha_alta_internacion, cant_internaciones from h_internacioneS_carlos &#xA;where id_tipo_internacion &lt;&gt; 'RN' &#xA;and id_marca_con_derivacion = 0&#xA;AND NOT(fecha_alta_internacion IS NULL)&#xA;&#xA;) Internaciones_Persona ON H.id_persona = Internaciones_Persona.id_persona AND Internaciones_Persona.fecha_alta_internacion &gt; DATEADD(DAY,90,H.fecha_alta_internacion)&#xA;where id_marca_con_derivacion = 0 AND id_tipo_internacion &lt;&gt; 'RN'&#xA;AND id_rango_reinternacion_90_dias = 0 AND id_rango_reinternacion_60_dias = 0 AND id_rango_reinternacion_30_dias = 0&#xA;&#xA;/* Actualizar campo cantidad_int_auditables_no_visitadas utilizada en alertas de semaforos */&#xA;update H_INTERNACIONES_CARLOS&#xA;set cantidad_int_auditables_no_visitadas = 1&#xA;where cant_internacion_visitada = 0 and id_internacion_auditable_calculada = 'S'&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set cantidad_int_auditables_no_visitadas = 0&#xA;where cant_internacion_visitada is null&#xA;&#xA;&#xA;/* Actualiza id_empresa_auditoria con los datos de los formularios 60 relacionados */&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_empresa_auditoria = A.O03EMP&#xA;FROM [HOST03].[HOST03].[DWHSMPD].[AVINF60A] A INNER JOIN H_INTERNACIONES_CARLOS H ON (H.nro_orden=A.OW1NOR)&#xA;WHERE H.id_tipo_orden = A.OW1TOR&#xA;AND A.O03EMP &lt;&gt; 0&#xA;&#xA;&#xA;/* Actualiza id_empresa_auditoria con los datos de los formularios 6  relacionados con formulario 4*/&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_empresa_auditoria = A.O03EMP&#xA;FROM [HOST03].[HOST03].[DWHSMPD].[AVINF04A] A INNER JOIN H_INTERNACIONES_CARLOS H ON (H.nro_orden=A.OW1NOR)&#xA;AND A.O03EMP &lt;&gt; 0&#xA;&#xA;/* Actualiza Marca de Calidad de la Auditoria Médica en una Internación */&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_calidad_auditoria = A.W3ICOD,&#xA;&#x9;id_usuario_calificador_auditoria = W31UCA,&#xA;&#x9;fecha_carga_calificacion_auditoria = CONVERT(datetime, convert(varchar(10), W31FAU))&#xA;FROM HOST03.HOST03.DWHSMPD.AAUDITOR A INNER JOIN H_INTERNACIONES_CARLOS H ON (A.W31PED=H.pedido)&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_calidad_auditoria = '',&#xA;&#x9;id_usuario_calificador_auditoria = '',&#xA;&#x9;fecha_carga_calificacion_auditoria = ''&#xA;where id_calidad_auditoria is null&#xA;&#xA;/* Actualiza cantidades para luego sumarlas y ver cuantas hay completas y cuantas incompletas*/&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cantidad_int_auditoria_completa   = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN id_calidad_auditoria = 'C' THEN 1&#xA;&#x9;ELSE 0&#xA;END&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cantidad_int_auditoria_incompleta  = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN id_calidad_auditoria = 'I' THEN 1&#xA;&#x9;ELSE 0&#xA;END&#xA;&#xA;/*Se establece el 1 cuando audired contacto o dejo registro de info respecto de dicha internacion */&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cant_int_con_contacto_audired = 0&#xA;&#xA;-- AQ 13.11.2019 -- se ajusta para que tome directamente de H_VISITAS_INTERNACIONES con usuario AUDIRED&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cant_int_con_contacto_audired = 1&#xA;--FROM H_INTERNACIONES_CARLOS C INNER JOIN H_AUDIRED A ON (C.id_tipo_orden=A.Id_Tipo_Orden AND C.nro_orden=A.Id_Orden_Int)&#xA;--WHERE C.id_tipo_orden = 6&#xA;FROM H_INTERNACIONES_CARLOS AUD&#xA;inner join H_VISITAS_INTERNACIONES VIS on (AUD.nro_orden = VIS.nro_orden AND AUD.pedido = VIS.pedido)&#xA;WHERE VIS.id_usuario_auditor = 'AUDIRED'&#xA;&#xA;&#xA;-- AQ 13.11.2019 -- Nueva columna cant_int_visitadas_total&#xA;-- si hay un 1 en alguno de estos campos: 'cant_internacion_visitada' o 'cant_int_con_contacto_audired', este campo vale 1&#xA;UPDATE H_INTERNACIONES_CARLOS SET cant_int_visitadas_total = 0&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cant_int_visitadas_total = 1&#xA;FROM h_internacioneS_carlos I&#xA;WHERE cant_internacion_visitada = 1 or cant_int_con_contacto_audired = 1&#xA;&#xA;-- AQ 05.12.2019 -- Nueva columna cant_int_auditable_y_visitada_total&#xA;-- si hay un 1 en alguno de estos campos: 'cant_internacion_visitada' o 'cant_int_con_contacto_audired', este campo vale 1 y si id_internacion_calculada es 'S'&#xA;UPDATE H_INTERNACIONES_CARLOS SET cant_int_auditable_y_visitada_total = 0&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET cant_int_auditable_y_visitada_total = 1&#xA;FROM h_internacioneS_carlos I&#xA;WHERE id_internacion_auditable_calculada = 'S' AND&#xA;&#x9;(CASE&#xA;&#x9;&#x9;WHEN id_empresa_auditoria  = 1 and cant_int_con_contacto_audired = 1 THEN 1&#x9;-- AUDIRED&#xA;&#x9;&#x9;WHEN id_empresa_auditoria &lt;&gt; 1 and cant_internacion_visitada&#x9; = 1 THEN 1&#x9;-- SS&#xA;&#x9;&#x9;ELSE 0&#xA;&#x9;END) = 1&#xA;&#xA;&#xA;&#xA;/* Información de consumos recibidos por cada formulario 6. &#xA;Suma el total pagado al prestador para todas las prestaciones de cada formulario 6 relacionado.*/&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET total_facturacion_internacion = sumaPrest&#xA;FROM H_INTERNACIONES_CARLOS H&#xA;INNER JOIN (SELECT id_orden_relacionada, id_tipo_orden_relacionada, sum(imp_prest_int_pag) AS sumaPrest&#xA;&#x9;&#x9;&#x9;FROM H_ORD_INT_DET&#xA;&#x9;&#x9;&#x9;WHERE ccosto3 = 1&#xA;&#x9;&#x9;&#x9;GROUP BY id_orden_relacionada, id_tipo_orden_relacionada) AS I&#xA;ON (H.nro_orden=I.id_orden_relacionada AND H.id_tipo_orden=I.id_tipo_orden_relacionada)&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET total_facturacion_internacion = 0&#xA;WHERE total_facturacion_internacion IS NULL&#xA;&#xA;&#xA;--- Se agregaron nuevas id_producto  12 de Junio 2017&#xA;/*Marca con 1 los afiliados de staff y con 0 el resto*/&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_marca_afiliado_staff = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN id_producto IN (1, 18, 19, 16, 20, 4, 35, 73) THEN 0&#xA;&#x9;&#x9;WHEN id_producto IN (43, 44, 62, 68, 72, 78, 83) THEN 1&#xA;END&#xA;&#xA;&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_periodo_fecha_internacion = dbo.DevuelvePeriodo(fecha_internacion)&#xA;&#xA;&#xA;/* Actualiza el periodo de fecha alta internacion --- AQ 02/08/2019&#xA;se ajusta para actualizar nuevo campo id_periodo_fecha_alta_internacion */&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_periodo_fecha_alta_internacion = dbo.DevuelvePeriodo(fecha_alta_internacion)&#xA;where fecha_alta_internacion is not null&#xA;&#xA;&#xA;&#xA;/* Ingresa la cantidad de dias (cant_dias_reales) para todos los valores donde la fecha de alta de internacion no es nulo y es mayor a la internacion*/&#xA;update H_INTERNACIONES_CARLOS&#xA;set cant_dias_reales = DATEDIFF ( day  , fecha_internacion, fecha_alta_internacion )&#xA;from H_INTERNACIONES_CARLOS&#xA;where fecha_alta_internacion is  not null  AND fecha_alta_internacion &gt; fecha_internacion&#xA;&#xA;/*Se le da el valor de cant_dias_aut_total a los campos de cant_dias_reales en los cuales existe el valor 0*/&#xA;update H_INTERNACIONES_CARLOS&#xA;set cant_dias_reales = cant_dias_aut_total&#xA;from H_INTERNACIONES_CARLOS&#xA;where cant_dias_reales = 0&#xA;&#xA;&#xA;&#xA;/* Actualiza D_Usuario_Auditor y D_Usuario_carga , 4 campos de proyecto empresa , marca prox_int_cd  */&#xA;&#xA;&#xA; ---- Actualiza los 4 campos cruzando por id_persona y id_periodo_fecha_internacion &#xA; update H_INTERNACIONES_CARLOS  set id_empresa_PE_int = H.id_empresa_PE,&#xA; id_tipo_entidad_PE_int = H.id_tipo_entidad_PE, &#xA; id_marca_PE_int = H.id_marca_PE, &#xA; id_convenio_especial_int = H.id_convenio_especial&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  inner join H_COMER_STOCK_AFILIA H on C.id_persona = H.id_persona  &#xA; and H.id_periodo = C.id_periodo_fecha_internacion&#xA;&#xA;--- Crea una tabla &quot;Faltantes_Internaciones_PE&quot; con los registros que no se actualizan en el paso anterior&#xA;if exists (select * from sysobjects where name = 'Faltantes_Internaciones_PE')&#xA;  begin&#xA;     drop table Faltantes_Internaciones_PE&#xA;  end&#xA;--- Corregir id_periodo_fecha_internacion periodo que pasan &#xA;declare @Periodo int&#xA;set @Periodo = (select max(id_periodo) from DW_SALUD.dbo.H_COMER_STOCK_AFILIA)  &#xA;-----------------------------------------------------------------------&#xA;&#xA;select max(ST.id_periodo) as id_periodo, I.id_persona&#xA;into Faltantes_Internaciones_PE&#xA;from DW_SALUD.dbo.H_INTERNACIONES_CARLOS I&#xA;inner join DW_SALUD.dbo.H_COMER_STOCK_AFILIA ST on ST.id_persona = I.id_persona&#xA;where ST.id_periodo &lt; @Periodo &#xA;and i.id_marca_PE_int is null &#xA;group by I.id_persona&#xA;&#xA;&#xA; -- AQ 16.12.2019 se actualiza 'id_periodo_anual_internaciones' para tener siempre mes actual y anterior&#xA;    -- AQ 29.01.2020 primero paso a 0 los que estén en Gestión porque son sólo los últimos 2 meses 'en Gestión'&#xA;&#x9;UPDATE D_PERIODO set id_periodo_anual_internaciones = 0 where id_periodo_anual_internaciones = 4 -- En Gestión&#xA;&#x9;UPDATE D_PERIODO set id_periodo_anual_internaciones = 4 -- En Gestión&#xA;&#x9;WHERE id_periodo in (select top 2 H.id_periodo from H_INTERNACIONES_CARLOS H group by  H.id_periodo order by H.id_periodo desc)&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_PRORROGAS_INTERNACIONES con info de Internaciones Auditores"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{76F6561A-5AFB-449C-991B-EC4229361F85}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_PRORROGAS_INTERNACIONES con info de Internaciones Auditores"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{87B3EF38-D424-4CA0-9B98-F49ED069F118}"
          SQLTask:SqlStatementSource="--- Se actualiza en el PASO 2&#xA;&#xA;&#xA;/* Actualizar Periodo Prorroga en base a la Fecha de Proceso de las mismas */&#xA;UPDATE H_PRORROGAS_INTERNACIONES&#xA;SET id_periodo = dbo.DevuelvePeriodo(Fecha_Proceso_Orden)&#xA;&#xA;/* Actualizar No facturador de las Prorrogas */&#xA;UPDATE H_PRORROGAS_INTERNACIONES&#xA;SET id_no_facturador = INT.id_no_facturador,&#xA; id_tipo_prestador = INT.id_tipo_prestador,&#xA; id_posicion_no_facturador = INT.id_posicion_no_facturador&#xA; FROM H_PRORROGAS_INTERNACIONES PROR inner join  H_INTERNACIONES_CARLOS INT ON &#xA; (INT.nro_orden  = PROR.nro_orden and INT.pedido =  PROR.pedido)&#xA; &#xA;/* Eliminar prorrogas sin nro de pedido y orden - Basura en el dato que llega */&#xA;DELETE H_PRORROGAS_INTERNACIONES where pedido = 0&#xA; &#xA;&#xA;&#xA;&#xA; &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra y Carga la H_INTERNACIONES_CARLOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0E5A71F9-9C8F-450F-9F07-0269B5A97C13}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra y Carga la H_INTERNACIONES_CARLOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{87B3EF38-D424-4CA0-9B98-F49ED069F118}"
          SQLTask:SqlStatementSource="-- historial de cambios&#xA;-- AQ 13.11.2019 -- se ajusta para T05-Internaciones-Nuevo&#xA;&#xA;-- QINTERNA/DWHSMPP (O01MAU --&gt; T126FMOT/T26COD) (O03ENF --&gt; T65FDIA/T65COD) (O03EMP --&gt; P03FAUT/P03EMP)&#xA;-- AINTERNA/DWHSMPD&#xA;&#xA;-- QPRORROGA/DWHSMPP&#xA;-- APRORROGA/DWHSMPD&#xA;&#xA;-- QVISITA/DWHSMPP&#xA;-- AVISITA/DWHSMPD&#xA;&#xA;-- QFORMU4/DWHSMPP&#xA;-- AFORMU4/DWHSMPD&#xA;&#xA;-- NO EJECUTAR QDIASINTER/DWHSMPP&#xA;-- ADIASINTER/DWHSMPD&#xA;&#xA;-- COSTO x CIE10. En la tabla consumo_formularios_6 guardamos la historia de costo x cie10 guardando el atributo id_anual que considera los ùltimos 12 meses hasta el mes informado en id_anual. En la tabla H_COSTO_INTERNACIONES_CIE10 tenemos el ùltimo costo calculado.&#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;---- Borra la SUM_PRORROGA&#xA;&#xA;DROP TABLE SUM_PRORROGA&#xA;GO&#xA;&#xA;Select id_posicion_no_facturador, pedido , sum(cant_dias_estimados_prorrogas) as cant_dias_estimados_prorrogas, SUM(cant_dias_autorizados_prorrogas) as cant_dias_autorizados_prorrogas, COUNT(*) as cant_prorrogas&#xA;INTO SUM_PRORROGA&#xA;from H_PRORROGAS_INTERNACIONES&#xA;GROUP BY id_posicion_no_facturador, pedido&#xA;GO&#xA;&#xA;---- Borra la SUM_VISITA&#xA;&#xA;DROP TABLE SUM_VISITA&#xA;GO&#xA;&#xA;-- AQ 13.11.2019 -- se adiciona and id_usuario_auditor &lt;&gt; 'AUDIRED'&#xA;Select id_posicion_no_facturador, &#xA;pedido,&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xA;SUM(CASE WHEN id_tipo_visita = 'O' and id_usuario_auditor &lt;&gt; 'AUDIRED' THEN 1 ELSE 0 END) as cant_visitas_observaciones, &#xA;SUM(CASE WHEN id_tipo_visita = 'M' and id_usuario_auditor &lt;&gt; 'AUDIRED' THEN 1 ELSE 0 END) as cant_visitas_medicas, &#xA;SUM(CASE WHEN id_tipo_visita = 'C' and id_usuario_auditor &lt;&gt; 'AUDIRED' THEN 1 ELSE 0 END) as cant_visitas_administrativas, &#xA;SUM(CASE WHEN id_tipo_visita = 'M' and id_usuario_auditor &lt;&gt; 'AUDIRED' THEN 1 ELSE 0 END)  as cant_visitas&#xA;INTO SUM_VISITA&#xA;FROM H_VISITAS_INTERNACIONES&#xA;GROUP BY id_posicion_no_facturador, pedido&#xA;GO&#xA;&#xA;/* NO SE USA Promedio de días de internación calculados por diagnóstico considerando internaciones desde ENE/2010&#xA;&#xA;DROP TABLE PROM_DIAS_INTERNACION&#xA;&#xA;select OW1ENF as cie10, SUM(ISNULL(W10DTO,0))/ISNULL(count(*),1) as prom_dias_internacion&#xA;INTO PROM_DIAS_INTERNACION&#xA;from [HOST03].[HOST03].[DWHSMPD].[ADIASINTER]&#xA;group by OW1ENF */&#xA;&#xA;---- Borra la H_INTERNACIONES_CARLOS&#xA;&#xA;TRUNCATE TABLE H_INTERNACIONES_CARLOS&#xA;GO&#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;INSERT INTO [DW_SALUD].[dbo].[H_INTERNACIONES_CARLOS]&#xA;           ([id_periodo], [id_posicion_no_facturador]&#xA;           ,[pedido]&#xA;           ,[Afiliado]&#xA;           ,[Subnumero]&#xA;           ,[secuencia]&#xA;           ,[id_persona]&#xA;           ,[edad_orden]&#xA;           ,[fecha_ingreso_Sancor_Salud]&#xA;           ,[id_producto]&#xA;           ,[id_plan_producto]&#xA;           ,[id_subproducto]&#xA;           ,[id_tipo_orden]&#xA;           ,[Fecha_Autorizacion_Sistema]&#xA;           ,[Fecha_Proceso_Orden]&#xA;           ,[Fecha_Entrega_Orden]&#xA;           ,[posicion_auditoria]&#xA;           ,[id_entidad]&#xA;           ,[id_canal]&#xA;           ,[Id_Usuario_Operador_Auditor]&#xA;           ,[Fecha_Recepcion_Pedido_Medico]&#xA;           ,[Id_Motivo_Auditoria]&#xA;           ,[id_replica_orden]&#xA;           ,[id_prof_prescr]&#xA;           ,[id_tipo_profesional_preescribiente]&#xA;           ,[Fecha_Prescripcion]&#xA;           ,[id_no_facturador]&#xA;           ,[id_diagnostico]&#xA;           ,[id_tipo_prestador]&#xA;           ,[fecha_recep_int]&#xA;           ,[id_tipo_internacion]&#xA;           ,[nro_orden]&#xA;           ,[fecha_internacion]&#xA;           ,[id_dia_semana_internacion]&#xA;           ,[hora_internacion]&#xA;           ,[cant_dias_calculados]&#xA;           ,[cant_dias_estimados]&#xA;           ,[cant_dias_autorizados]&#xA;           ,[cant_dias_aut_total]&#xA;           ,[prom_dias_internacion]&#xA;           ,[fecha_alta_internacion]&#xA;           ,[hora_alta]&#xA;           ,[fallecido]&#xA;           ,[cant_internaciones]&#xA;           ,[cant_visitas]&#xA;           ,[cant_visitas_observaciones]&#xA;           ,[cant_visitas_medicas]&#xA;           ,[cant_visitas_administrativas]&#xA;           ,[cant_dias_autorizados_prorrogas]&#xA;           ,[cant_dias_estimados_prorrogas]&#xA;           ,[cant_prorrogas]&#xA;,[id_estado_internacion]&#xA;, [id_empresa_auditoria]&#xA;,[id_usuario_auditor], diferencia_fecha_int_recep, diferencia_fecha_recep_carga, id_estado_recepcion, id_estado_carga_internacion, cant_visitas_ejecutivos_atencion, cant_int_con_visitas_ejecutivos_atencion, id_empresa_PE_int, id_tipo_entidad_PE_int, id_marca_PE_int, id_convenio_especial_int  ,          mediana_diagnostico,        &#xA;mediana_diagpos,        &#xA;mediana_tipipos,&#xA;mediana_final,&#xA;mediana_diagnostico_ajus,             &#xA;mediana_diagpos_ajus,              &#xA;mediana_tipipos_ajus,                 &#xA;mediana_final_ajus, id_estado_recepcion_nuevo_criterio, id_marca_reporte_consumos_futuros, id_marca_prox_int_cd )&#xA;Select substring(cast(fecha_proceso as char(8)),1,6) as id_periodo, I.posicion as id_posicion_int , I.pedido, I.Afiliado, I.Subcuenta, I.secuencia, persona as id_persona, 0 as edad_orden, '1900-01-01' as fecha_ingreso_Sancor_Salud, producto as id_producto, [plan] as id_plan_producto, subproducto as id_subproducto, tipo_orden as id_tipo_orden, CASE Isdate(fecha_autorizacion) WHEN 1 THEN convert(datetime, cast(fecha_autorizacion as char(8)), 103) WHEN 0 THEN NULL END as Fecha_Autorizacion_Sistema, CASE Isdate(fecha_proceso) WHEN 1 THEN convert(datetime, cast(fecha_proceso as char(8)), 103) WHEN 0 THEN NULL END as Fecha_Proceso_Orden,  CASE Isdate(fecha_entrega) WHEN 1 THEN convert(datetime, cast(fecha_entrega as char(8)), 103) WHEN 0 THEN NULL END as Fecha_Entrega_Orden, posicion_auditoria as posicion_auditoria, entidad as id_entidad, canal as id_canal, auditor as Id_Usuario_Operador_Auditor, CASE isdate(fecha_recepcion_pedido_medico) WHEN 1 THEN convert(datetime, cast(fecha_recepcion_pedido_medico as char(8)), 103) WHEN 0 THEN NULL END as Fecha_Recepcion_Pedido_Medico, codigo_motivo_auditoria as Id_Motivo_Auditoria, replica_orden as id_replica_orden, preescribiente as id_prof_prescr, 'P' as id_tipo_profesional_preescribiente, CASE isdate(fecha_prescripcion) WHEN 1 THEN convert(datetime, cast(fecha_prescripcion as char(8)), 103) WHEN 0 THEN NULL END as Fecha_Prescripcion,  establecimiento_asistencial as id_no_facturador, CASE I.cie10 WHEN '' THEN 'D' ELSE I.cie10 END as id_diagnostico, tipo_prestador as id_tipo_prestador, CASE isdate(fecha_recepcion) WHEN 1 THEN convert(datetime, cast(fecha_recepcion as char(8)), 103) WHEN 0 THEN NULL END as fecha_recep_int, tipo_internacion as id_tipo_internacion, numero_orden_internacion as nro_orden, CASE isdate(fecha_internacion) WHEN 1 THEN convert(datetime, cast(fecha_internacion as char(8)), 103) WHEN 0 THEN NULL END as fecha_internacion, CASE datename(weekday,convert(datetime, cast(fecha_internacion as char(8)), 103)) WHEN 'Sunday' THEN 'Domingo' WHEN 'Monday' THEN 'Lunes' WHEN 'Tuesday' THEN 'Martes' WHEN 'Wednesday' THEN 'Miercoles' WHEN 'Thursday' THEN 'Jueves' WHEN 'Friday' THEN 'Viernes' WHEN 'Saturday' THEN 'Sábado' END as id_dia_semana_internacion, hora_internacion, Isnull(cant_dias_calculados,0), IsNull(cant_dias_estimados,0), IsNull(cant_dias_autorizados,0), IsNull(cant_dias_aut_total,0), 0 as prom_dias_internacion, CASE Isdate(fecha_alta) WHEN 1 THEN convert(datetime, cast(fecha_alta as char(8)), 103) WHEN 0 THEN NULL END as fecha_alta_internacion, hora_alta, fallecido , cant_internaciones, ISNull(cant_visitas,0) , IsNull(cant_visitas_observaciones,0) , IsNull(cant_visitas_medicas,0) , IsNull(cant_visitas_administrativas,0), ISNull(cant_dias_autorizados_prorrogas,0), ISNull(cant_dias_estimados_prorrogas,0), IsNull(cant_prorrogas,0), 'R' as id_estado_internacion, empresa as id_empresa_auditoria, usuario_auditor as id_usuario_auditor, 0 as diferencia_fecha_int_recep, 0 as diferencia_fecha_recep_carga, 0 as id_estado_recepcion,&#xA;0 as id_estado_carga_internacion, 0 as cant_visitas_ejecutivos_atencion, 0 as cant_int_con_visitas_ejecutivos_atencion, NULL AS id_empresa_PE_int,&#xA; NULL AS id_tipo_entidad_PE_int,&#xA; NULL AS id_marca_PE_int, &#xA;NULL AS id_convenio_especial_int,&#xA;0 as mediana_diagnostico,        &#xA; 0 as mediana_diagpos,        &#xA; 0 as mediana_tipipos,&#xA; 0 as mediana_final,&#xA; 0 as  mediana_diagnostico_ajus,             &#xA;0 as mediana_diagpos_ajus,              &#xA;0 as mediana_tipipos_ajus,                 &#xA;0 as mediana_final_ajus,&#xA;0 as id_estado_recepcion_nuevo_criterio,&#xA;0 as id_marca_reporte_consumos_futuros,&#xA;0 as  id_marca_prox_int_cd &#xA;FROM H_AINTERNA_INTERNACIONES I&#xA;LEFT OUTER JOIN SUM_PRORROGA PR ON I.posicion = PR.id_posicion_no_facturador AND I.pedido = PR.pedido&#xA;LEFT OUTER JOIN SUM_VISITA VI ON I.posicion = VI.id_posicion_no_facturador AND I.pedido = VI.pedido&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Proyecto y Linea Empresa"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{AC2B3B17-D3B1-44D1-B2CB-F4314F337979}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Proyecto y Linea Empresa"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{87B3EF38-D424-4CA0-9B98-F49ED069F118}"
          SQLTask:SqlStatementSource="------- Proyecto empresa vigente &#xA;&#xA;&#xA; ---- Actualiza los 4 campos cruzando por id_persona y id_periodo_fecha_internacion &#xA; update H_INTERNACIONES_CARLOS  set id_empresa_PE_int = H.id_empresa_PE,&#xA; id_tipo_entidad_PE_int = H.id_tipo_entidad_PE, &#xA; id_marca_PE_int = H.id_marca_PE, &#xA; id_convenio_especial_int = H.id_convenio_especial&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  inner join H_COMER_STOCK_AFILIA H on C.id_persona = H.id_persona &#xA;  INNER JOIN Faltantes_Internaciones_PE FAL on FAL.id_persona = C.id_persona and FAL.id_periodo = H.id_periodo &#xA;  and H.id_periodo &gt; 201511&#xA;  and c.id_periodo_fecha_internacion  &gt; 201511&#xA;   and id_marca_PE_int is null &#xA;&#xA;&#xA;&#xA;---- Actualiza con valores por defecto &#xA;&#xA;update H_INTERNACIONES_CARLOS  set id_empresa_PE_int = 0,&#xA; id_tipo_entidad_PE_int = 'I', &#xA; id_marca_PE_int = 0 , &#xA; id_convenio_especial_int = 0&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  where id_marca_PE_int is null&#xA;&#xA;update H_INTERNACIONES_CARLOS&#xA;set id_marca_PE_int = 9&#xA;where id_producto = 18 and id_marca_PE_int &lt;&gt; 9&#xA;&#xA;&#xA;------ A los casos superiores a 201511 y que no tienen datos de proyecto empresa va 7 individual&#xA;&#xA;update H_INTERNACIONES_CARLOS  set id_empresa_PE_int = 0,&#xA; id_tipo_entidad_PE_int = 'I', &#xA; id_marca_PE_int = 7 ,&#xA; id_convenio_especial_int = 0&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  where id_marca_PE_int = 0&#xA;and  id_convenio_especial_int = 0&#xA;           and id_periodo_fecha_internacion  &gt; 201511&#xA;&#xA; update H_INTERNACIONES_CARLOS&#xA; set id_marca_PE_int = 9&#xA; where id_producto = 18 and id_marca_PE_int &lt;&gt; 9 &#xA;&#xA;&#xA;------- Marca las internaciones domiciliarias que derivan de una internacion comun &#xA;&#xA;&#xA;--- aislo las internaciones que no son domiciliarias&#xA;select id_periodo_fecha_internacion, nro_orden, id_tipo_internacion, id_persona, &#xA;fecha_internacion, fecha_alta_internacion, &#xA;(fecha_alta_internacion - 2) as fecha_1,&#xA;(fecha_alta_internacion + 1) as fecha_2, 0 as marca&#xA;into #paso01&#xA;from H_INTERNACIONES_CARLOS H&#xA;where id_tipo_internacion &lt;&gt; 'CD' AND fecha_alta_internacion IS NOT NULL&#xA;group by id_periodo_fecha_internacion, nro_orden , id_tipo_internacion, id_persona,&#xA;fecha_internacion, fecha_alta_internacion&#xA;&#xA;--- Busco las domiciliarias de esas personas que pueden estar dentro de los rangos&#xA;--- de altas de las internaciones&#xA;select h.id_periodo_fecha_internacion, h.nro_orden, h.id_tipo_internacion, h.id_persona, &#xA;h.fecha_internacion, h.fecha_alta_internacion, 0 as marca&#xA;into #paso02&#xA;from H_INTERNACIONES_CARLOS H&#xA;inner join #paso01 pas on (h.id_persona = pas.id_persona)&#xA;where h.id_tipo_internacion = 'CD' and h.id_persona = pas.id_persona &#xA;and  h.fecha_internacion &gt;= pas.fecha_1 &#xA;and h.fecha_internacion &lt;= pas.fecha_2&#xA;group by h.id_periodo_fecha_internacion, h.nro_orden , h.id_tipo_internacion, h.id_persona,&#xA;h.fecha_internacion, h.fecha_alta_internacion&#xA;&#xA;--- marco las internaciones domiciliarias que antes tenian una internacion comun&#xA;update #paso02&#xA;set marca = 1&#xA;from #paso02 pas inner join #paso01 pas01 &#xA;on (pas.id_persona = pas01.id_persona)&#xA;where pas.id_persona = pas01.id_persona &#xA;and pas.fecha_internacion &gt;= pas01.fecha_1 and &#xA;pas.fecha_internacion &lt;= pas01.fecha_2&#xA;&#xA;--- inicializo&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_marca_prox_int_cd = 0&#xA;&#xA;--- actualizo en H_INTERNACIONES_CARLOS&#xA;UPDATE H_INTERNACIONES_CARLOS&#xA;SET id_marca_prox_int_cd = marca&#xA;from H_INTERNACIONES_CARLOS h&#xA;inner join #PASO02 pas&#xA;on (pas.nro_orden = h.nro_orden)&#xA;&#xA;&#xA;&#xA;----SETEA CONVENIOS&#xA;&#x9;Update H_INTERNACIONES_CARLOS&#xA;&#x9;set id_convenio = null,&#xA;&#x9;id_tipo_entidad_convenio = null&#xA;&#xA; update H_INTERNACIONES_CARLOS  &#xA; set id_convenio = H.id_convenio,&#xA; id_tipo_entidad_convenio = H.id_tipo_entidad_convenio&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  inner join H_COMER_STOCK_AFILIA H on C.id_persona = H.id_persona  &#xA; and H.id_periodo = C.id_periodo_fecha_internacion&#xA;&#xA;if exists (select * from sysobjects where name = 'Faltantes_Internaciones_PE')&#xA;  begin&#xA;     drop table Faltantes_Internaciones_PE&#xA;  end&#xA;&#xA;-----------------------------------------------------------------------&#xA;&#xA;select max(ST.id_periodo) as id_periodo, I.id_persona&#xA;into Faltantes_Internaciones_PE&#xA;from DW_SALUD.dbo.H_INTERNACIONES_CARLOS I&#xA;inner join DW_SALUD.dbo.H_COMER_STOCK_AFILIA ST on ST.id_persona = I.id_persona&#xA;where ST.id_periodo &lt; I.id_periodo_fecha_internacion&#xA;and i.id_convenio is null &#xA;group by I.id_persona&#xA;&#xA;&#xA;&#xA; update H_INTERNACIONES_CARLOS  set id_convenio = H.id_convenio,&#xA; id_tipo_entidad_convenio = H.id_tipo_entidad_convenio&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  inner join H_COMER_STOCK_AFILIA H on C.id_persona = H.id_persona &#xA;  INNER JOIN Faltantes_Internaciones_PE FAL on FAL.id_persona = C.id_persona and FAL.id_periodo = H.id_periodo &#xA;  and H.id_periodo &gt; 201511&#xA;  and c.id_periodo_fecha_internacion  &gt; 201511&#xA;   and  C.id_convenio is null &#xA;&#xA;update H_INTERNACIONES_CARLOS  set id_convenio = 0,&#xA; id_tipo_entidad_convenio = 'I'&#xA;  from H_INTERNACIONES_CARLOS C&#xA;  where   C.id_convenio is null or C.id_tipo_entidad_convenio is null&#xA;&#xA;&#xA;&#xA;delete from H_CONVENIOS_EMPRESAS where origen_informacion = 'inter'  &#xA;&#xA;&#xA;select distinct id_periodo,id_convenio,id_tipo_entidad_convenio,0 as id_periodo_maximo into #convenios_nuevos from h_internaciones_carlos h&#xA;where not exists  (select id_convenio ,id_tipo_entidad_convenio &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;from H_CONVENIOS_EMPRESAS C where h.id_periodo = &#x9;c.id_periodo and h.id_convenio = c.id_convenio and h.id_tipo_entidad_convenio = c.id_tipo_entidad_convenio) &#xA;&#xA;update #convenios_nuevos&#xA;set id_periodo_maximo = maximo_periodo from&#xA;#convenios_nuevos c inner join (&#xA;select t.id_convenio, max(h.id_periodo) as maximo_periodo from #convenios_nuevos t inner join H_CONVENIOS_EMPRESAS h on t.id_convenio = h.id_convenio&#xA;&#x9;and t.id_tipo_entidad_convenio = h.id_tipo_entidad_convenio&#xA;group by t.id_convenio) A on c.id_convenio = a.id_convenio&#xA;&#xA;&#xA;insert into H_CONVENIOS_EMPRESAS&#xA;select c.id_periodo ,c.id_convenio,c.id_tipo_entidad_convenio,e.id_subtipo_venta,id_rango_stock,id_rango_costo,id_blindaje,interes_comercial,es_mutual&#xA;,id_holding,'inter' from #convenios_nuevos c inner join H_CONVENIOS_EMPRESAS e&#xA;on  c.id_convenio = e.id_convenio and c.id_periodo_maximo = e.id_periodo and c.id_tipo_entidad_convenio = e.id_tipo_entidad_convenio&#xA; &#xA; drop table #convenios_nuevos&#xA;&#xA;&#xA;&#xA;select ws6naf as afiliado, ws6saf as subnumero, ws6sec as secuencia,  ws6fvp  as fecha_ingreso_sancor&#xA;into #temp_fecha_ingreso&#xA;from as400.host03.smplibd.M06FSAL&#xA;where ws6fvp &lt;&gt; 0&#xA;group by  ws6naf, ws6saf, ws6sec,ws6fvp&#xA;&#xA;&#xA;-- ACTUALIZA FECHA INGRESO SALUD EN ALTAS REALES&#xA;update H_INTERNACIONES_CARLOS      &#xA;set fecha_ingreso_Sancor_Salud = null&#xA;where id_periodo &gt;= 201601&#xA;&#xA;update H_INTERNACIONES_CARLOS     &#xA;set fecha_ingreso_Sancor_Salud = cast(t.fecha_ingreso_sancor as varchar) &#xA;from H_INTERNACIONES_CARLOS      h&#xA;inner join #temp_fecha_ingreso t on t.afiliado = h.afiliado and t.subnumero = h.subnumero and t.secuencia = h.secuencia&#xA;where h.id_periodo  &gt;= 201601&#xA;&#xA;update H_INTERNACIONES_CARLOS      &#xA;set fecha_ingreso_Sancor_Salud = '1900-01-01 00:00:00.000'&#xA;where id_periodo &gt;= 201601  and fecha_ingreso_Sancor_Salud is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0D4339AE-D36D-416B-8029-9736BF43B8A8}"
      DTS:From="Package\Borra y Carga la H_INTERNACIONES_CARLOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualiza H_INTERNACIONES_CARLOS 1 de 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{BD2389D0-F459-47DF-BCEB-EB34B941BC63}"
      DTS:From="Package\Actualiza H_INTERNACIONES_CARLOS 1 de 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Actualiza H_INTERNACIONES_CARLOS 2 de 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{FE45E748-A7A4-4CB5-BDA3-B30403FAB8E8}"
      DTS:From="Package\Actualiza D_USUARIO_AUDITOR y D_USUARIO_CARGA"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Actualiza H_PRORROGAS_INTERNACIONES con info de Internaciones Auditores" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{554B667E-2B17-4878-8D35-CD8D673640BF}"
      DTS:From="Package\Proyecto y Linea Empresa"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Actualiza D_USUARIO_AUDITOR y D_USUARIO_CARGA" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{591773E3-8B61-46A0-949D-8B763C2E650A}"
      DTS:From="Package\Actualiza H_INTERNACIONES_CARLOS 2 de 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Proyecto y Linea Empresa" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="367,42"
          Id="Package\Actualiza D_USUARIO_AUDITOR y D_USUARIO_CARGA"
          TopLeft="126.416666666667,318.764150943396" />
        <NodeLayout
          Size="316,42"
          Id="Package\Actualiza H_INTERNACIONES_CARLOS 1 de 2"
          TopLeft="166.916666666667,70.9905660377358" />
        <NodeLayout
          Size="316,42"
          Id="Package\Actualiza H_INTERNACIONES_CARLOS 2 de 2"
          TopLeft="157.916666666667,142" />
        <NodeLayout
          Size="484,42"
          Id="Package\Actualiza H_PRORROGAS_INTERNACIONES con info de Internaciones Auditores"
          TopLeft="67.9166666666667,405" />
        <NodeLayout
          Size="317,42"
          Id="Package\Borra y Carga la H_INTERNACIONES_CARLOS"
          TopLeft="164.416666666667,5.5" />
        <NodeLayout
          Size="208,42"
          Id="Package\Proyecto y Linea Empresa"
          TopLeft="205.916666666667,229" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="323.916666666667,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.4905660377358"
              Start="0,0"
              End="0,15.9905660377358">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.9905660377358" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="324.916666666667,112.990566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9,29.0094339622642"
              Start="0,0"
              End="-9,21.5094339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.5047169811321" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.5047169811321"
                    Point2="0,14.5047169811321"
                    Point3="-4,14.5047169811321" />
                  <mssgle:LineSegment
                    End="-5,14.5047169811321" />
                  <mssgle:CubicBezierSegment
                    Point1="-5,14.5047169811321"
                    Point2="-9,14.5047169811321"
                    Point3="-9,18.5047169811321" />
                  <mssgle:LineSegment
                    End="-9,21.5094339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="309.916666666667,360.764150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.235849056604"
              Start="0,0"
              End="0,36.735849056604">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.735849056604" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="309.916666666667,271">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.764150943396"
              Start="0,0"
              End="0,40.264150943396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.264150943396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="312.916666666667,184">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>