<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/14/2016 9:01:29 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\adminb"
  DTS:DTSID="{02F81E4B-0585-4845-8A9E-5BCBDC2D9220}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="CircDebitos ReActualiza_Plazos"
  DTS:PackageType="5"
  DTS:VersionBuild="51"
  DTS:VersionGUID="{9E9E8A0D-A719-45F9-93D6-77AEBCA94F3F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{8FA12762-3FD9-4BDF-88DC-1F9004141E86}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D4218344-E69C-47E1-A50E-12A25066855E}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="Periodo">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{8FA12762-3FD9-4BDF-88DC-1F9004141E86}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza Plazos en H_CIRCUITO_FACT_DEB_REFACT - Reproceso"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{f6fecb54-857e-43c0-9535-3975ec16129c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza Plazos en H_CIRCUITO_FACT_DEB_REFACT - Reproceso"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6FDBBEF9-C4FF-4E83-BC5D-D6E8D72C6D9E}"
          SQLTask:SqlStatementSource="&#xA;/* Declara y Actualiza variables */&#xA;&#xA; Declare @Periodo int Set @Periodo = ?&#xA;&#xA; declare @Periodo_Min_Reproceso int&#xA; declare @Periodo_Max_Reproceso int&#xA;&#xA; SET @Periodo_Min_Reproceso = dbo.Periodo3MesesAtras((CAST(@Periodo as CHAR(6))+'01'))&#xA; SET @Periodo_Max_Reproceso = dbo.PeriodoAnterior((CAST(@Periodo as CHAR(6))+'01'))&#xA;&#xA;&#xA;/* Actualiza campos de Diferencias en el arribo entre Facturación y Refacturación */&#xA;&#xA;&#x9; -- FECHA DE RECEPCIÓN DEL CURSOGRAMA ORIGINAL VS FECHA DE RECEPCIÓN DEL CURSOGRAMA DE REFACTURACIÓN.&#xA;&#x9;&#x9;-- ATENCIÓN: &#xA;&#x9;&#x9;-- Tener en cuenta que este paso se debe realizar cuando la H_CIRCUITO_FACT_DEB_REFACT ya tenga información cargada de Refacturacion para el periodo a actualizar, es decir que el paso previo se actualice bien.&#xA;&#x9;&#x9;-- Como cada cursograma tiene una unica fecha de Recepcion mas allá de que este en Amb e Int, hace una pasada por ambas tablas.&#xA;&#x9;&#x9;-- La fecha de recepcion que aparece en las tablas de Refacturación hace Referencia justamente a la refacturacion (Cursograma Nuevo (campo Numero_Comprobante)) por eso para los cursogramas originales debemos buscarlo en las H de Consumos.&#xA;&#xA;&#x9;&#x9;-- Actualiza fecha de recepcion desde CUP004 que alimentana a la H de Ambulatorio e Internacion.&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;SET fecha_recepcionV = C.CUC_FRE&#xA;&#x9;&#x9;FROM HOST03.HOST03.DESARROLLO.CUP004 C&#xA;&#x9;&#x9;JOIN DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES D on C.CUC_NUM = D.nro_cursogramaV&#xA;&#x9;&#x9;WHERE id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#xA;&#x9;&#x9;-- Actualiza fecha de recepcion de los cursogramas de refacturacion desde CUP004. La fecha ya la tenemos, pero nos aferramos a la de la CUP004 ya que esta alimentana a la H de Ambulatorio e Internacion.&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;SET fecha_recepcionN = C.CUC_FRE&#xA;&#x9;&#x9;FROM HOST03.HOST03.DESARROLLO.CUP004 C&#xA;&#x9;&#x9;JOIN DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES D on C.CUC_NUM = D.nro_cursogramaN&#xA;&#x9;&#x9;WHERE D.id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;-- Calcula diferencia en días.&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;&#x9;SET dif_plazo_recep = DATEDIFF(DAY, Fecha_RecepcionV, Fecha_RecepcionN)&#xA;&#x9;&#x9;&#x9;where Fecha_RecepcionV not in ('1900-01-01') and id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;-- Marca en cero los registros que no traen información para que no afecten en el resultado total.&#xA;&#x9;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;&#x9;&#x9;SET dif_plazo_recep = 0&#xA;&#x9;&#x9;&#x9;&#x9;WHERE (fecha_recepcionV in ('1900-01-01')) or (fecha_recepcionN in ('1900-01-01'))&#xA;&#x9;&#x9;&#x9;&#x9;and id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#xA;&#x9;&#x9;&#x9;-- Crea #Plazo_Recepcion para guardar el promedio por cada acreedor en la #Plazo_Recepcion.&#xA;&#x9;&#x9;&#x9;SELECT P.id_periodo, P.id_acreedor, P.Refacturacion_Salud, P.id_tipo_circuito, SUM(P.dif_plazo_recep) as dias_plazo_recepcion, COUNT(CAST(P.dif_plazo_recep as decimal(8,2))) as cant_plazo_recepcion&#xA;&#x9;&#x9;&#x9;INTO #Plazo_Recepcion&#xA;&#x9;&#x9;&#x9;FROM AUX_H_CIRCUITO_REFACTURACION_PROM_MESES P&#xA;&#x9;&#x9;&#x9;WHERE P.id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and nro_cursogramaN not in (2892126) /* Caso con fecha erronea. */&#xA;&#x9;&#x9;&#x9;GROUP BY P.id_acreedor, P.id_periodo, P.Refacturacion_Salud, P.id_tipo_circuito&#xA;&#x9;&#x9;&#x9;ORDER BY P.id_acreedor, P.id_periodo, P.Refacturacion_Salud, P.id_tipo_circuito&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;-- Pega Cantidades de Cursogramas y Sumas de días por Acreedor/Periodo en H_CIRCUITO_FACT_DEB_REFACT para ser calculado en #Plazo_Recepcion.&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT&#xA;&#x9;&#x9;&#x9;SET dias_plazo_recepcion = C.dias_plazo_recepcion,&#xA;&#x9;&#x9;&#x9;cant_plazo_recepcion = C.cant_plazo_recepcion&#xA;&#x9;&#x9;&#x9;FROM #Plazo_Recepcion C&#xA;&#x9;&#x9;&#x9;JOIN DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT R on C.id_acreedor = R.id_acreedor and C.id_periodo = R.id_periodo and C.id_tipo_circuito = R.id_tipo_circuito and C.Refacturacion_Salud COLLATE SQL_Latin1_General_CP850_CI_AI = R.marca_refact_salud&#xA;&#x9;&#x9;&#x9;WHERE R.id_tipo_circuito in (2,3,4)&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;-- Borra Auxiliares&#xA;&#x9;&#x9;&#x9;drop table #Plazo_Recepcion&#xA;&#xA;&#xA;&#xA;&#x9;-- FECHA DE PAGO DEL CURSOGRAMA ORIGINAL VS FECHA DE RECEPCIÓN DEL CURSOGRAMA DE REFACTURACIÓN.&#xA;&#x9;&#x9;-- ATENCIÓN: Tener en cuenta que este paso se debe realizar cuando la H_CIRCUITO_FACT_DEB_REFACT ya tenga información cargada de Refacturacion para el periodo a actualizar, es decir que el paso previo se actualice bien.&#xA;&#xA;&#x9;&#x9;-- Actualiza campo fecha_pagoV para los cursogramas AMS&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;SET fecha_pagoV = CAST(SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),1,4)+'-'+SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),5,2)+'-'+SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),7,2) as datetime)&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES R&#xA;&#x9;&#x9;JOIN HOST03.HOST03.AMSPROVD.V554FAPLI C on R.nro_cursogramaV = C.W_V554_NCOM&#xA;&#x9;&#x9;WHERE R.id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#xA;&#x9;&#x9;-- Actualiza campo fecha_pagoV para los cursogramas SMP&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;SET fecha_pagoV = CAST(SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),1,4)+'-'+SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),5,2)+'-'+SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),7,2) as datetime)&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES R&#xA;&#x9;&#x9;JOIN HOST03.HOST03.SMPPROVD.V554FAPLI C on R.nro_cursogramaV = C.W_V554_NCOM&#xA;&#x9;&#x9;WHERE R.id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;-- Actualiza campo fecha_pagoV para los cursogramas OSP&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;SET fecha_pagoV = CAST(SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),1,4)+'-'+SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),5,2)+'-'+SUBSTRING(CAST(C.W_V554_FAPL as CHAR(10)),7,2) as datetime)&#xA;&#x9;&#x9;FROM DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES R&#xA;&#x9;&#x9;JOIN HOST03.HOST03.OSPPROVD.V554FAPLI C on R.nro_cursogramaV = C.W_V554_NCOM&#xA;&#x9;&#x9;WHERE R.id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#xA;&#x9;&#x9;-- Calcula diferencia en días.&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;SET dif_plazo_pago = DATEDIFF(DAY, Fecha_PagoV, Fecha_RecepcionN)&#xA;&#x9;&#x9;WHERE id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#x9;&#x9;and fecha_pagoV not in ('1900-01-01')&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;-- Marca en cero los registros que no traen información para que no afecten en el resultado total.&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.AUX_H_CIRCUITO_REFACTURACION_PROM_MESES&#xA;&#x9;&#x9;&#x9;SET dif_plazo_pago = 0&#xA;&#x9;&#x9;&#x9;WHERE id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso&#xA;&#x9;&#x9;&#x9;and fecha_pagoV in ('1900-01-01') or fecha_recepcionN in ('1900-01-01')&#xA;&#xA;&#x9;&#x9;-- Crea #Plazo_Recepcion para guardar la suma de días y cantidades de cursogramas por cada Acreedor/Periodo en la #Plazo_Pago.&#xA;&#x9;&#x9;SELECT P.id_periodo, P.id_acreedor, P.id_tipo_circuito, P.Refacturacion_Salud, SUM(P.Dif_Plazo_Pago) as dias_plazo_pago, COUNT(P.Dif_Plazo_Pago) as cant_plazo_pago&#xA;&#x9;&#x9;INTO #Plazo_Pago&#xA;&#x9;&#x9;FROM AUX_H_CIRCUITO_REFACTURACION_PROM_MESES P &#xA;&#x9;&#x9;WHERE P.id_periodo_recepcion between @Periodo_Min_Reproceso and @Periodo_Max_Reproceso and Dif_Plazo_Pago &lt;&gt; 0&#xA;&#x9;&#x9;GROUP BY id_acreedor, id_periodo, P.id_tipo_circuito, P.Refacturacion_Salud&#xA;&#x9;&#x9;ORDER BY id_acreedor, id_periodo, P.id_tipo_circuito, P.Refacturacion_Salud&#xA;&#xA;&#xA;&#x9;&#x9;-- Pega promedio en H_CIRCUITO_FACT_DEB_REFACT que ya fue calculado en #Plazo_Recepcion&#xA;&#x9;&#x9;UPDATE DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT&#xA;&#x9;&#x9;SET dias_plazo_pago = IsNull(C.dias_plazo_pago,0),&#xA;&#x9;&#x9;cant_plazo_pago = IsNull(C.cant_plazo_pago,0)&#xA;&#x9;&#x9;FROM #Plazo_Pago C&#xA;&#x9;&#x9;JOIN DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT R on C.id_acreedor = R.id_acreedor and C.id_periodo = R.id_periodo and C.id_tipo_circuito = R.id_tipo_circuito and C.Refacturacion_Salud COLLATE SQL_Latin1_General_CP850_CI_AI = R.marca_refact_salud&#xA;&#x9;&#x9;WHERE R.id_tipo_circuito in (2,3,4) /* Circuitos de Refacturacion*/&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;-- Es incorrecto tener cantidades y dias en cero. Esto sucede porque cuando una fecha tiene '1900-01-01' cuenta el cursograma pero no suma nada ya que no se permite esta operación. Aplicamos un control a estos casos.&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT&#xA;&#x9;&#x9;&#x9;SET dias_plazo_pago = 0, cant_plazo_pago = 0&#xA;&#x9;&#x9;&#x9;WHERE (cant_plazo_pago is null) or (dias_plazo_pago = 0 and cant_plazo_pago &gt; 0)&#xA;&#x9;&#x9;&#x9;and id_tipo_circuito in (2,3,4)&#xA;&#xA;&#x9;&#x9;&#x9;-- También es incorrecto tener dias y cantidades en cero. Esto rara vez puede suceder pero por las dudas aplicamos un control a estos casos.&#xA;&#x9;&#x9;&#x9;UPDATE DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT&#xA;&#x9;&#x9;&#x9;SET dias_plazo_pago = 0, cant_plazo_pago = 0&#xA;&#x9;&#x9;&#x9;WHERE (cant_plazo_pago is null) or (cant_plazo_pago = 0 and dias_plazo_pago &gt; 0)&#xA;&#x9;&#x9;&#x9;and id_tipo_circuito in (2,3,4)&#xA;&#xA;&#x9;&#x9;-- Borra Auxiliares&#xA;&#x9;&#x9;drop table #Plazo_Pago&#xA;&#xA;&#xA;-- Para todos los tipos de circuitos que no forman parte del analisis de Plazos de Pago o Recepción se le pone 0&#xA; UPDATE DW_SALUD.dbo.H_CIRCUITO_FACT_DEB_REFACT&#xA; SET dias_plazo_pago = 0, cant_plazo_pago = 0&#xA; WHERE id_tipo_circuito not in (2,3,4) &#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@Periodo"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Variable Periodo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{38413c5c-7677-4555-990a-3108e75e0501}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Variable Periodo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6FDBBEF9-C4FF-4E83-BC5D-D6E8D72C6D9E}"
          SQLTask:SqlStatementSource="&#x9;------  Periodo &#xA;&#xA;&#xA;----select 201806 as Periodo&#xA;&#xA;&#x9;select max(id_periodo) as Periodo from D_PERIODO where vigente_consumo = 1"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="Periodo"
            SQLTask:DtsVariableName="User::Periodo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{673824DB-734C-46EE-AAAC-B15A5124F785}"
      DTS:From="Package\Variable Periodo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualiza Plazos en H_CIRCUITO_FACT_DEB_REFACT - Reproceso" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="421,42"
          Id="Package\Actualiza Plazos en H_CIRCUITO_FACT_DEB_REFACT - Reproceso"
          TopLeft="1.04245283018849,85.3867924528302" />
        <NodeLayout
          Size="160,42"
          Id="Package\Variable Periodo"
          TopLeft="131.542452830188,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="211.542452830188,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.8867924528302"
              Start="0,0"
              End="0,30.3867924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.3867924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>