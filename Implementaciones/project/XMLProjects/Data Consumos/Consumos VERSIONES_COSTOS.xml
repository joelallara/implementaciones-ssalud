<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/31/2016 9:41:11 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\nborio"
  DTS:DTSID="{2A700902-C7C8-4B42-913E-189F545DFA00}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="Consumos VERSIONES_COSTOS"
  DTS:PackageType="5"
  DTS:VersionBuild="25"
  DTS:VersionGUID="{87A696E1-BC38-4429-85E7-7952956D777F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{27A68C1E-EAFE-4908-8B9D-E47127F46227}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BCB94351-3192-44E3-BD64-D48469076DCC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="V_Periodo">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{27A68C1E-EAFE-4908-8B9D-E47127F46227}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza costo 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B68CBFD1-444F-40CE-AEB7-E767058F6485}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza costo 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="DECLARE @Periodo INT&#xA;SET @Periodo = ?&#xA;&#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto1 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA; --and Not Exists (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a11.id_prestacion not in ('NA00000015', 'NC0108    ', 'NA00000005')&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a11.id_periodo = @Periodo)&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto1 = 1&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA; --and Not Exists (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; AND a12.id_segmento not in (3)&#xA; AND a11.id_prestacion not in ('NA00000015', 'NC0108    ', 'NA00000005')&#xA; AND a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a11.id_periodo = @Periodo)&#xA; &#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto1 = 0&#xA;WHERE ccosto1 IS NULL and id_periodo = @Periodo&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto1 = 0&#xA;WHERE ccosto1 IS NULL and id_periodo = @Periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza costo 2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{20301D52-FCFE-4869-8F2B-F827FE995344}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza costo 2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="DECLARE @Periodo INT&#xA;SET @Periodo = ?&#xA;&#xA;Update H_ORD_AMB_DET&#xA;Set ccosto2 = 1&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA;-- AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a12.Id_Clase_Producto in ('S ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; AND a11.id_periodo = @Periodo)&#xA;&#xA;&#xA;Update H_ORD_INT_DET&#xA;Set ccosto2 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA; --AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a12.Id_Clase_Producto in ('S ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; AND a11.id_periodo = @Periodo)&#xA;&#xA;Update H_ORD_AMB_DET&#xA;Set ccosto2 = 0&#xA;WHERE ccosto2 IS NULL and id_periodo = @Periodo&#xA;&#xA;Update H_ORD_INT_DET&#xA;Set ccosto2 = 0&#xA;WHERE ccosto2 IS NULL and id_periodo = @Periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza costo 3"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CEC92339-F7DA-426D-AD3A-0F8E004B704B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza costo 3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="DECLARE @Periodo INT&#xA;SET @Periodo = ?&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto3 = 1&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA; --AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a12.Id_Clase_Producto in ('S ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and a11.id_periodo = @Periodo)&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto3 = 1&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where a12.Id_Clase_Producto in ('U ') and a11.id_periodo = @Periodo&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto3 = 1&#xA; from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where --NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a12.id_segmento not in (3)&#xA; and a11.ccosto3 IS NULL&#xA; and a12.Id_Clase_Producto in ('G ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and not ((a11.id_producto = 1 and a11.id_plan_producto = 'S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=0 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=2 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=3 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=4 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=6 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=7 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=8 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=11 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=12 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=17 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=18 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=19 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=21 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=22 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=23 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=24 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=25 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=26 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=27 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=28 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=32 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=33 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=35 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=43 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=44 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=62 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=63 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=64 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=65 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=66 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=67 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=68 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=69 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=70 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=71 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=72 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9999 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='999  '))&#xA; and a11.id_periodo = @Periodo&#xA; and exists (SELECT id_periodo, id_persona FROM H_COMER_STOCK_AFILIA S WHERE S.id_periodo=a11.id_periodo AND S.id_persona=a11.id_persona)&#xA;&#xA;&#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto3 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA;-- AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a12.Id_Clase_Producto in ('S ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and a11.id_periodo = @Periodo)&#xA; &#xA; &#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto3 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where a12.Id_Clase_Producto in ('U ') and a11.id_periodo = @Periodo&#xA; &#xA; &#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto3 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where --NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a12.id_segmento not in (3)&#xA; and a11.ccosto3 IS NULL&#xA; and a12.Id_Clase_Producto in ('G ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and not ((a11.id_producto = 1 and a11.id_plan_producto = 'S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=0 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=2 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=3 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=4 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=6 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=7 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=8 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=11 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=12 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=17 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=18 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=19 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=21 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=22 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=23 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=24 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=25 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=26 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=27 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=28 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=32 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=33 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=35 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=43 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=44 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=62 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=63 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=64 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=65 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=66 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=67 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=68 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=69 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=70 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=71 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=72 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9999 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='999  '))&#xA;   and a11.id_periodo = @Periodo&#xA;   and exists (SELECT id_periodo, id_persona FROM H_COMER_STOCK_AFILIA S WHERE S.id_periodo=a11.id_periodo AND S.id_persona=a11.id_persona)&#xA;&#xA;  &#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto3 = 0&#xA;WHERE ccosto3 IS NULL AND id_periodo = @Periodo&#xA;&#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto3 = 0&#xA;WHERE ccosto3 IS NULL AND id_periodo = @Periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza costo 4"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{DE5A84BF-A4C2-4FED-9548-0E4697AD4AE8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza costo 4"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="DECLARE @Periodo INT&#xA;SET @Periodo = ?&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto4 = 1&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA; --AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a12.Id_Clase_Producto in ('S ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and a11.id_periodo = @Periodo)&#xA; &#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto4 = 1&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where a12.Id_Clase_Producto in ('U ') and a11.id_periodo = @Periodo&#xA; &#xA;UPDATE H_ORD_AMB_DET&#xA;SET ccosto4 = 1&#xA; from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where --NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a12.id_segmento not in (3)&#xA; and a11.ccosto4 IS NULL&#xA; and a12.Id_Clase_Producto in ('G ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and not ((a11.id_producto = 1 and a11.id_plan_producto = 'S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=0 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=2 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=3 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=4 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=6 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=7 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=8 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=11 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=12 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=17 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=18 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=19 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=21 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=22 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=23 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=24 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=25 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=26 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=27 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=28 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=32 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=33 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=35 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=43 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=44 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=62 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=63 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=64 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=65 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=66 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=67 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=68 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=69 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=70 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=71 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=72 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9999 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='999  '))&#xA; and a11.id_periodo = @Periodo&#xA; and exists (SELECT id_periodo, id_persona FROM H_COMER_STOCK_AFILIA S WHERE S.id_periodo=a11.id_periodo AND S.id_persona=a11.id_persona)&#xA; &#xA; &#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto4 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_marca_valorizacion in ('P')&#xA;-- AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; and a12.id_segmento not in (3)&#xA; and a13.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a12.Id_Clase_Producto in ('S ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and a11.id_periodo = @Periodo)&#xA; &#xA; &#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto4 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where a12.Id_Clase_Producto in ('U ') and a11.id_periodo = @Periodo&#xA;&#xA; &#xA;UPDATE H_ORD_INT_DET&#xA;SET ccosto4 = 1&#xA;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_producto = a12.id_producto)&#xA;where --NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a12.id_segmento not in (3)&#xA; and a11.ccosto4 IS NULL&#xA; and a12.Id_Clase_Producto in ('G ')&#xA; and a11.id_prestacion not in ('NC0108    ')&#xA; and not ((a11.id_producto = 1 and a11.id_plan_producto = 'S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=0 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=2 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=3 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=4 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=6 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=7 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=8 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=11 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=12 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=17 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=18 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=19 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=21 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=22 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=23 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=24 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=25 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=26 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=27 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=28 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=32 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=33 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=35 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=43 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=44 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=62 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=63 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=64 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=65 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=66 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=67 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=68 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=69 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=70 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=71 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=72 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=9999 and a11.id_plan_producto='X    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=9 and a11.id_plan_producto='999  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='999  '))&#xA;   and a11.id_periodo = @Periodo&#xA;   and exists (SELECT id_periodo, id_persona FROM H_COMER_STOCK_AFILIA S WHERE S.id_periodo=a11.id_periodo AND S.id_persona=a11.id_persona)&#xA;   &#xA;&#xA;Update H_ORD_AMB_DET&#xA;Set ccosto4 = 0&#xA;Where ccosto4 is null and id_periodo = @Periodo&#xA;&#xA;Update H_ORD_INT_DET&#xA;Set ccosto4 = 0&#xA;Where ccosto4 is null and id_periodo = @Periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza grilla"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{DC1A7CB9-910B-48D4-8942-1FB0B8C47B03}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza grilla"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="DECLARE @Periodo INT&#xA;Set @Periodo = ?&#xA;&#xA;-- CONSUMO AMB.&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET grilla_original = grilla&#xA;WHERE id_periodo = @Periodo&#xA;&#xA;-- Busco las personas que tengan supra y las inserto en la temporal&#xA;Select R.afiliado, R.id_persona Into #AfiliadoPersona&#xA;From H_ORD_AMB_DET R Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and id_periodo = @Periodo and ccosto3 = 1&#xA;Group by R.afiliado, R.id_persona&#xA;&#xA;-- Busco los productos de Salud para los registros obtenidos anteriormente&#xA;Select R.afiliado, R.id_persona, R.id_producto_original, R.id_subproducto_original, R.id_plan_producto_original, R.grilla Into #CuentasSalud&#xA;From H_ORD_AMB_DET R Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Inner join #AfiliadoPersona A On (R.afiliado=A.afiliado and R.id_persona=A.id_persona)&#xA;Where P.id_clase_producto IN ('S') and id_periodo = @Periodo&#xA;Group by R.afiliado, R.id_persona, R.id_producto_original, R.id_subproducto_original, R.id_plan_producto_original, R.grilla &#xA;&#xA;-- Actualizo producto, subproducto y plan con los datos obtenidos en el paso anterior.&#xA;Update H_ORD_AMB_DET&#xA;Set grilla = C.grilla&#xA;From H_ORD_AMB_DET R &#xA;Inner join #CuentasSalud C On (R.afiliado=C.afiliado and R.id_persona=C.id_persona and R.id_plan_producto=C.id_plan_producto_original and R.id_producto=C.id_producto_original)&#xA;Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where R.id_periodo = @Periodo AND P.id_clase_producto IN ('G', 'U')&#xA;&#xA;&#xA;-- Buscamos incosistencias que se dan por las personas que no tienen salud, pero que no llego recaudacion por el planb de salud&#xA;Select id_persona into #NoActualizado&#xA;from H_ORD_AMB_DET R where not exists (select id_producto,id_plan_producto,grilla from D_GRILLAS G where (R.grilla=G.grilla and R.id_producto=G.id_producto and R.id_plan_producto=G.id_plan_producto))&#xA;and ccosto3 = 1 and R.id_periodo = @Periodo&#xA;group by id_persona, afiliado&#xA;&#xA;&#xA;-- buscamos del stock la grilla de salud que se corresponde para ese afiliado y plan&#xA;Select R.id_persona, R.id_plan_producto, R.grilla Into #Datos&#xA;From H_COMER_STOCK_AFILIA R Inner join #NoActualizado A On (R.id_persona=A.id_persona)&#xA;Where id_periodo = @Periodo&#xA;Group by R.afiliado, R.id_plan_producto, R.id_persona, R.grilla&#xA;&#xA;Update H_ORD_AMB_DET&#xA;Set grilla = C.grilla&#xA;From H_ORD_AMB_DET R &#xA;Inner join #Datos C On (R.id_persona=C.id_persona and R.id_plan_producto=C.id_plan_producto)&#xA;Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where R.id_periodo = @Periodo AND P.id_clase_producto IN ('G', 'U')&#xA;&#xA;&#xA;DROP TABLE #AfiliadoPersona&#xA;DROP TABLE #CuentasSalud&#xA;drop table #NoActualizado&#xA;drop table #Datos&#xA;&#xA;&#xA;-- CONSUMO INT.&#xA;&#xA;UPDATE H_ORD_INT_DET&#xA;SET grilla_original = grilla&#xA;WHERE id_periodo = @Periodo&#xA;&#xA;-- Busco las personas que tengan supra y las inserto en la temporal&#xA;Select R.afiliado, R.id_persona Into #AfiliadoPersonaInt&#xA;From H_ORD_INT_DET R Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and id_periodo = @Periodo and ccosto3 = 1&#xA;Group by R.afiliado, R.id_persona&#xA;&#xA;-- Busco los productos de Salud para los registros obtenidos anteriormente&#xA;Select R.afiliado, R.id_persona, R.id_producto_original, R.id_subproducto_original, R.id_plan_producto_original, R.grilla Into #CuentasSaludInt&#xA;From H_ORD_INT_DET R Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Inner join #AfiliadoPersonaInt A On (R.afiliado=A.afiliado and R.id_persona=A.id_persona)&#xA;Where P.id_clase_producto IN ('S') and id_periodo = @Periodo&#xA;Group by R.afiliado, R.id_persona, R.id_producto_original, R.id_subproducto_original, R.id_plan_producto_original, R.grilla &#xA;&#xA;-- Actualizo producto, subproducto y plan con los datos obtenidos en el paso anterior.&#xA;Update H_ORD_INT_DET&#xA;Set grilla = C.grilla&#xA;From H_ORD_INT_DET R &#xA;Inner join #CuentasSaludInt C On (R.afiliado=C.afiliado and R.id_persona=C.id_persona and R.id_plan_producto=C.id_plan_producto_original and R.id_producto=C.id_producto_original)&#xA;Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where R.id_periodo = @Periodo AND P.id_clase_producto IN ('G', 'U')&#xA;&#xA;&#xA;-- Buscamos incosistencias que se dan por las personas que no tienen salud, pero que no llego recaudacion por el planb de salud&#xA;Select id_persona into #NoActualizadoInt&#xA;from H_ORD_INT_DET R where not exists (select id_producto,id_plan_producto,grilla from D_GRILLAS G where (R.grilla=G.grilla and R.id_producto=G.id_producto and R.id_plan_producto=G.id_plan_producto))&#xA;and ccosto3 = 1 and R.id_periodo = @Periodo&#xA;group by id_persona, afiliado&#xA;&#xA;&#xA;-- buscamos del stock la grilla de salud que se corresponde para ese afiliado y plan&#xA;Select R.id_persona, R.id_plan_producto, R.grilla Into #DatosInt&#xA;From H_COMER_STOCK_AFILIA R Inner join #NoActualizadoInt A On (R.id_persona=A.id_persona)&#xA;Where id_periodo = @Periodo&#xA;Group by R.afiliado, R.id_plan_producto, R.id_persona, R.grilla&#xA;&#xA;Update H_ORD_INT_DET&#xA;Set grilla = C.grilla&#xA;From H_ORD_INT_DET R &#xA;Inner join #DatosInt C On (R.id_persona=C.id_persona and R.id_plan_producto=C.id_plan_producto)&#xA;Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where R.id_periodo = @Periodo AND P.id_clase_producto IN ('G', 'U')&#xA;&#xA;&#xA;DROP TABLE #AfiliadoPersonaInt&#xA;DROP TABLE #CuentasSaludInt&#xA;drop table #NoActualizadoInt&#xA;drop table #DatosInt&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza producto, subproducto, plan producto"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{881F25D3-176F-41D2-B1ED-9B55EAE3AADB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza producto, subproducto, plan producto"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="DECLARE @Periodo INT&#xA;Set @Periodo = ?&#xA;&#xA;-- CONSUMO AMB.&#xA;----- Actualiza el id_producto, id_plan producto y id_subproducto original que viene en el txt. &#xA;----- Se agrego la condición que actualice solo cuando el mismo esta null, para que no pise la info en caso de reproceso.&#xA;UPDATE H_ORD_AMB_DET&#xA;SET id_producto_original = id_producto,&#xA;&#x9;id_subproducto_original = id_subproducto,&#xA;&#x9;id_plan_producto_original = id_plan_producto&#xA;Where id_periodo = @Periodo&#xA;and (id_producto_original is null or id_subproducto_original is null or  id_plan_producto_original is null)&#xA;&#xA;-- Busco las personas que tengan supra y las inserto en la temporal&#xA;Select R.afiliado, R.id_persona Into #AfiliadoPersona&#xA;From H_ORD_AMB_DET R Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and id_periodo = @Periodo and Ccosto3 = 1&#xA;Group by R.afiliado, R.id_persona&#xA;&#xA;-- Busco los productos de Salud para los registros obtenidos anteriormente&#xA;Select R.afiliado, R.id_persona, R.id_producto, R.id_subproducto, R.id_plan_producto Into #CuentasSalud&#xA;From H_ORD_AMB_DET R Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Inner join #AfiliadoPersona A On (R.afiliado=A.afiliado and R.id_persona=A.id_persona)&#xA;Where P.id_clase_producto IN ('S') and id_periodo = @Periodo&#xA;Group by R.afiliado, R.id_persona, R.id_producto, R.id_subproducto, R.id_plan_producto &#xA;&#xA;-- Actualizo producto, subproducto y plan con los datos obtenidos en el paso anterior.&#xA;Update H_ORD_AMB_DET&#xA;Set id_producto = C.id_producto,&#xA;&#x9;id_subproducto = C.id_subproducto,&#xA;&#x9;id_plan_producto = C.id_plan_producto&#xA;From H_ORD_AMB_DET R &#xA;Inner join #CuentasSalud C On (R.afiliado=C.afiliado and R.id_persona=C.id_persona)&#xA;Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Where R.id_periodo = @Periodo AND P.id_clase_producto IN ('G', 'U')&#xA;&#xA;&#xA;-- Las personas que me quedaron sin actualizar, porque tenia salud en ese periodo, pero no con ese afiliado, las actualizo aca.&#xA;Select id_periodo, id_persona, id_producto = NULL, id_subproducto = NULL, id_plan_producto = NULL INTO #Personas &#xA;from H_ORD_AMB_DET H INNER JOIN D_PRODUCTOS P ON (H.id_producto=P.id_producto) where id_periodo = @Periodo and Ccosto3 = 1 and P.id_clase_producto IN ('G', 'U')&#xA;&#xA;Alter table #Personas alter column id_plan_producto CHAR(5)&#xA;&#xA;UPDATE #Personas&#xA;SET id_producto = S.id_producto,&#xA;&#x9;id_subproducto = S.id_subproducto,&#xA;&#x9;id_plan_producto = S.id_plan_producto&#xA;from H_COMER_STOCK_AFILIA S INNER JOIN #Personas P on (S.id_persona=P.id_persona)&#xA;WHERE P.id_producto IS NULL&#xA;&#xA;&#xA;UPDATE H_ORD_AMB_DET&#xA;SET id_producto = T.id_producto,&#xA;&#x9;id_subproducto = T.id_subproducto,&#xA;&#x9;id_plan_producto = T.id_plan_producto&#xA;From H_ORD_AMB_DET H inner join #Personas T on (H.id_persona=T.id_persona and H.id_periodo=T.id_periodo)&#xA;inner join D_PRODUCTOS P on (H.id_producto=P.id_producto)&#xA;where P.id_clase_producto in ('G', 'U') AND H.id_periodo = @Periodo and T.id_producto is not null&#xA;&#xA;&#xA;Drop table #Personas&#xA;DROP TABLE #AfiliadoPersona&#xA;DROP TABLE #CuentasSalud&#xA;&#xA;&#xA;-- CONSUMO INT.&#xA;----- Actualiza el id_producto, id_plan producto y id_subproducto original que viene en el txt. &#xA;----- Se agrego la condición que actualice solo cuando el mismo esta null, para que no pise la info en caso de reproceso.&#xA;UPDATE H_ORD_INT_DET&#xA;SET id_producto_original = id_producto,&#xA;&#x9;id_subproducto_original = id_subproducto,&#xA;&#x9;id_plan_producto_original = id_plan_producto&#xA;Where id_periodo = @Periodo&#xA;and (id_producto_original is null or id_subproducto_original is null or  id_plan_producto_original is null)&#xA;&#xA;-- Busco las personas que tengan supra y las inserto en la temporal&#xA;&#xA;Select R.afiliado, R.id_persona Into #AfiliadoPersonaInt&#xA;From H_ORD_INT_DET R Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and id_periodo = @Periodo and Ccosto3 = 1&#xA;Group by R.afiliado, R.id_persona&#xA;&#xA;-- Busco los productos de Salud para los registros obtenidos anteriormente&#xA;Select R.afiliado, R.id_persona, R.id_producto, R.id_subproducto, R.id_plan_producto Into #CuentasSaludInt&#xA;From H_ORD_INT_DET R Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Inner join #AfiliadoPersonaInt A On (R.afiliado=A.afiliado and R.id_persona=A.id_persona)&#xA;Where P.id_clase_producto IN ('S') and id_periodo = @Periodo&#xA;Group by R.afiliado, R.id_persona, R.id_producto, R.id_subproducto, R.id_plan_producto &#xA;&#xA;-- Actualizo producto, subproducto y plan con los datos obtenidos en el paso anterior.&#xA;&#xA;Update H_ORD_INT_DET&#xA;Set id_producto = C.id_producto,&#xA;&#x9;id_subproducto = C.id_subproducto,&#xA;&#x9;id_plan_producto = C.id_plan_producto&#xA;From H_ORD_INT_DET R &#xA;Inner join #CuentasSaludInt C On (R.afiliado=C.afiliado and R.id_persona=C.id_persona)&#xA;Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Where R.id_periodo = @Periodo AND P.id_clase_producto IN ('G', 'U')&#xA;&#xA;-- Las personas que me quedaron sin actualizar, porque tenia salud en ese periodo, pero no con ese afiliado, las actualizo aca.&#xA;&#xA;Select id_periodo, id_persona, id_producto = NULL, id_subproducto = NULL, id_plan_producto = NULL INTO #PersonasInt &#xA;from H_ORD_INT_DET H INNER JOIN D_PRODUCTOS P ON (H.id_producto=P.id_producto) where id_periodo = @Periodo and Ccosto3 = 1 and P.id_clase_producto IN ('G', 'U')&#xA;&#xA;Alter table #PersonasInt alter column id_plan_producto CHAR(5)&#xA;&#xA;UPDATE #PersonasInt&#xA;SET id_producto = S.id_producto,&#xA;&#x9;id_subproducto = S.id_subproducto,&#xA;&#x9;id_plan_producto = S.id_plan_producto&#xA;from H_COMER_STOCK_AFILIA S INNER JOIN #PersonasInt P on (S.id_persona=P.id_persona)&#xA;WHERE P.id_producto IS NULL&#xA;&#xA;&#xA;UPDATE H_ORD_INT_DET&#xA;SET id_producto = T.id_producto,&#xA;&#x9;id_subproducto = T.id_subproducto,&#xA;&#x9;id_plan_producto = T.id_plan_producto&#xA;From H_ORD_INT_DET H inner join #PersonasInt T on (H.id_persona=T.id_persona and H.id_periodo=T.id_periodo)&#xA;inner join D_PRODUCTOS P on (H.id_producto=P.id_producto)&#xA;where P.id_clase_producto in ('G', 'U') AND H.id_periodo = @Periodo and T.id_producto is not null&#xA;&#xA;&#xA;Drop table #PersonasInt&#xA;DROP TABLE #AfiliadoPersonaInt&#xA;DROP TABLE #CuentasSaludInt" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Correxion de Grillas para Copago"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{AB480797-B909-4D17-8DEC-8560108AFEF1}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Correxion de Grillas para Copago"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="declare @Periodo int&#xA;set @Periodo = ?&#xA;&#xA;&#xA;/* ACTUALIZAMOS GRILLA EN NULL PARA TENER DE REFERENCIA LO QUE VA QUEDANDO SIN ACTUALIZAR */&#xA;update H_ORD_AMB_DET set grilla = null&#xA;where id_periodo in (@Periodo)&#xA;&#xA;/* PRIMERA BARRIDA CON CLAVE AFILIADO/PERSONA EN PERIODO PRESTACION */&#xA;update H_ORD_AMB_DET &#xA;set grilla = S.grilla&#xA;from H_ORD_AMB_DET C join DW_SALUD.dbo.H_COMER_STOCK_AFILIA S on (C.afiliado = S.afiliado and&#xA;C.id_persona = S.id_persona and C.id_producto = S.id_producto and S.id_plan_producto = C.id_plan_producto and S.id_periodo = C.id_periodo_prestacion)&#xA;where C.id_periodo in (@Periodo)&#xA;&#xA;&#xA;/* SEGUNDA BARRIDA CON CLAVE PERSONA EN PERIODO PRESTACION */&#xA;update H_ORD_AMB_DET &#xA;set grilla = S.grilla&#xA;from H_ORD_AMB_DET C join DW_SALUD.dbo.H_COMER_STOCK_AFILIA S on (C.id_persona = S.id_persona and &#xA;C.id_producto = S.id_producto and S.id_plan_producto = C.id_plan_producto and S.id_periodo = C.id_periodo_prestacion)&#xA;where C.grilla is null and C.id_periodo in (@Periodo)&#xA;&#xA;&#xA;/* SIMILAR A LA SEGUNDA BARRIDA SOLO QUE AHORA BUSCAMOS EN EL PERIDOO DE RECEPCION */&#xA;update H_ORD_AMB_DET &#xA;set grilla = S.grilla&#xA;from H_ORD_AMB_DET C join DW_SALUD.dbo.H_COMER_STOCK_AFILIA S on (C.id_persona = S.id_persona and &#xA;C.id_producto = S.id_producto and S.id_plan_producto = C.id_plan_producto and S.id_periodo = C.id_periodo)&#xA;where C.grilla is null and C.id_periodo in (@Periodo)&#xA;&#xA;/* BUSCAMOS LA COMBINACIÓN PERSONA/PROD/PLAN EXISTENTES EN CUALQUIER PERIODO DE STOCK */&#xA;update H_ORD_AMB_DET &#xA;set grilla = S.grilla&#xA;from H_ORD_AMB_DET C join DW_SALUD.dbo.H_COMER_STOCK_AFILIA S on (C.id_persona = S.id_persona and &#xA;C.id_producto = S.id_producto and S.id_plan_producto = C.id_plan_producto)&#xA;where C.grilla is null and C.id_periodo in (@Periodo)&#xA;&#xA;&#xA;/* LO QUE QUEDO SIN ACTUALIZAR LE PONEMOS LA GRILLA QUE VIENE EN EL TXT  */&#xA;update H_ORD_AMB_DET &#xA;set grilla = grilla_original&#xA;where grilla is null and id_periodo in (@Periodo)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::V_Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Obtengo Periodo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{262A8520-B7DF-4A00-9987-612BC597A717}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Obtengo Periodo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="SELECT MAX(id_periodo) Periodo FROM AUX_PERIODO_MES_BORRA"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="Periodo"
            SQLTask:DtsVariableName="User::V_Periodo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{06B6EECB-DEEA-40F6-B562-4365A8A3DE99}"
      DTS:From="Package\Obtengo Periodo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualiza costo 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{F9809799-0535-4654-9AC6-F109ABE1AA3B}"
      DTS:From="Package\Actualiza costo 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Actualiza costo 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{D42E3EB0-41EC-45EE-A952-9C3F89CE3F3F}"
      DTS:From="Package\Actualiza costo 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Actualiza costo 3" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{EFF4BAEB-BCC3-44C5-BCDD-CB4E11F8884A}"
      DTS:From="Package\Actualiza costo 3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Actualiza costo 4" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{4D57E615-FAB0-4492-A400-774633030AE2}"
      DTS:From="Package\Actualiza costo 4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Actualiza producto, subproducto, plan producto" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{0E6C2FC2-FBFB-46B4-A39E-6769BB37BEF0}"
      DTS:From="Package\Actualiza producto, subproducto, plan producto"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Actualiza grilla" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{B71E595E-1B16-4DBF-8ECE-CA20F67B5B04}"
      DTS:From="Package\Actualiza grilla"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Correxion de Grillas para Copago" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162,42"
          Id="Package\Actualiza costo 1"
          TopLeft="28,74.7345013477089" />
        <NodeLayout
          Size="162,42"
          Id="Package\Actualiza costo 2"
          TopLeft="28,143.969002695418" />
        <NodeLayout
          Size="162,42"
          Id="Package\Actualiza costo 3"
          TopLeft="27.9622641509434,213.203504043127" />
        <NodeLayout
          Size="162,42"
          Id="Package\Actualiza costo 4"
          TopLeft="28.2641509433962,282.438005390836" />
        <NodeLayout
          Size="150,42"
          Id="Package\Actualiza grilla"
          TopLeft="116.301886792453,420.907008086253" />
        <NodeLayout
          Size="309,42"
          Id="Package\Actualiza producto, subproducto, plan producto"
          TopLeft="35.811320754717,351.672506738544" />
        <NodeLayout
          Size="243,42"
          Id="Package\Correxion de Grillas para Copago"
          TopLeft="71.3207547169811,490.141509433962" />
        <NodeLayout
          Size="162,42"
          Id="Package\Obtengo Periodo"
          TopLeft="28,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="109,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2345013477089"
              Start="0,0"
              End="0,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="109,116.734501347709">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2345013477089"
              Start="0,0"
              End="0,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="108.981132075472,185.969002695418">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2345013477089"
              Start="0,0"
              End="0,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="109.11320754717,255.203504043127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2345013477089"
              Start="0,0"
              End="0,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="109.264150943396,324.438005390836">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.0471698113207,27.2345013477089"
              Start="0,0"
              End="81.0471698113207,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.61725067385444" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.61725067385444"
                    Point2="0,13.6172506738544"
                    Point3="4,13.6172506738544" />
                  <mssgle:LineSegment
                    End="77.0471698113207,13.6172506738544" />
                  <mssgle:CubicBezierSegment
                    Point1="77.0471698113207,13.6172506738544"
                    Point2="81.0471698113207,13.6172506738544"
                    Point3="81.0471698113207,17.6172506738544" />
                  <mssgle:LineSegment
                    End="81.0471698113207,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="190.806603773585,393.672506738544">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2345013477089"
              Start="0,0"
              End="0,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="192.061320754717,462.907008086253">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2345013477089"
              Start="0,0"
              End="0,19.7345013477089">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7345013477089" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>