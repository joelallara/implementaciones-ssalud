<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/10/2013 10:46:31 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06"
  DTS:CreatorName="AMS\adminb"
  DTS:DTSID="{B32205BA-3518-406C-9994-6795908FB5E9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1033"
  DTS:ObjectName="Consumos Tablero_H_PROMEDIOS_SALUD_COSTO1234"
  DTS:VersionBuild="73"
  DTS:VersionGUID="{FCE2DC36-F4BD-40F4-9CF2-938714B2FAF1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{6673060B-6676-403A-A497-68BC0F04E20A}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{6673060B-6676-403A-A497-68BC0F04E20A}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualizar H_PROMEDIOS_SALUD"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0BCCBC7A-420D-4383-AFF3-CF09EB4A6BF6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar H_PROMEDIOS_SALUD"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int, @Periodo_desde  int, @PeriodoMenos1 int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from AUX_PERIODO_MES_BORRA)&#xA;&#x9;set @Periodo_desde = dbo.PeriodosAnteriores(@Periodo,12)&#xA;&#x9;set @PeriodoMenos1 = dbo.PeriodosAnteriores(@Periodo,2)&#xA;&#x9;&#xA;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#x9;&#xA;&#x9;delete H_PROMEDIOS_SALUD where id_periodo = @Periodo&#xA;&#x9;&#xA;&#xA;Truncate table  AUX_H_PROMEDIOS_SALUD&#xA;&#x9;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en AUX_H_PROMEDIOS_SALUD */&#xA;&#xA;&#x9;INSERT INTO AUX_H_PROMEDIOS_SALUD&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial,&#xA;&#x9;id_persona) /* Id Zona comercial: nuevo campo incorporado 12/8/2013 */ &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_PERSONAS&#x9;a12&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a13&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where&#x9;not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;&#x9;&#x9;and rcosto3 = 1&#xA;&#x9;&#x9;&#x9;&#x9;and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto3 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;WHERE not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto3 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;and a16.id_segmento not in (3)&#xA;&#x9;&#x9;and a15.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;&#xA;&#xA;---------------------------------------------------------------------------------------&#xA;---lo de atras esta PERFECTO no se cambia nada del codigo.&#xA;&#xA;--aca tendriamos que traer de la H los totales de los ultimos 11 meses de informacion existente en la H &#xA;--(que sumado al ultimo que tenemos en la aux, forman los 12 necesarios para el promedio) y los insertamos en la AUX&#xA;--una vez que los tenemos todos en la AUX calculamos los promedios e insertamos toda la info agrupad en la H&#xA;&#xA;insert into AUX_H_PROMEDIOS_SALUD (id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;select id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0)),&#x9;&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0)),&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0)),&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;from H_PROMEDIOS_SALUD &#xA;where id_periodo between @Periodo_desde and @PeriodoMenos1&#xA;group by id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#xA;&#xA;--promedios&#xA;INSERT INTO H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;Promedio_consumo,&#xA;&#x9;&#x9;&#x9;Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo as id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_liquidacion else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_consumo else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_asociados else 0 end),0),&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12 as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12 as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12 as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;from&#x9;AUX_H_PROMEDIOS_SALUD&#xA;&#x9;WHERE id_periodo between @Periodo_desde and @Periodo --in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc)&#xA;&#x9;group by &#xA;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;id_persona&#xA;&#xA;&#xA;---aca ya tenemos los promedios calculados, pero en los totales sigue pasando NULL, ver como solucionarlo para que pegue el total del ultimo periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;/* ACTUALIZO PROMOTOR Y ENTIDAD (A PARTIR DEL 21 DE ABRIL 2017) */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* en el periodo actual */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;set id_promotor = H.id_promotor, id_entidad = h.id_entidad&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD HP join H_COMER_STOCK_AFILIA H on&#xA;&#x9;&#x9; (HP.id_persona = H.id_persona and H.id_periodo = HP.id_periodo)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* si no esta la busco en el mayor periodo de stock */&#xA;&#xA;&#x9;&#x9;select id_persona, MAX(id_promotor) as id_promotor,max(id_periodo) as max_periodo&#xA;&#x9;&#x9;&#x9;,MAX(id_entidad) as id_entidad&#xA;&#x9;&#x9;into #PERSMAX&#xA;&#x9;&#x9;from H_COMER_STOCK_AFILIA where id_persona in (select distinct id_persona from H_PROMEDIOS_SALUD where id_promotor is null AND id_persona IS NOT NULL and id_periodo = @Periodo)&#xA;&#x9;&#x9;group by id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;set id_promotor = T.id_promotor, id_entidad = t.id_entidad&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD H join #PERSMAX T on (T.id_persona = H.id_persona)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;/* Si el promotor no se actualizo, es xq las personas que quedaron no estan en toda la historia del stock, pero por algun motivo&#xA;&#x9;&#x9;estaria llegando consumo y/o recaudacion. Por lo tanto le ponemos 99999 en el promotor. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;set id_promotor = 999999&#xA;&#x9;&#x9;where id_promotor is null and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;set id_entidad = 9999&#xA;&#x9;&#x9;where id_entidad is null and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null &#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DROP TABLE #PERSMAX&#xA;&#xA;&#x9;&#x9;Truncate table  AUX_H_PROMEDIOS_SALUD&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar H_PROMEDIOS_SALUD_COSTO1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{80E92582-084E-4EDB-962B-2FF36FF34DC3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar H_PROMEDIOS_SALUD_COSTO1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int, @Periodo_desde  int, @PeriodoMenos1 int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from AUX_PERIODO_MES_BORRA)&#xA;&#x9;set @Periodo_desde = dbo.PeriodosAnteriores(@Periodo,12)&#xA;&#x9;set @PeriodoMenos1 = dbo.PeriodosAnteriores(@Periodo,2)&#xA;&#x9;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#x9;&#xA;&#x9;delete H_PROMEDIOS_SALUD_COSTO1 where id_periodo = @Periodo&#xA;&#x9;&#xA;&#x9;Truncate table  AUX_H_PROMEDIOS_SALUD_COSTO1&#xA;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en AUX_H_PROMEDIOS_SALUD */&#xA;&#xA;&#x9;INSERT INTO AUX_H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial,&#xA;&#x9;id_persona) &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_PERSONAS&#x9;a12&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a13&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where&#x9;not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;&#x9;&#x9;and rcosto1 = 1&#xA;&#x9;&#x9;&#x9;&#x9;and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto1 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;WHERE not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto1 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;and a16.id_segmento not in (3)&#xA;&#x9;&#x9;and a15.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;&#xA;&#xA;---------------------------------------------------------------------------------------&#xA;&#xA;--aca tendriamos que traer de la H los totales de los ultimos 11 meses de informacion existente en la H &#xA;--(que sumado al ultimo que tenemos en la aux, forman los 12 necesarios para el promedio) y los insertamos en la AUX&#xA;--una vez que los tenemos todos en la AUX calculamos los promedios e insertamos toda la info agrupad en la H&#xA;&#xA;insert into AUX_H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;select id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_liquidacion_Costo1,0)),&#x9;&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_consumo_Costo1,0)),&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_asociados_Costo1,0)),&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;from H_PROMEDIOS_SALUD_COSTO1&#xA;where id_periodo between @Periodo_desde and @PeriodoMenos1&#xA;group by id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#xA;&#xA;--promedios&#xA;INSERT INTO H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion_Costo1,&#xA;&#x9;&#x9;&#x9;Total_consumo_Costo1,&#xA;&#x9;&#x9;&#x9;Total_asociados_Costo1,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion_Costo1,&#xA;&#x9;&#x9;&#x9;Promedio_consumo_Costo1,&#xA;&#x9;&#x9;&#x9;Promedio_asociados_Costo1,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo as id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_liquidacion else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_consumo else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_asociados else 0 end),0),&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12, &#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;from&#x9;AUX_H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;WHERE id_periodo between @Periodo_desde and @Periodo --in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc)&#xA;&#x9;group by &#xA;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;/* ACTUALIZO PROMOTOR */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* en el periodo actual */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;set id_promotor = H.id_promotor&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD_COSTO1 HP join H_COMER_STOCK_AFILIA H on (HP.id_persona = H.id_persona and H.id_periodo = HP.id_periodo)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* si no esta la busco en el mayor periodo de stock */&#xA;&#xA;&#x9;&#x9;select id_persona, MAX(id_promotor) as id_promotor,max(id_periodo) as max_periodo&#xA;&#x9;&#x9;into #PERSMAX&#xA;&#x9;&#x9;from H_COMER_STOCK_AFILIA where id_persona in (select distinct id_persona from H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where id_promotor is null AND id_persona IS NOT NULL and id_periodo = @Periodo)&#xA;&#x9;&#x9;group by id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;set id_promotor = T.id_promotor&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD_COSTO1 H join #PERSMAX T on (T.id_persona = H.id_persona)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;/* Si el promotor no se actualizo, es xq las personas que quedaron no estan en toda la historia del stock, pero por algun motivo&#xA;&#x9;&#x9;estaria llegando consumo y/o recaudacion. Por lo tanto le ponemos 99999 en el promotor. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;set id_promotor = 999999&#xA;&#x9;&#x9;where id_promotor is null and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO1&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null &#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DROP TABLE #PERSMAX&#xA;&#x9;&#x9;&#xA;&#xA;Truncate table  AUX_H_PROMEDIOS_SALUD_COSTO1&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar H_PROMEDIOS_SALUD_COSTO2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E3C71024-7A9F-4C40-AC92-8158BDD481C8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar H_PROMEDIOS_SALUD_COSTO2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int, @Periodo_desde  int, @PeriodoMenos1 int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from AUX_PERIODO_MES_BORRA)&#xA;&#x9;set @Periodo_desde = dbo.PeriodosAnteriores(@Periodo,12)&#xA;&#x9;set @PeriodoMenos1 = dbo.PeriodosAnteriores(@Periodo,2)&#xA;&#x9;&#xA;&#x9;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#x9;&#xA;&#x9;delete H_PROMEDIOS_SALUD_COSTO2 where id_periodo = @Periodo&#xA;&#xA;&#x9;Truncate Table  AUX_H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en AUX_H_PROMEDIOS_SALUD */&#xA;&#xA;&#x9;INSERT INTO AUX_H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial,&#xA;&#x9;id_persona) /* Id Zona comercial: nuevo campo incorporado 12/8/2013 */ &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_PERSONAS&#x9;a12&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a13&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where&#x9;not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;&#x9;&#x9;and rcosto2 = 1&#xA;&#x9;&#x9;&#x9;&#x9;and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto2 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;WHERE not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto2 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;and a16.id_segmento not in (3)&#xA;&#x9;&#x9;and a15.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;&#xA;&#xA;---------------------------------------------------------------------------------------&#xA;---lo de atras esta PERFECTO no se cambia nada del codigo.&#xA;&#xA;--aca tendriamos que traer de la H los totales de los ultimos 11 meses de informacion existente en la H &#xA;--(que sumado al ultimo que tenemos en la aux, forman los 12 necesarios para el promedio) y los insertamos en la AUX&#xA;--una vez que los tenemos todos en la AUX calculamos los promedios e insertamos toda la info agrupad en la H&#xA;&#xA;insert into AUX_H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;select id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_liquidacion_Costo2,0)),&#x9;&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_consumo_Costo2,0)),&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_asociados_Costo2,0)),&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;from H_PROMEDIOS_SALUD_COSTO2&#xA;where id_periodo between @Periodo_desde and @PeriodoMenos1&#xA;group by id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#xA;&#xA;--promedios&#xA;INSERT INTO H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion_Costo2,&#xA;&#x9;&#x9;&#x9;Total_consumo_Costo2,&#xA;&#x9;&#x9;&#x9;Total_asociados_Costo2,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion_Costo2,&#xA;&#x9;&#x9;&#x9;Promedio_consumo_Costo2,&#xA;&#x9;&#x9;&#x9;Promedio_asociados_Costo2,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo as id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_liquidacion else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_consumo else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_asociados else 0 end),0),&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12, &#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;from&#x9;AUX_H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;WHERE id_periodo between @Periodo_desde and @Periodo --in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc) &#xA;&#x9;group by &#xA;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;/* ACTUALIZO PROMOTOR */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* en el periodo actual */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;set id_promotor = H.id_promotor&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD_COSTO2 HP join H_COMER_STOCK_AFILIA H on (HP.id_persona = H.id_persona and H.id_periodo = HP.id_periodo)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* si no esta la busco en el mayor periodo de stock */&#xA;&#xA;&#x9;&#x9;select id_persona, MAX(id_promotor) as id_promotor,max(id_periodo) as max_periodo&#xA;&#x9;&#x9;into #PERSMAX&#xA;&#x9;&#x9;from H_COMER_STOCK_AFILIA where id_persona in (select distinct id_persona from H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;where id_promotor is null AND id_persona IS NOT NULL and id_periodo = @Periodo)&#xA;&#x9;&#x9;group by id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;set id_promotor = T.id_promotor&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD_COSTO2 H join #PERSMAX T on (T.id_persona = H.id_persona)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;/* Si el promotor no se actualizo, es xq las personas que quedaron no estan en toda la historia del stock, pero por algun motivo&#xA;&#x9;&#x9;estaria llegando consumo y/o recaudacion. Por lo tanto le ponemos 99999 en el promotor. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;set id_promotor = 999999&#xA;&#x9;&#x9;where id_promotor is null and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO2&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null &#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DROP TABLE #PERSMAX&#xA;&#x9;&#x9;&#xA;&#xA;Truncate Table AUX_H_PROMEDIOS_SALUD_COSTO2&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar H_PROMEDIOS_SALUD_COSTO4"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C9FC7CB5-4963-40DE-98A5-5A9B4F31161E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar H_PROMEDIOS_SALUD_COSTO4"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int, @Periodo_desde  int, @PeriodoMenos1 int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from AUX_PERIODO_MES_BORRA)&#xA;&#x9;set @Periodo_desde = dbo.PeriodosAnteriores(@Periodo,12)&#xA;&#x9;set @PeriodoMenos1 = dbo.PeriodosAnteriores(@Periodo,2)&#xA;&#x9;&#xA;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#x9;&#xA;&#x9;delete H_PROMEDIOS_SALUD_COSTO4 where id_periodo = @Periodo&#xA;&#x9;&#xA;&#xA;Truncate table  AUX_H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en AUX_H_PROMEDIOS_SALUD */&#xA;&#xA;&#x9;INSERT INTO AUX_H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial,&#xA;&#x9;id_persona) /* Id Zona comercial: nuevo campo incorporado 12/8/2013 */ &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_PERSONAS&#x9;a12&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a13&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where&#x9;not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;&#x9;&#x9;and rcosto4 = 1&#xA;&#x9;&#x9;&#x9;&#x9;and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto4 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;WHERE not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9; and ccosto4 = 1&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where not exists (select fpp.id_plan_producto, fpp.id_producto from FILTRO_PLAN_PRODUCTO fpp where fpp.id_plan_producto = a11.id_plan_producto and fpp.id_producto = a11.id_producto)&#xA;&#x9;&#x9;and a16.id_segmento not in (3)&#xA;&#x9;&#x9;and a15.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;&#xA;&#xA;---------------------------------------------------------------------------------------&#xA;---lo de atras esta PERFECTO no se cambia nada del codigo.&#xA;&#xA;--aca tendriamos que traer de la H los totales de los ultimos 11 meses de informacion existente en la H &#xA;--(que sumado al ultimo que tenemos en la aux, forman los 12 necesarios para el promedio) y los insertamos en la AUX&#xA;--una vez que los tenemos todos en la AUX calculamos los promedios e insertamos toda la info agrupad en la H&#xA;&#xA;insert into AUX_H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;select id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_liquidacion_Costo4,0)),&#x9;&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_consumo_Costo4,0)),&#xA;&#x9;&#x9;&#x9;sum(IsNull(Total_asociados_Costo4,0)),&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;from H_PROMEDIOS_SALUD_COSTO4&#xA;where id_periodo between @Periodo_desde and @PeriodoMenos1&#xA;group by id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#xA;&#xA;--promedios&#xA;INSERT INTO H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion_Costo4,&#xA;&#x9;&#x9;&#x9;Total_consumo_Costo4,&#xA;&#x9;&#x9;&#x9;Total_asociados_Costo4,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion_Costo4,&#xA;&#x9;&#x9;&#x9;Promedio_consumo_Costo4,&#xA;&#x9;&#x9;&#x9;Promedio_asociados_Costo4,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo as id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_liquidacion else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_consumo else 0 end),0),&#xA;&#x9;&#x9;&#x9;isnull(sum(case when id_periodo = @Periodo then Total_asociados else 0 end),0),&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12, &#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;from&#x9;AUX_H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;WHERE id_periodo between @Periodo_desde and @Periodo --in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc) &#xA;&#x9;group by &#xA;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;/* ACTUALIZO PROMOTOR */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* en el periodo actual */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;set id_promotor = H.id_promotor&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD_COSTO4 HP join H_COMER_STOCK_AFILIA H on (HP.id_persona = H.id_persona and H.id_periodo = HP.id_periodo)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* si no esta la busco en el mayor periodo de stock */&#xA;&#xA;&#x9;&#x9;select id_persona, MAX(id_promotor) as id_promotor,max(id_periodo) as max_periodo&#xA;&#x9;&#x9;into #PERSMAX&#xA;&#x9;&#x9;from H_COMER_STOCK_AFILIA where id_persona in (select distinct id_persona from H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where id_promotor is null AND id_persona IS NOT NULL and id_periodo = @Periodo)&#xA;&#x9;&#x9;group by id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;set id_promotor = T.id_promotor&#xA;&#x9;&#x9;from H_PROMEDIOS_SALUD_COSTO4 H join #PERSMAX T on (T.id_persona = H.id_persona)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;/* Si el promotor no se actualizo, es xq las personas que quedaron no estan en toda la historia del stock, pero por algun motivo&#xA;&#x9;&#x9;estaria llegando consumo y/o recaudacion. Por lo tanto le ponemos 99999 en el promotor. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;set id_promotor = 999999&#xA;&#x9;&#x9;where id_promotor is null and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null &#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;DROP TABLE #PERSMAX&#xA;&#xA;Truncate table  AUX_H_PROMEDIOS_SALUD_COSTO4&#xA;&#x9;&#x9;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar Proyecto Empresas Costo 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6e07076f-91ad-4894-a826-551ca48df47c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar Proyecto Empresas Costo 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="declare @Periodo int = (select MAX(id_periodo)  from AUX_PERIODO_MES_BORRA)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA;set id_empresa_PE_prom = null,&#xA;id_tipo_entidad_PE_prom = null,&#xA;id_marca_PE_prom = null,&#xA;id_convenio_especial_prom = null&#xA;WHERE id_periodo = @Periodo &#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA;set id_empresa_PE_prom = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_prom = S.id_tipo_entidad_PE,&#xA;id_marca_PE_prom = S.id_marca_PE,&#xA;id_convenio_especial_prom = S.id_convenio_especial&#xA;from H_PROMEDIOS_SALUD_COSTO1 P left join H_COMER_STOCK_AFILIA S on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_marca_PE is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD_COSTO1 R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_marca_PE_prom is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201512&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_tipo_entidad_PE, id_empresa_PE, id_marca_PE, id_convenio_especial &#xA;into #STOCK &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE S.id_persona = T.id_persona and S.id_periodo = T.id_periodo)&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA;set id_empresa_PE_prom = isnull(S.id_empresa_PE,0),&#xA;id_tipo_entidad_PE_prom = isnull(S.id_tipo_entidad_PE,'I'),&#xA;id_marca_PE_prom = isnull(S.id_marca_PE,7),&#xA;id_convenio_especial_prom = isnull(S.id_convenio_especial,0)&#xA;from H_PROMEDIOS_SALUD_COSTO1 P left join #STOCK S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_marca_PE_prom is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA;set id_empresa_PE_prom = 0,&#xA;id_tipo_entidad_PE_prom = 'I',&#xA;id_marca_PE_prom = 7,&#xA;id_convenio_especial_prom = 0&#xA;from H_PROMEDIOS_SALUD_COSTO1 &#xA;where id_periodo = @Periodo and id_marca_PE_prom is null&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK&#xA;&#xA;&#xA;&#xA;----ACTUALIZA CONVENIOS&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA;set id_convenio = null,&#xA;&#x9;id_tipo_entidad_convenio = null&#xA;WHERE id_periodo = @Periodo&#xA;&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA;set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD_COSTO1 P left join H_COMER_STOCK_AFILIA S &#xA;on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_convenio is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP2 &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD_COSTO1 R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_marca_PE_prom is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201705&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_convenio,id_tipo_entidad_convenio&#xA;into #STOCK2 &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP2 T WHERE S.id_persona = T.id_persona and S.id_periodo = T.id_periodo)&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK2&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA; set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD_COSTO1 P left join #STOCK2 S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_convenio is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO1&#xA; set id_convenio = 0,&#xA;&#x9;id_tipo_entidad_convenio = 'I'&#xA;from H_PROMEDIOS_SALUD_COSTO1 &#xA;where id_periodo = @Periodo and id_convenio is null&#xA;&#xA;DROP TABLE #TEMP2&#xA;DROP TABLE #STOCK2&#xA;&#xA;&#xA;&#xA;&#xA;select distinct id_convenio,id_tipo_entidad_convenio,0 as id_periodo_maximo into #convenios_nuevos from H_PROMEDIOS_SALUD_COSTO1 &#xA;where id_convenio not in (select id_convenio from H_CONVENIOS_EMPRESAS where id_periodo = @periodo) and id_periodo = @periodo&#xA;&#xA;update #convenios_nuevos&#xA;set id_periodo_maximo = maximo_periodo from&#xA;#convenios_nuevos c inner join (&#xA;select t.id_convenio, max(h.id_periodo) as maximo_periodo from #convenios_nuevos t inner join H_CONVENIOS_EMPRESAS h on t.id_convenio = h.id_convenio&#xA;&#x9;and t.id_tipo_entidad_convenio = h.id_tipo_entidad_convenio&#xA;group by t.id_convenio) A on c.id_convenio = a.id_convenio&#xA;&#xA;&#xA;insert into H_CONVENIOS_EMPRESAS&#xA;select @periodo,c.id_convenio,c.id_tipo_entidad_convenio,e.id_subtipo_venta,id_rango_stock,id_rango_costo,id_blindaje,interes_comercial,es_mutual&#xA;,id_holding,'Prom1' from #convenios_nuevos c inner join H_CONVENIOS_EMPRESAS e&#xA;on  c.id_convenio = e.id_convenio and c.id_periodo_maximo = e.id_periodo and c.id_tipo_entidad_convenio = e.id_tipo_entidad_convenio&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar Proyecto Empresas Costo 2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1a9a4ce0-ae68-4e32-8a65-578b66903e91}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar Proyecto Empresas Costo 2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="declare @Periodo int = (select MAX(id_periodo)  from AUX_PERIODO_MES_BORRA)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA;set id_empresa_PE_prom = null,&#xA;id_tipo_entidad_PE_prom = null,&#xA;id_marca_PE_prom = null,&#xA;id_convenio_especial_prom = null&#xA;WHERE id_periodo = @Periodo &#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA;set id_empresa_PE_prom = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_prom = S.id_tipo_entidad_PE,&#xA;id_marca_PE_prom = S.id_marca_PE,&#xA;id_convenio_especial_prom = S.id_convenio_especial&#xA;from H_PROMEDIOS_SALUD_COSTO2 P left join H_COMER_STOCK_AFILIA S on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_marca_PE is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD_COSTO2 R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_marca_PE_prom is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201512&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_tipo_entidad_PE, id_empresa_PE, id_marca_PE, id_convenio_especial &#xA;into #STOCK &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA;set id_empresa_PE_prom = isnull(S.id_empresa_PE,0),&#xA;id_tipo_entidad_PE_prom = isnull(S.id_tipo_entidad_PE,'I'),&#xA;id_marca_PE_prom = isnull(S.id_marca_PE,7),&#xA;id_convenio_especial_prom = isnull(S.id_convenio_especial,0)&#xA;from H_PROMEDIOS_SALUD_COSTO2 P left join #STOCK S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_marca_PE_prom is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA;set id_empresa_PE_prom = 0,&#xA;id_tipo_entidad_PE_prom = 'I',&#xA;id_marca_PE_prom = 7,&#xA;id_convenio_especial_prom = 0&#xA;from H_PROMEDIOS_SALUD_COSTO2 &#xA;where id_periodo = @Periodo and id_marca_PE_prom is null&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK&#xA;&#xA;&#xA;&#xA;-- ACTUALIZA CONVENIOS&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA;set id_convenio = null,&#xA;&#x9;id_tipo_entidad_convenio = null&#xA;WHERE id_periodo = @Periodo&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA;set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD_COSTO2 P left join H_COMER_STOCK_AFILIA S &#xA;on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_convenio is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP2 &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD_COSTO2 R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_convenio is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201705&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_convenio,id_tipo_entidad_convenio&#xA;into #STOCK2 &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP2 T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK2&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA; set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD_COSTO2 P left join #STOCK2 S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_convenio is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO2&#xA; set id_convenio = 0,&#xA;&#x9;id_tipo_entidad_convenio = 'I'&#xA;from H_PROMEDIOS_SALUD_COSTO2&#xA;where id_periodo = @Periodo and id_convenio is null&#xA;&#xA;DROP TABLE #TEMP2&#xA;DROP TABLE #STOCK2&#xA;&#xA;&#xA;select distinct id_convenio,id_tipo_entidad_convenio,0 as id_periodo_maximo into #convenios_nuevos from H_PROMEDIOS_SALUD_COSTO2 &#xA;where id_convenio not in (select id_convenio from H_CONVENIOS_EMPRESAS where id_periodo = @periodo) and id_periodo = @periodo&#xA;&#xA;update #convenios_nuevos&#xA;set id_periodo_maximo = maximo_periodo from&#xA;#convenios_nuevos c inner join (&#xA;select t.id_convenio, max(h.id_periodo) as maximo_periodo from #convenios_nuevos t inner join H_CONVENIOS_EMPRESAS h on t.id_convenio = h.id_convenio&#xA;&#x9;and t.id_tipo_entidad_convenio = h.id_tipo_entidad_convenio&#xA;group by t.id_convenio) A on c.id_convenio = a.id_convenio&#xA;&#xA;&#xA;insert into H_CONVENIOS_EMPRESAS&#xA;select @periodo,c.id_convenio,c.id_tipo_entidad_convenio,e.id_subtipo_venta,id_rango_stock,id_rango_costo,id_blindaje,interes_comercial,es_mutual&#xA;,id_holding,'Prom2' from #convenios_nuevos c inner join H_CONVENIOS_EMPRESAS e&#xA;on  c.id_convenio = e.id_convenio and c.id_periodo_maximo = e.id_periodo and c.id_tipo_entidad_convenio = e.id_tipo_entidad_convenio&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar Proyecto Empresas Costo 3"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{c3a7ec80-8eba-4d16-b4b2-23c80a985a49}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar Proyecto Empresas Costo 3"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="Declare @Periodo int = (select MAX(id_periodo)  from AUX_PERIODO_MES_BORRA)&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA;set id_empresa_PE_prom = null,&#xA;id_tipo_entidad_PE_prom = null,&#xA;id_marca_PE_prom = null,&#xA;id_convenio_especial_prom = null&#xA;WHERE id_periodo = @Periodo &#xA;&#xA;update H_PROMEDIOS_SALUD&#xA;set id_empresa_PE_prom = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_prom = S.id_tipo_entidad_PE,&#xA;id_marca_PE_prom = S.id_marca_PE,&#xA;id_convenio_especial_prom = S.id_convenio_especial&#xA;from H_PROMEDIOS_SALUD P left join H_COMER_STOCK_AFILIA S on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_marca_PE is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_marca_PE_prom is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201512&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_tipo_entidad_PE, id_empresa_PE, id_marca_PE, id_convenio_especial &#xA;into #STOCK &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA;set id_empresa_PE_prom = isnull(S.id_empresa_PE,0),&#xA;id_tipo_entidad_PE_prom = isnull(S.id_tipo_entidad_PE,'I'),&#xA;id_marca_PE_prom = isnull(S.id_marca_PE,7),&#xA;id_convenio_especial_prom = isnull(S.id_convenio_especial,0)&#xA;from H_PROMEDIOS_SALUD P left join #STOCK S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_marca_PE_prom is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA;set id_empresa_PE_prom = 0,&#xA;id_tipo_entidad_PE_prom = 'I',&#xA;id_marca_PE_prom = 7,&#xA;id_convenio_especial_prom = 0&#xA;from H_PROMEDIOS_SALUD &#xA;where id_periodo = @Periodo and id_marca_PE_prom is null&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK&#xA;&#xA;&#xA;---- ACTUALIZA CONVENIOS&#xA;&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA;set id_convenio = null,&#xA;&#x9;id_tipo_entidad_convenio = null&#xA;WHERE id_periodo = @Periodo&#xA;&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA;set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD P left join H_COMER_STOCK_AFILIA S on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_convenio is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP2 &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_convenio is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201705&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_convenio,id_tipo_entidad_convenio&#xA;into #STOCK2 &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP2 T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK2&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA; set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD P left join #STOCK2 S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_convenio is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD&#xA; set id_convenio = 0,&#xA;&#x9;id_tipo_entidad_convenio = 'I'&#xA;from H_PROMEDIOS_SALUD&#xA;where id_periodo = @Periodo and id_convenio is null&#xA;&#xA;DROP TABLE #TEMP2&#xA;DROP TABLE #STOCK2&#xA;&#xA;&#xA;select distinct id_convenio,id_tipo_entidad_convenio,0 as id_periodo_maximo into #convenios_nuevos from H_PROMEDIOS_SALUD &#xA;where id_convenio not in (select id_convenio from H_CONVENIOS_EMPRESAS where id_periodo = @periodo) and id_periodo = @periodo&#xA;&#xA;update #convenios_nuevos&#xA;set id_periodo_maximo = maximo_periodo from&#xA;#convenios_nuevos c inner join (&#xA;select t.id_convenio, max(h.id_periodo) as maximo_periodo from #convenios_nuevos t inner join H_CONVENIOS_EMPRESAS h on t.id_convenio = h.id_convenio&#xA;&#x9;and t.id_tipo_entidad_convenio = h.id_tipo_entidad_convenio&#xA;group by t.id_convenio) A on c.id_convenio = a.id_convenio&#xA;&#xA;&#xA;insert into H_CONVENIOS_EMPRESAS&#xA;select @periodo,c.id_convenio,c.id_tipo_entidad_convenio,e.id_subtipo_venta,id_rango_stock,id_rango_costo,id_blindaje,interes_comercial,es_mutual&#xA;,id_holding,'Prom3' from #convenios_nuevos c inner join H_CONVENIOS_EMPRESAS e&#xA;on  c.id_convenio = e.id_convenio and c.id_periodo_maximo = e.id_periodo and c.id_tipo_entidad_convenio = e.id_tipo_entidad_convenio&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualizar Proyecto Empresas Costo 4"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{b628dc4d-57e5-4d8e-b96a-4fffa33da6d9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizar Proyecto Empresas Costo 4"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="declare @Periodo int = (select MAX(id_periodo)  from AUX_PERIODO_MES_BORRA)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA;set id_empresa_PE_prom = null,&#xA;id_tipo_entidad_PE_prom = null,&#xA;id_marca_PE_prom = null,&#xA;id_convenio_especial_prom = null&#xA;WHERE id_periodo = @Periodo &#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA;set id_empresa_PE_prom = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_prom = S.id_tipo_entidad_PE,&#xA;id_marca_PE_prom = S.id_marca_PE,&#xA;id_convenio_especial_prom = S.id_convenio_especial&#xA;from H_PROMEDIOS_SALUD_COSTO4 P left join H_COMER_STOCK_AFILIA S on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_marca_PE is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD_COSTO4 R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_marca_PE_prom is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201512&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_tipo_entidad_PE, id_empresa_PE, id_marca_PE, id_convenio_especial &#xA;into #STOCK &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE S.id_persona = T.id_persona and S.id_periodo = T.id_periodo)&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA;set id_empresa_PE_prom = isnull(S.id_empresa_PE,0),&#xA;id_tipo_entidad_PE_prom = isnull(S.id_tipo_entidad_PE,'I'),&#xA;id_marca_PE_prom = isnull(S.id_marca_PE,7),&#xA;id_convenio_especial_prom = isnull(S.id_convenio_especial,0)&#xA;from H_PROMEDIOS_SALUD_COSTO4 P left join #STOCK S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_marca_PE_prom is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201512&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA;set id_empresa_PE_prom = 0,&#xA;id_tipo_entidad_PE_prom = 'I',&#xA;id_marca_PE_prom = 7,&#xA;id_convenio_especial_prom = 0&#xA;from H_PROMEDIOS_SALUD_COSTO4 &#xA;where id_periodo = @Periodo and id_marca_PE_prom is null&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK&#xA;&#xA;--ACTUALIZA CONVENIOS&#xA;&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA;set id_convenio = null,&#xA;&#x9;id_tipo_entidad_convenio = null&#xA;WHERE id_periodo = @Periodo&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA;set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD_COSTO4 P left join H_COMER_STOCK_AFILIA S on (P.id_periodo = S.id_periodo and P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and S.id_convenio is not null&#xA;&#xA;&#xA;--Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP2 &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_PROMEDIOS_SALUD_COSTO4 R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_convenio is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201705&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_convenio,id_tipo_entidad_convenio &#xA;into #STOCK2 &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP2 T WHERE S.id_persona = T.id_persona and S.id_periodo = T.id_periodo)&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;CREATE INDEX IX_#STOCK_Persona&#xA;    ON #STOCK2&#xA;    (id_persona)&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA; set id_convenio = s.id_convenio,&#xA;&#x9;id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;from H_PROMEDIOS_SALUD_COSTO4 P left join #STOCK2 S on (P.id_persona = S.id_persona)&#xA;where P.id_periodo = @Periodo and P.id_convenio is null and S.id_persona is not null&#xA;and S.id_periodo &gt;= 201705&#xA;&#xA;&#xA;-- LO QUE QUEDA SIN ACTUALIZAR LO PASAMOS A INDIVIDUAL&#xA;&#xA;update H_PROMEDIOS_SALUD_COSTO4&#xA; set id_convenio = 0,&#xA;&#x9;id_tipo_entidad_convenio = 'I'&#x9;&#xA;from H_PROMEDIOS_SALUD_COSTO4 &#xA;where id_periodo = @Periodo and id_convenio is null&#xA;&#xA;DROP TABLE #TEMP2&#xA;DROP TABLE #STOCK2&#xA;&#xA;&#xA;select distinct id_convenio,id_tipo_entidad_convenio,0 as id_periodo_maximo into #convenios_nuevos from H_PROMEDIOS_SALUD_COSTO4 &#xA;where id_convenio not in (select id_convenio from H_CONVENIOS_EMPRESAS where id_periodo = @periodo) and id_periodo = @periodo&#xA;&#xA;update #convenios_nuevos&#xA;set id_periodo_maximo = maximo_periodo from&#xA;#convenios_nuevos c inner join (&#xA;select t.id_convenio, max(h.id_periodo) as maximo_periodo from #convenios_nuevos t inner join H_CONVENIOS_EMPRESAS h on t.id_convenio = h.id_convenio&#xA;&#x9;and t.id_tipo_entidad_convenio = h.id_tipo_entidad_convenio&#xA;group by t.id_convenio) A on c.id_convenio = a.id_convenio&#xA;&#xA;&#xA;insert into H_CONVENIOS_EMPRESAS&#xA;select @periodo,c.id_convenio,c.id_tipo_entidad_convenio,e.id_subtipo_venta,id_rango_stock,id_rango_costo,id_blindaje,interes_comercial,es_mutual&#xA;,id_holding,'Prom4' from #convenios_nuevos c inner join H_CONVENIOS_EMPRESAS e&#xA;on  c.id_convenio = e.id_convenio and c.id_periodo_maximo = e.id_periodo and c.id_tipo_entidad_convenio = e.id_tipo_entidad_convenio&#xA; " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Armar estructura paralelas de sumarizacion de informacion"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Armar estructura paralelas de sumarizacion de informacion"
      DTS:Disabled="True"
      DTS:DTSID="{EFEADFD2-313E-4A9B-8067-8431D314D85E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Armar estructura paralelas de sumarizacion de informacion"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from D_PERIODO where  vigente_consumo=1)&#xA;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#xA;&#x9;DELETE FROM H_promedios_salud where id_periodo = @Periodo&#xA;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en H_promedios_salud */&#xA;&#xA;&#x9;INSERT INTO H_promedios_salud&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial) /* Id Zona comercial: nuevo campo incorporado 12/8/2013 */ &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a11.id_localidad = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a19 on (a14.id_producto = a19.id_producto)&#xA;&#x9;&#x9;where&#x9;(not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;-----se agrega este para que se elimine los OSPERCIN&#xA;&#x9;&#x9;----- or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;&#x9;&#x9;))&#xA;&#x9;&#x9;and a19.id_clase_producto in ('S ')&#xA;&#x9;&#x9;and a11.id_periodo=@Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a18 on (a14.id_producto = a18.id_producto)&#xA;&#x9;&#x9;where not (((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;-----se agrega este para que se elimine los OSPERCIN&#xA;&#x9;&#x9;---   or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;&#x9;&#x9;))&#xA;&#x9;&#x9;and a18.id_clase_producto in ('S ')&#xA;&#x9;&#x9;and a11.id_periodo = @Periodo&#xA;&#x9;&#x9;and a11.id_subsidio_supra in ('N')&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a17 on (a14.id_producto = a17.id_producto)&#xA;&#x9;&#x9;where&#x9; not (((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;-----se agrega este para que se elimine los OSPERCIN&#xA;&#x9;&#x9;---  or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;&#x9;&#x9;))&#xA;&#x9;&#x9;and a17.id_clase_producto in ('S ')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where&#x9;(not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;&#x9;or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;-----se agrega este para que se elimine los OSPERCIN&#xA;&#x9;&#x9;---  or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;&#x9;&#x9;))&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial&#xA;&#xA;/* Vuelvo a Actualizar H_promedios_salud en base a la informacion ya actualizada */&#xA;&#xA;&#x9;&#x9;INSERT INTO H_promedios_salud &#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;Promedio_consumo,&#xA;&#x9;&#x9;&#x9;Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial)&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;NULL as Total_asociados,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12 as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12 as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12 as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;WHERE id_periodo in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc)&#xA;&#x9;&#x9;group by &#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial&#xA;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Armar estructura paralelas de sumarizacion de informacion (Antes)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Armar estructura paralelas de sumarizacion de informacion"
      DTS:Disabled="True"
      DTS:DTSID="{1cbb65eb-7a4e-450f-b0a4-0d4bff4e6497}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Armar estructura paralelas de sumarizacion de informacion (Antes)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server v9; © 2004 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;DECLARE @Periodo int&#xA;SELECT @Periodo = (select max(id_periodo) from D_PERIODO where  vigente_consumo=1)&#xA;&#xA;DELETE FROM H_promedios_salud  where id_periodo=@Periodo&#xA;&#xA;INSERT INTO H_promedios_salud &#xA;(id_periodo, id_rubro_salud, id_plan_producto, id_producto, id_posicion, Total_liquidacion,&#xA;Total_consumo, Total_asociados, Promedio_liquidacion, Promedio_consumo, Promedio_asociados)&#xA;----totales por recaudacion &#xA;select a11.id_periodo,&#xA;  a14.id_rubro_salud,&#xA;  a11.id_plan_producto,&#xA;  a11.id_producto,&#xA;  a13.id_posicion,&#xA;  sum(a11.total_recaudacion) as Total_liquidacion,&#xA;  null as Total_Consumo,&#xA;  null as Total_asociados,&#xA;  null as Promedio_liquidacion,&#xA;  null as Promedio_consumo, &#xA;  null as Promedio_asociados&#xA;from H_RECAUDACION_DETALLE a11&#xA; left join D_LOCALIDADES_AFILIADO a13&#xA;   on  (a11.id_localidad = a13.id_localidad_afiliado)&#xA; left join D_PLANES a14&#xA;   on  (a11.id_plan_producto = a14.id_plan_producto and &#xA; a11.id_producto = a14.id_producto)&#xA;where (not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;-----se agrega este para que se elimine los OSPERCIN&#xA;----- or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;))&#xA;and a11.id_periodo=@Periodo&#xA;group by a14.id_rubro_salud,&#xA; a11.id_plan_producto, a13.id_posicion, a11.id_producto,&#xA; a11.ID_PERIODO &#xA;&#xA;UNION ALL&#xA;----aqui estan los totales por consumo AMBULATORIO&#xA;select a11.id_periodo,&#xA; a14.id_rubro_salud,&#xA; a11.id_plan_producto,&#xA; a11.id_producto,&#xA; a13.id_posicion,&#xA; null as Total_liquidacion,&#xA; sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA; null as Total_asociados,&#xA; null as Promedio_liquidacion,&#xA; null as Promedio_consumo, &#xA; null as Promedio_asociados&#xA;from H_ORD_AMB_DET a11&#xA; left join D_PERSONAS a12&#xA;   on  (a11.id_persona = a12.id_persona)&#xA; left join D_LOCALIDADES_AFILIADO a13&#xA;   on  (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA; left join D_PLANES a14&#xA;   on  (a11.id_plan_producto = a14.id_plan_producto and &#xA; a11.id_producto = a14.id_producto)&#xA;where not (((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;-----se agrega este para que se elimine los OSPERCIN&#xA;---   or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;))&#xA;and a11.id_periodo=@Periodo&#xA;group by a14.id_rubro_salud,&#xA; a11.id_plan_producto,a11.id_producto, a13.id_posicion, a11.id_periodo&#xA;&#xA;UNION ALL&#xA;----aqui estan los totales por consumo INTERNACION&#xA;select a11.id_periodo,&#xA; a14.id_rubro_salud,&#xA; a11.id_plan_producto,&#xA; a11.id_producto,&#xA; a13.id_posicion,&#xA; null as Total_liquidacion,&#xA; sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA; null as Total_asociados,&#xA; null as Promedio_liquidacion,&#xA; null as Promedio_consumo, &#xA; null as Promedio_asociados&#xA;from H_ORD_INT_DET a11&#xA; left join D_PERSONAS a12&#xA;   on  (a11.id_persona = a12.id_persona)&#xA; left join D_LOCALIDADES_AFILIADO a13&#xA;   on  (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA; left join D_PLANES a14&#xA;   on  (a11.id_plan_producto = a14.id_plan_producto and &#xA; a11.id_producto = a14.id_producto)&#xA;where  not (((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;-----se agrega este para que se elimine los OSPERCIN&#xA;---  or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;))&#xA;and id_periodo=@Periodo&#xA;group by a14.id_rubro_salud,&#xA; a11.id_plan_producto,a11.id_producto, a13.id_posicion, a11.id_periodo&#xA;&#xA;UNION ALL&#xA;-----Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1)&#xA;select @Periodo,&#xA;  a15.id_rubro_salud,&#xA;  a11.id_plan_producto,&#xA;  a11.id_producto,&#xA;  a14.id_posicion,&#xA;  null as Total_liquidacion, &#xA;  null as Total_consumo,&#xA;  sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;  null as Promedio_liquidacion,&#xA;  null as Promedio_consumo,&#xA;  null as Promedio_asociados&#xA;from H_COMP_GRUPO_ACTIVO a11&#xA; join TRANS_PERIODO a12&#xA;   on  (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA; left join D_PERSONAS a13&#xA;   on  (a11.id_persona = a13.id_persona)&#xA; left join D_LOCALIDADES_AFILIADO a14&#xA;   on  (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA; left join D_PLANES a15&#xA;   on  (a11.id_plan_producto = a15.id_plan_producto and &#xA; a11.id_producto = a15.id_producto)&#xA;where (not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    '))&#xA; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'M    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;-----se agrega este para que se elimine los OSPERCIN&#xA;---  or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;))&#xA;AND a12.id_periodo=@Periodo&#xA;group by a11.id_periodo,&#xA; a15.id_rubro_salud,&#xA; a11.id_producto,&#xA; a11.id_plan_producto,&#xA; a14.id_posicion&#xA;&#xA;----ver como calcular los 12 meses&#xA;INSERT INTO H_promedios_salud &#xA;(id_periodo, id_rubro_salud, id_plan_producto, id_producto, id_posicion, Total_liquidacion,&#xA;Total_consumo, Total_asociados, Promedio_liquidacion, Promedio_consumo, Promedio_asociados)&#xA;select @Periodo,&#xA;  id_rubro_salud,&#xA;  id_plan_producto,&#xA;  id_producto,&#xA;  id_posicion,&#xA;  null as Total_liquidacion, &#xA;  null as Total_consumo,&#xA;  NULL as Total_asociados,&#xA;  sum(IsNull(total_liquidacion,0))/12 as Promedio_liquidacion,&#xA;  sum(IsNull(total_consumo,0))/12 as Promedio_consumo,&#xA;  sum(IsNull(total_asociados,0))/12 as Promedio_asociados&#xA;from H_PROMEDIOS_SALUD&#xA;WHERE id_periodo in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc)&#xA;group by id_rubro_salud, id_plan_producto, id_producto, id_posicion&#xA;&#xA;&#xA;UPDATE H_PROMEDIOS_SALUD&#xA;SET id_posicion=999&#xA;where id_posicion is null and id_rubro_salud IN ('S', 'A')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Calculo 1 (anterior al agregado de persona)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Agregado marca valorizacion, y exclusion de AMPS 09/12/2015"
      DTS:Disabled="True"
      DTS:DTSID="{00B80F55-A496-4E8C-9D3E-F2F2B561A34F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Calculo 1 (anterior al agregado de persona)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int, @Periodo_desde  int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from D_PERIODO where  vigente_consumo=1)&#xA;&#x9;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#xA;&#x9;DELETE FROM H_promedios_salud where id_periodo = @Periodo&#xA;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en H_promedios_salud */&#xA;&#xA;&#x9;INSERT INTO H_PROMEDIOS_SALUD&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial) /* Id Zona comercial: nuevo campo incorporado 12/8/2013 */ &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_PERSONAS&#x9;a12&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a13&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PRODUCTOS a15 on (a14.id_producto = a15.id_producto)&#xA;&#x9;&#x9;where&#x9;(a15.Id_Clase_Producto in ('S ')&#xA;&#x9;&#x9;&#x9;&#x9;and a14.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9;&#x9;&#x9;and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9;&#x9;&#x9;and a15.id_segmento not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and a11.id_periodo = @Periodo)&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a18 on (a14.id_producto = a18.id_producto)&#xA;&#x9;&#x9;where&#x9;(a18.Id_Clase_Producto in ('S ')&#xA;&#x9;&#x9; and a14.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9; and a11.id_marca_valorizacion in ('P')&#xA;&#x9;&#x9; and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and a18.id_segmento not in (3)&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo)&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a17 on (a14.id_producto = a17.id_producto)&#xA;&#x9;&#x9;WHERE (a17.Id_Clase_Producto in ('S ')&#xA;&#x9;&#x9; and a14.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9; and a11.id_marca_valorizacion in ('P')&#xA;&#x9;&#x9; and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and a17.id_segmento not in (3)&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo)&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where&#x9; not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='PMO  ')&#xA;&#x9;   or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9;-----se agrega este para que se elimine los OSPERCIN&#xA;&#x9;&#x9;---  or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;&#x9;&#x9;and a16.id_segmento not in (3)&#xA;&#x9;&#x9;and a15.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial&#xA;&#xA;/* Vuelvo a Actualizar H_promedios_salud en base a la informacion ya actualizada */&#xA;&#xA;/**/&#xA;&#xA;&#x9;&#x9;INSERT INTO H_PROMEDIOS_SALUD &#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;Promedio_consumo,&#xA;&#x9;&#x9;&#x9;Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial)&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;NULL as Total_asociados,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12 as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12 as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12 as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial&#xA;&#x9;&#x9;from&#x9;H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;WHERE id_periodo in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc)&#xA;&#x9;&#x9;group by &#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial&#xA;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null &#xA;&#x9;&#x9;and id_periodo = @Periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Calculo 2  agregando id_persona e id_promotor"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{9F99F385-1CBA-42F5-9E90-657956F1329E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Calculo 2  agregando id_persona e id_promotor"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="set DateFormat 'YMD'&#xA;&#xA;/* Actualizo Variable con el ultimo periodo de Consumos */&#xA;&#xA;&#x9;DECLARE @Periodo int, @Periodo_desde  int&#xA;&#x9;SELECT @Periodo = (select max(id_periodo) from D_PERIODO where  vigente_consumo=1)&#xA;&#xA;/* Borro periodo ya cargado en H_promedios_salud */&#xA;&#x9;&#xA;&#x9;delete H_PROMEDIOS_SALUD where id_periodo = @Periodo&#xA;&#x9;DELETE AUX_H_PROMEDIOS_SALUD&#xA;&#x9;&#xA;/* Actualizo Recaudacion, Consumos y Afiliados en AUX_H_PROMEDIOS_SALUD */&#xA;&#xA;&#x9;INSERT INTO AUX_H_PROMEDIOS_SALUD&#xA;&#x9;(id_periodo,&#xA;&#x9;id_rubro_salud,&#xA;&#x9;id_plan_producto,&#xA;&#x9;id_producto,&#xA;&#x9;id_posicion,&#xA;&#x9;Total_liquidacion,&#xA;&#x9;Total_consumo,&#xA;&#x9;Total_asociados,&#xA;&#x9;Promedio_liquidacion,&#xA;&#x9;Promedio_consumo,&#xA;&#x9;Promedio_asociados,&#xA;&#x9;id_zona_comercial,&#xA;&#x9;id_persona) /* Id Zona comercial: nuevo campo incorporado 12/8/2013 */ &#xA;&#xA;&#x9;/* Totales por Recaudación */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;IsNULL(a13.id_posicion,230) as id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.total_recaudacion) as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_Consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_RECAUDACION_DETALLE&#x9;a11&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_PERSONAS&#x9;a12&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a13&#xA;&#x9;&#x9;&#x9;&#x9;on &#x9;(a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;&#x9;left join D_PRODUCTOS a15 on (a14.id_producto = a15.id_producto)&#xA;&#x9;&#x9;where&#x9;(a15.Id_Clase_Producto in ('S ')&#xA;&#x9;&#x9;&#x9;&#x9;and a14.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9;&#x9;&#x9;and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;&#x9;    or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9;&#x9;&#x9;and a15.id_segmento not in (3)&#xA;&#x9;&#x9;&#x9;&#x9;and a11.id_periodo = @Periodo)&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.ID_PERIODO,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Ambulatorio */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_pret_amb_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a18 on (a14.id_producto = a18.id_producto)&#xA;&#x9;&#x9;where&#x9;(a18.Id_Clase_Producto in ('S ')&#xA;&#x9;&#x9; and a14.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9; and a11.id_marca_valorizacion in ('P')&#xA;&#x9;&#x9; and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and a18.id_segmento not in (3)&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo)&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Totales por Consumo Internaciones */&#xA;&#xA;&#x9;&#x9;select&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;null as Total_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(a11.imp_prest_int_pag) as Total_Consumo,&#xA;&#x9;&#x9;&#x9;null as Total_asociados,&#xA;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;null as Promedio_consumo, &#xA;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_ORD_INT_DET&#x9;a11&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a12 on (a11.id_persona = a12.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a13 on (a12.id_localidad_afiliado = a13.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a14 on (a11.id_plan_producto = a14.id_plan_producto and a11.id_producto = a14.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a17 on (a14.id_producto = a17.id_producto)&#xA;&#x9;&#x9;WHERE (a17.Id_Clase_Producto in ('S ')&#xA;&#x9;&#x9; and a14.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9; and a11.id_marca_valorizacion in ('P')&#xA;&#x9;&#x9; and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9; and a17.id_segmento not in (3)&#xA;&#x9;&#x9; and a11.id_periodo = @Periodo)&#xA;&#x9;&#x9;group by&#x9;a14.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a13.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;UNION ALL&#xA;&#xA;&#x9;/* Calcular los totales de cantidad de afiliados ( actualizar con periodo n-1) */&#xA;&#xA;&#x9;&#x9;select&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_liquidacion,&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;null as Total_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;sum(a11.cant_comp_grupo_activos) as Total_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;&#x9;null as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#x9;&#x9;from&#x9;H_COMP_GRUPO_ACTIVO&#x9;a11&#xA;&#x9;&#x9;&#x9;join TRANS_PERIODO a12 on (a11.ID_PERIODO = a12.ID_PERIODO_ANTERIOR)&#xA;&#x9;&#x9;&#x9;left join D_PERSONAS a13 on (a11.id_persona = a13.id_persona)&#xA;&#x9;&#x9;&#x9;left join D_LOCALIDADES_AFILIADO a14 on (a13.id_localidad_afiliado = a14.id_localidad_afiliado)&#xA;&#x9;&#x9;&#x9;left join D_PLANES a15 on (a11.id_plan_producto = a15.id_plan_producto and a11.id_producto = a15.id_producto)&#xA;&#x9;&#x9;&#x9;left join D_PRODUCTOS a16 on (a15.id_producto = a16.id_producto)&#xA;&#x9;&#x9;where&#x9; not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;&#x9;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;&#x9;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;&#x9;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;&#x9;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;&#x9;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA;&#x9;&#x9;-----se agrega este para que se elimine los OSPERCIN&#xA;&#x9;&#x9;---  or  (a11.id_producto=14 and a11.id_plan_producto='CO   ')&#xA;&#x9;&#x9;and a16.id_segmento not in (3)&#xA;&#x9;&#x9;and a15.id_subrubro_ley in (1, 2, 3)&#xA;&#x9;&#x9;and a16.id_clase_producto in ('S ')&#xA;&#x9;&#x9;AND a12.id_periodo = @Periodo&#xA;&#x9;&#x9;group by&#x9;a11.id_periodo,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a15.id_rubro_salud,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_plan_producto,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_posicion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a14.id_zona_comercial,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;a11.id_persona&#xA;&#xA;/* Inserto en H_PROMEDIOS_SALUD la suma de los totales de liquidacion, consumo y asociados &#xA;para luego poder calcular los promedios de los ultimos 12 meses*/&#xA;&#xA;&#x9;&#x9;INSERT INTO H_PROMEDIOS_SALUD &#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0)),&#x9;&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0)),&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0)),&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;from&#x9;AUX_H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;WHERE id_periodo = @Periodo &#xA;&#x9;&#x9;group by &#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#xA;&#xA;/* calculo los promedios */&#xA;&#xA;&#x9;INSERT INTO H_PROMEDIOS_SALUD &#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;Promedio_consumo,&#xA;&#x9;&#x9;&#x9;Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona)&#xA;&#x9;select&#xA;&#x9;&#x9;&#x9;@Periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0))/12 as Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0))/12 as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0))/12 as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;from&#x9;H_PROMEDIOS_SALUD&#xA;&#x9;WHERE id_periodo in (select Top 12 id_periodo from D_PERIODO where  vigente_consumo=1 order by id_periodo desc)&#xA;&#x9;and id_persona is not null&#xA;&#x9;group by &#xA;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;&#xA;/* Como actualmente tenemos valores nulos en los campos de totales y promedios &#xA;Hacemos un pasaje de toda la info, sumando los campos necesarios para que quede todo agrupado en un solo&#xA;registro por la clave compuesta que figura en el group by y se eliminen los nulos */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;select&#xA;&#x9;&#x9;&#x9;id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_liquidacion,0)) as total_liquidacion ,&#x9;&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_consumo,0)) as total_consumo,&#xA;&#x9;&#x9;&#x9;sum(IsNull(total_asociados,0)) as total_asociados,&#xA;&#x9;&#x9;&#x9;sum(IsNull(Promedio_liquidacion,0)) as Promedio_liquidacion, &#xA;&#x9;&#x9;&#x9;sum(IsNull(Promedio_consumo,0)) as Promedio_consumo,&#xA;&#x9;&#x9;&#x9;sum(IsNull(Promedio_asociados,0)) as Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona,&#xA;&#x9;&#x9;&#x9;null as id_promotor&#xA;&#x9;&#x9;into #TEMPORAL&#xA;&#x9;&#x9;from&#x9;H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;where id_periodo = @Periodo &#xA;&#x9;&#x9;and id_persona is not null --OJO CON ESTE FILTRO EN CASO DE TENER QUE REPOROCESAR INFO ANTERIORO A 201510&#xA;&#x9;&#x9;group by &#xA;&#x9;&#x9;&#x9;id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;/* ACTUALIZO PROMOTOR */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* en el periodo actual */&#xA;&#xA;&#x9;&#x9;UPDATE #TEMPORAL&#xA;&#x9;&#x9;set id_promotor = H.id_promotor&#xA;&#x9;&#x9;from #TEMPORAL HP join H_COMER_STOCK_AFILIA H on (HP.id_persona = H.id_persona)&#xA;&#x9;&#x9;where H.id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* si no esta la busco en el mayor periodo de stock */&#xA;&#xA;&#x9;&#x9;select id_persona, MAX(id_promotor) as id_promotor,max(id_periodo) as max_periodo&#xA;&#x9;&#x9;into #PERSMAX&#xA;&#x9;&#x9;from H_COMER_STOCK_AFILIA where id_persona in (select id_persona from #TEMPORAL where id_promotor is null AND id_persona IS NOT NULL)&#xA;&#x9;&#x9;group by id_persona&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE #TEMPORAL&#xA;&#x9;&#x9;set id_promotor = T.id_promotor&#xA;&#x9;&#x9;from #TEMPORAL H join #PERSMAX T on (T.id_persona = H.id_persona)&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;/* Si el promotor no se actualizo, es xq las personas que quedaron no estan en toda la historia del stock, pero por algun motivo&#xA;&#x9;&#x9;estaria llegando consumo y/o recaudacion. Por lo tanto le ponemos 99999 en el promotor. */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;UPDATE #TEMPORAL&#xA;&#x9;&#x9;set id_promotor = 999999&#xA;&#x9;&#x9;where id_promotor is null&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* Borro la info cargada para pasar solamente la info ya limpia y agrupada */&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;delete H_PROMEDIOS_SALUD where id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;/* inserto */&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;insert into H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;&#x9;(id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;Promedio_consumo,&#xA;&#x9;&#x9;&#x9;Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona,&#xA;&#x9;&#x9;&#x9;id_promotor)&#xA;&#x9;&#x9;select &#xA;&#x9;&#x9;&#x9;id_periodo,&#xA;&#x9;&#x9;&#x9;id_rubro_salud,&#xA;&#x9;&#x9;&#x9;id_plan_producto,&#xA;&#x9;&#x9;&#x9;id_producto,&#xA;&#x9;&#x9;&#x9;id_posicion,&#xA;&#x9;&#x9;&#x9;Total_liquidacion,&#xA;&#x9;&#x9;&#x9;Total_consumo,&#xA;&#x9;&#x9;&#x9;Total_asociados,&#xA;&#x9;&#x9;&#x9;Promedio_liquidacion,&#xA;&#x9;&#x9;&#x9;Promedio_consumo,&#xA;&#x9;&#x9;&#x9;Promedio_asociados,&#xA;&#x9;&#x9;&#x9;id_zona_comercial,&#xA;&#x9;&#x9;&#x9;id_persona,&#xA;&#x9;&#x9;&#x9;id_promotor&#xA;&#x9;&#x9;from #TEMPORAL&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;drop table #TEMPORAL&#xA;&#x9;&#x9;DROP TABLE #PERSMAX&#xA;&#x9;&#x9;DELETE AUX_H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;&#xA;/* Actualizo Posicion cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_posicion = 999&#xA;&#x9;&#x9;where id_posicion is null and id_rubro_salud IN ('S', 'A')&#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#xA;&#xA;/* Actualizo Zona Comercial cuando es nula */&#xA;&#xA;&#x9;&#x9;UPDATE H_PROMEDIOS_SALUD&#xA;&#x9;&#x9;SET id_zona_comercial = 0&#xA;&#x9;&#x9;where id_zona_comercial is null &#xA;&#x9;&#x9;and id_periodo = @Periodo&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3DC6EFFE-98A4-4757-B57F-A82101351CF0}"
      DTS:From="Package\Actualizar H_PROMEDIOS_SALUD_COSTO1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualizar Proyecto Empresas Costo 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{025B34FD-5AFD-4D3F-B1EB-5106DF00F066}"
      DTS:From="Package\Actualizar H_PROMEDIOS_SALUD_COSTO2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Actualizar Proyecto Empresas Costo 2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{D186E781-F285-461B-AE58-09989A15D99A}"
      DTS:From="Package\Actualizar H_PROMEDIOS_SALUD"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Actualizar Proyecto Empresas Costo 3" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{94B0D09C-7785-4D26-A66C-30DED2BBF96A}"
      DTS:From="Package\Actualizar Proyecto Empresas Costo 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Actualizar H_PROMEDIOS_SALUD_COSTO2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{F90B1BC6-43C1-44C3-B01D-BED0C7076FF5}"
      DTS:From="Package\Actualizar Proyecto Empresas Costo 2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Actualizar H_PROMEDIOS_SALUD" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{67E19E4D-8AFD-402E-B204-A98B1D6A3886}"
      DTS:From="Package\Actualizar Proyecto Empresas Costo 3"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Actualizar H_PROMEDIOS_SALUD_COSTO4" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{D23B6E8F-4DA1-4BEE-A288-091F45ED6BB9}"
      DTS:From="Package\Actualizar H_PROMEDIOS_SALUD_COSTO4"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Actualizar Proyecto Empresas Costo 4" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="254,42"
          Id="Package\Actualizar H_PROMEDIOS_SALUD"
          TopLeft="156.066037735849,455.230458221024" />
        <NodeLayout
          Size="306,42"
          Id="Package\Actualizar H_PROMEDIOS_SALUD_COSTO1"
          TopLeft="146.066037735849,172.254716981132" />
        <NodeLayout
          Size="306,42"
          Id="Package\Actualizar H_PROMEDIOS_SALUD_COSTO2"
          TopLeft="132.518867924528,313.742587601078" />
        <NodeLayout
          Size="306,42"
          Id="Package\Actualizar H_PROMEDIOS_SALUD_COSTO4"
          TopLeft="137.537735849057,596.71832884097" />
        <NodeLayout
          Size="267,42"
          Id="Package\Actualizar Proyecto Empresas Costo 1"
          TopLeft="302.518867924528,242.998652291105" />
        <NodeLayout
          Size="267,42"
          Id="Package\Actualizar Proyecto Empresas Costo 2"
          TopLeft="295.424528301887,384.486522911051" />
        <NodeLayout
          Size="267,42"
          Id="Package\Actualizar Proyecto Empresas Costo 3"
          TopLeft="285.122641509434,525.974393530997" />
        <NodeLayout
          Size="267,42"
          Id="Package\Actualizar Proyecto Empresas Costo 4"
          TopLeft="290.556603773585,667.462264150943" />
        <NodeLayout
          Size="228,44"
          Id="Package\Armar estructura paralelas de sumarizacion de informacion"
          TopLeft="5.5,7.27358490566036" />
        <NodeLayout
          Size="335,44"
          Id="Package\Armar estructura paralelas de sumarizacion de informacion (Antes)"
          TopLeft="5.5,70.0660377358491" />
        <NodeLayout
          Size="267,44"
          Id="Package\Calculo 1 (anterior al agregado de persona)"
          TopLeft="356.141509433962,69.3490566037736" />
        <NodeLayout
          Size="285,44"
          Id="Package\Calculo 2  agregando id_persona e id_promotor"
          TopLeft="267.311320754717,5.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="299.066037735849,214.254716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="136.952830188679,28.7439353099731"
              Start="0,0"
              End="136.952830188679,21.2439353099731">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="132.952830188679,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="132.952830188679,14.3719676549865"
                    Point2="136.952830188679,14.3719676549865"
                    Point3="136.952830188679,18.3719676549865" />
                  <mssgle:LineSegment
                    End="136.952830188679,21.2439353099731" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="285.518867924528,355.742587601078">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="143.405660377358,28.743935309973"
              Start="0,0"
              End="143.405660377358,21.243935309973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="139.405660377358,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="139.405660377358,14.3719676549865"
                    Point2="143.405660377358,14.3719676549865"
                    Point3="143.405660377358,18.3719676549865" />
                  <mssgle:LineSegment
                    End="143.405660377358,21.243935309973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="283.066037735849,497.230458221024">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="135.556603773585,28.743935309973"
              Start="0,0"
              End="135.556603773585,21.243935309973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="131.556603773585,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="131.556603773585,14.3719676549865"
                    Point2="135.556603773585,14.3719676549865"
                    Point3="135.556603773585,18.3719676549865" />
                  <mssgle:LineSegment
                    End="135.556603773585,21.243935309973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="436.018867924528,284.998652291105">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-150.5,28.743935309973"
              Start="0,0"
              End="-150.5,21.243935309973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="-4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="-146.5,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="-146.5,14.3719676549865"
                    Point2="-150.5,14.3719676549865"
                    Point3="-150.5,18.3719676549865" />
                  <mssgle:LineSegment
                    End="-150.5,21.243935309973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="428.924528301887,426.486522911051">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-145.858490566038,28.743935309973"
              Start="0,0"
              End="-145.858490566038,21.243935309973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="-4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="-141.858490566038,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="-141.858490566038,14.3719676549865"
                    Point2="-145.858490566038,14.3719676549865"
                    Point3="-145.858490566038,18.3719676549865" />
                  <mssgle:LineSegment
                    End="-145.858490566038,21.243935309973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="418.622641509434,567.974393530997">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-128.084905660377,28.743935309973"
              Start="0,0"
              End="-128.084905660377,21.243935309973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="-4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="-124.084905660377,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="-124.084905660377,14.3719676549865"
                    Point2="-128.084905660377,14.3719676549865"
                    Point3="-128.084905660377,18.3719676549865" />
                  <mssgle:LineSegment
                    End="-128.084905660377,21.243935309973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="290.537735849057,638.71832884097">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="133.518867924528,28.743935309973"
              Start="0,0"
              End="133.518867924528,21.243935309973">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.3719676549865"
                    Point2="0,14.3719676549865"
                    Point3="4,14.3719676549865" />
                  <mssgle:LineSegment
                    End="129.518867924528,14.3719676549865" />
                  <mssgle:CubicBezierSegment
                    Point1="129.518867924528,14.3719676549865"
                    Point2="133.518867924528,14.3719676549865"
                    Point3="133.518867924528,18.3719676549865" />
                  <mssgle:LineSegment
                    End="133.518867924528,21.243935309973" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>