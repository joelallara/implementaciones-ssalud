<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/20/2020 7:41:27 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LA34457-13191"
  DTS:CreatorName="AMS\mpaludi"
  DTS:DTSID="{99EC1F0A-92FA-49E8-A609-FCD8A6E4BB2D}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="Consumos H_MEDICAMENTOS_SIMULADOR"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{D9421275-ACE0-424A-93C0-BE8CEDA6FF88}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Escribe entradas del registro sobre eventos en una base de datos de SQL Server"
      DTS:DTSID="{1333C4E4-6350-484C-ABF7-691D68EDFA5F}"
      DTS:ObjectName="Proveedor de registro SSIS para SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{1333C4E4-6350-484C-ABF7-691D68EDFA5F}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualizo H_MEDICAMENTOS_SIMULADOR"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{c782aa29-7761-48dd-a190-e25cf3494fbb}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualizo H_MEDICAMENTOS_SIMULADOR"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="-- Se actualizan los periodos correspondientes recien cargados&#xA;declare @periodo int = (select dbo.periodosanteriores(max(id_periodo),15) from D_PERIODO where vigente_consumo = 1)&#xA;&#xA;-- Se calcula la longitud del nombre de la monodroga para luego ordenar por este campo&#xA;&#x9;update H_MEDICAMENTOS_SIMULADOR&#xA;&#x9;set longitud_monodroga = len(de_monodroga)&#xA;&#x9;from  H_MEDICAMENTOS_SIMULADOR h &#xA;&#x9;inner join D_MONODROGA d on h.id_monodroga = d.id_monodroga &#xA;&#x9;where id_periodo_prestacion &gt;= @periodo&#xA;&#xA;-- Se crea un indice para que sea mas rapido el proceso&#xA;&#xA;&#x9;&#x9;CREATE INDEX ix_acreedor_periodo_prestacion_persona_plan_monodroga&#xA;ON H_MEDICAMENTOS_SIMULADOR (id_acreedor, id_periodo_prestacion,id_persona,id_plan_agrupado_G,id_monodroga)&#xA;&#xA;&#xA;UPDATE STATISTICS H_MEDICAMENTOS_SIMULADOR &#xA;&#xA;-- Se pasa a una temporal para calcular el rankin agrupando&#xA;drop table #temp&#xA;&#x9;select id_acreedor,id_periodo_prestacion,id_persona, id_plan_agrupado_G, id_monodroga &#xA;&#x9;, min(fecha_prestacion) fecha, max(imp_pret_amb_pag) imp , 0 as ranking, max(longitud_monodroga) long&#xA;&#x9;into #temp&#xA;&#x9;from H_MEDICAMENTOS_SIMULADOR&#xA;&#x9;where id_periodo_prestacion  &gt;= @periodo&#xA;&#x9;&#x9;--where id_acreedor  = 47660&#xA;&#x9;group by  id_acreedor,id_periodo_prestacion,id_persona, id_plan_agrupado_G, id_monodroga &#xA;-- Se le crea un indice a la temporal&#x9;&#xA;&#x9;CREATE INDEX index_name_&#xA;ON #temp (id_acreedor, id_periodo_prestacion,id_persona,id_plan_agrupado_G,id_monodroga)&#xA;&#xA;&#xA;-- Se actualiza la temporal para luego pasarlo a la H&#xA;Update #temp&#xA;set ranking = a.ranking_fin&#xA;from #temp h inner join &#xA;&#x9;( select *,ROW_NUMBER ( )   &#xA;    OVER (  PARTITION by id_acreedor,id_periodo_prestacion,id_persona, id_plan_agrupado_G&#xA;&#x9;order by fecha, imp desc, long desc ) as ranking_fin from #temp&#xA;&#x9; ) a on h.id_acreedor = a.id_acreedor and h.id_persona = a.id_persona&#xA;&#x9;and a.id_periodo_prestacion = h.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_G&#xA;&#x9;and a.id_monodroga = h.id_monodroga&#xA;&#x9;&#xA;-- Se actualiza el ranking en la H&#xA;update H_MEDICAMENTOS_SIMULADOR&#xA;set numero_ranking =   ranking&#xA;from H_MEDICAMENTOS_SIMULADOR h inner join #temp a on h.id_acreedor = a.id_acreedor and h.id_persona = a.id_persona&#xA;&#x9;and a.id_periodo_prestacion = h.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_G&#xA;&#x9;&#x9;and a.id_monodroga = h.id_monodroga&#xA;-- Se borra el indice recien creado&#x9;&#x9;&#xA;drop index ix_acreedor_periodo_prestacion_persona_plan_monodroga&#xA;&#x9;ON H_MEDICAMENTOS_SIMULADOR &#xA;&#x9;&#xA;-- Y se crea otro indice &#xA;CREATE INDEX ix_acreedor_periodo_prestacion_persona_plan_monodroga_fecha_imp&#xA;ON H_MEDICAMENTOS_SIMULADOR (id_acreedor, id_periodo_prestacion,id_persona,id_plan_agrupado_G,id_monodroga,fecha_prestacion,imp_pret_amb_pag)&#xA;&#xA;UPDATE STATISTICS H_MEDICAMENTOS_SIMULADOR &#xA;&#xA;-- Se crea una nueva temporal parecida a la de arriba pero con otro agrupamiento para calcular el acumulado&#xA;drop table #temp_acumulado&#xA;&#x9;select  id_acreedor,id_periodo_prestacion,id_persona, id_plan_agrupado_G,id_monodroga,fecha_prestacion,imp_pret_amb_pag,&#xA;&#x9;SUM(SUM(cant_prest_amb_acep)) OVER &#xA;&#x9;(partition by id_acreedor,id_periodo_prestacion,id_persona, id_plan_agrupado_G,id_monodroga  &#xA;&#x9;ORDER BY id_periodo_prestacion, id_monodroga, fecha_prestacion ASC,imp_pret_amb_pag desc) AS Acumulado&#xA;&#x9;into #temp_acumulado&#xA;&#x9;from  H_MEDICAMENTOS_SIMULADOR h &#xA;&#x9;where id_periodo_prestacion  &gt;= @periodo&#xA;&#x9;group by id_acreedor,id_periodo_prestacion,id_persona, id_plan_agrupado_G,id_monodroga,fecha_prestacion,imp_pret_amb_pag&#xA;&#x9;order by id_monodroga&#xA;&#xA;&#xA;CREATE INDEX index_name&#xA;ON #temp_acumulado (id_acreedor, id_periodo_prestacion,id_persona,id_plan_agrupado_G,id_monodroga,fecha_prestacion,imp_pret_amb_pag)&#xA;&#xA;&#x9;update H_MEDICAMENTOS_SIMULADOR&#xA;&#x9;set acumulado_cant_prest_amb_acept =    acumulado &#xA;&#x9;from H_MEDICAMENTOS_SIMULADOR h inner join #temp_acumulado a on h.id_acreedor = a.id_acreedor and h.id_persona = a.id_persona&#xA;&#x9;and a.id_periodo_prestacion = h.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_G&#xA;&#x9;&#x9;and a.id_monodroga = h.id_monodroga and a.fecha_prestacion =h.fecha_prestacion and a.imp_pret_amb_pag = h.imp_pret_amb_pag&#xA;where h.id_periodo_prestacion   &gt;= @periodo&#xA;&#xA;&#xA;update H_MEDICAMENTOS_SIMULADOR&#xA;set imp_unitario_amb_pag&#x9;= imp_pret_amb_pag / cant_prest_amb_acep,&#xA;diff_acumulado_cantidad&#x9;= acumulado_cant_prest_amb_acept - cant_prest_amb_acep&#xA;where cant_prest_amb_acep &lt;&gt; 0&#xA;&#xA;drop INDEX ix_acreedor_periodo_prestacion_persona_plan_monodroga_fecha_imp&#xA;ON H_MEDICAMENTOS_SIMULADOR " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Elimina Periodos"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{D59DA703-28E5-427A-902B-920893B52B21}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Elimina Periodos"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="-- ELIMINO LOS ULTIMOS 12 + 2 MESES (PORQUE TOMO 2 MESES ANTES DEL ULTIMO DE CONSUMO, DISPOSICION DE ANALISTAS) DE CONSUMOS UTILIZANDO PERIODO PRESTACION&#xA;&#xA;delete from H_MEDICAMENTOS_SIMULADOR where id_periodo &gt;= select dbo.periodosanteriores(max(id_periodo),15) from D_PERIODO where vigente_consumo = 1&#xA;&#xA;delete from h_medicamentos_simulador_resumen where id_periodo &gt;= select dbo.periodosanteriores(max(id_periodo),15) from D_PERIODO where vigente_consumo = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserto  H_MEDICAMENTOS_SIMULADOR_RESUMEN"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{d4335b03-d654-4bc1-9986-b38194b40af7}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserto  H_MEDICAMENTOS_SIMULADOR_RESUMEN"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED&#xA;&#xA;&#xA;declare @cajas int = 5&#xA;declare @monodrogas int = 10&#xA;declare @periodo int = (select dbo.periodosanteriores(max(id_periodo),15) from D_PERIODO where vigente_consumo = 1)&#xA;&#xA;&#xA;-- Realizo un ciclo para calcular las combinaciones requeridas , cada ciclo realiza una combinacion diferente arrancando por la 5 y 10 respectivamente y luego va disminuyendo las monodrogas distintas hasta que llega al tope , y disminute una caja y empieza de 10 las monodrogas de nuevo &#xA;while @cajas &gt;= 1 &#xA;Begin&#xA;/*&#xA;select cant_monodrogas_acept,cant_cajas_monodroga_acept from h_medicamentos_simulador_resumen &#xA;group by cant_monodrogas_acept,cant_cajas_monodroga_acept&#xA;order by cant_monodrogas_acept,cant_cajas_monodroga_acept*/&#xA;&#xA;insert into h_medicamentos_simulador_resumen&#xA;--primer paso se carga todo sin tener en cuenta discapacidad despues lo que si tiene que ver con discapacidad&#xA;select id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador,@monodrogas,@cajas,&#xA;sum(imp_pret_amb_pag) as consumo , sum(cant_prest_amb_acep) as cantidad_prestaciones, 0 as imp_consumo_pers_di,&#xA;0 as cant_prest_pers_di, 0 as imp_ahorro_consumo, 0 as cant_prest_ahorro, 0 as imp_ahorro_consumo_di, 0 as cant_prest_ahorro_di,&#xA;count (distinct h.id_persona), 0 as cant_personas_rechazadas , 0 as cant_personas_rechazadas_di&#xA;from H_MEDICAMENTOS_SIMULADOR h &#xA;where id_periodo_prestacion &gt;= @periodo&#xA;group by id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador&#xA;&#xA;&#xA;-- Segundo Paso calculamos consumo y cantidad de prestaciones para discapacitados&#xA;&#xA;update h_medicamentos_simulador_resumen&#xA;set imp_consumo_pers_di = imp,&#xA;&#x9;cant_prest_pers_di = cant&#xA;from h_medicamentos_simulador_resumen h inner join (&#xA;&#x9;select id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador, &#xA;&#x9;sum(imp_pret_amb_pag) imp , Sum (cant_prest_amb_acep)  cant from H_MEDICAMENTOS_SIMULADOR h &#xA;&#x9;inner join  D_PERSONAS d on h.id_persona = d.id_persona&#xA;&#x9;where Discapacitado = 'S'&#xA;&#x9;group by id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador) A&#xA;&#x9; on h.id_periodo_prestacion = a.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_g and&#xA;&#x9;&#x9;h.id_acreedor = a.id_acreedor and h.id_tipo_prestador = a.id_tipo_prestador&#xA;&#x9;&#x9;where cant_monodrogas_acept = @monodrogas&#xA;&#x9;&#x9;&#x9;  and cant_cajas_monodroga_acept = @cajas&#xA;&#x9;&#x9;&#x9;  and id_periodo_prestacion &gt;= @periodo&#xA;&#xA;&#xA;-- Tercer paso se calcula el ahorro &#xA;drop table #temp_ahorro&#xA;select *, case  when numero_ranking &gt; @monodrogas then imp_pret_amb_pag else 0 end AS ahorro_consumo_1,&#xA;&#x9;&#x9;  case  when numero_ranking &gt; @monodrogas then cant_prest_amb_acep else 0 end cant_prest_ahorro_1,&#xA;          case  when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - @cajas) * (imp_pret_amb_pag / cant_prest_amb_acep)&#xA;&#x9;&#x9;&#x9;&#x9;else imp_pret_amb_pag end as ahorro_consumo_2,&#xA;&#x9;&#x9;  case  when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &#xA;&#x9;&#x9;&#x9;&#x9;else cant_prest_amb_acep end as cant_prest_ahorro_2,&#xA;&#x9;&#x9;  case  when numero_ranking &gt; @monodrogas then imp_pret_amb_pag  &#xA;&#x9;&#x9;&#x9;    when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;    when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - @cajas) * (imp_pret_amb_pag / cant_prest_amb_acep)&#xA;&#x9;&#x9;&#x9;    else imp_pret_amb_pag end as ahorro_total,&#xA;&#x9;&#x9;  case  when numero_ranking &gt; @monodrogas then cant_prest_amb_acep&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - @cajas) &#xA;&#x9;&#x9;&#x9;&#x9;else cant_prest_amb_acep end  as cant_prest_ahorro_total&#xA;into #temp_ahorro from H_MEDICAMENTOS_SIMULADOR&#xA;where id_periodo_prestacion &gt;= @periodo&#xA;-- Cuarto paso se calcula el ahorro  para los discapacitados&#xA;&#xA;&#xA;&#xA;drop table #temp_ahorro_discapacidad&#xA;select h.*, case  when numero_ranking &gt; @monodrogas then imp_pret_amb_pag else 0 end AS ahorro_consumo_1,&#xA;&#x9;&#x9;  case  when numero_ranking &gt; @monodrogas then cant_prest_amb_acep else 0 end cant_prest_ahorro_1,&#xA;          case  when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - @cajas) * (imp_pret_amb_pag / cant_prest_amb_acep)&#xA;&#x9;&#x9;&#x9;&#x9;else imp_pret_amb_pag end as ahorro_consumo_2,&#xA;&#x9;&#x9;  case  when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &#xA;&#x9;&#x9;&#x9;&#x9;else cant_prest_amb_acep end as cant_prest_ahorro_2,&#xA;&#x9;&#x9;  case  when numero_ranking &gt; @monodrogas then imp_pret_amb_pag  &#xA;&#x9;&#x9;&#x9;    when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;    when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - @cajas) * (imp_pret_amb_pag / cant_prest_amb_acep)&#xA;&#x9;&#x9;&#x9;    else imp_pret_amb_pag end as ahorro_total,&#xA;&#x9;&#x9;  case  when numero_ranking &gt; @monodrogas then cant_prest_amb_acep&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &lt;= @cajas then 0&#xA;&#x9;&#x9;&#x9;&#x9;when acumulado_cant_prest_amb_acept &gt; @cajas &#xA;&#x9;&#x9;&#x9;&#x9; and (acumulado_cant_prest_amb_acept - cant_prest_amb_acep) &lt; @cajas then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9; (acumulado_cant_prest_amb_acept - @cajas) &#xA;&#x9;&#x9;&#x9;&#x9;else cant_prest_amb_acep end  as cant_prest_ahorro_total&#xA;into #temp_ahorro_discapacidad from H_MEDICAMENTOS_SIMULADOR h &#xA;&#x9;inner join D_PERSONAS d on h.id_persona = d.id_persona&#xA;&#x9;where Discapacitado = 'S'&#xA;&#x9;and id_periodo_prestacion &gt;= @periodo&#xA;&#xA;&#xA;-- 5to paso se actualiza la tabla con lo calculado para el ahorro&#xA;update h_medicamentos_simulador_resumen&#xA;set imp_ahorro_consumo = ahorro,&#xA;&#x9;cant_prest_ahorro = cant&#xA;&#x9;from h_medicamentos_simulador_resumen h &#xA;&#x9;&#x9;inner join ( select id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum(ahorro_total) ahorro, sum(cant_prest_ahorro_total) cant&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; from #temp_ahorro &#xA;&#x9;&#x9;&#x9;&#x9;group by id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador) a&#xA;&#x9;&#x9;&#x9; on h.id_periodo_prestacion = a.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_g and&#xA;&#x9;&#x9;h.id_acreedor = a.id_acreedor and h.id_tipo_prestador = a.id_tipo_prestador&#xA;&#x9;&#x9;where cant_monodrogas_acept = @monodrogas&#xA;&#x9;&#x9;&#x9;  and cant_cajas_monodroga_acept = @cajas&#xA;&#x9;&#x9;&#x9;  and id_periodo_prestacion &gt;= @periodo&#xA;-- 6to paso se actualiza la tabla con lo calculado para el ahorro de discapaciados&#xA;update h_medicamentos_simulador_resumen&#xA;set imp_ahorro_consumo_di = ahorro,&#xA;&#x9;cant_prest_ahorro_di = cant&#xA;&#x9;from h_medicamentos_simulador_resumen h &#xA;&#x9;&#x9;inner join ( select id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum(ahorro_total) ahorro, sum(cant_prest_ahorro_total) cant&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; from #temp_ahorro_discapacidad &#xA;&#x9;&#x9;&#x9;&#x9;group by id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador) a&#xA;&#x9;&#x9;&#x9; on h.id_periodo_prestacion = a.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_g and&#xA;&#x9;&#x9;h.id_acreedor = a.id_acreedor and h.id_tipo_prestador = a.id_tipo_prestador&#xA;&#x9;&#x9;where cant_monodrogas_acept = @monodrogas&#xA;&#x9;&#x9;&#x9;  and cant_cajas_monodroga_acept = @cajas&#xA;&#x9;&#x9;&#x9;  and id_periodo_prestacion &gt;= @periodo&#xA;-- 7mo paso se actualiza la cantidad de personas rechazadas &#xA;&#xA;update h_medicamentos_simulador_resumen&#xA;&#x9;set cant_personas_rechazadas = cant&#xA;&#x9;from h_medicamentos_simulador_resumen h&#xA;&#x9;&#x9;inner join ( select id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count (distinct id_persona) cant&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; from #temp_ahorro where ahorro_total &lt;&gt; 0&#xA;&#x9;&#x9;&#x9;&#x9;group by id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador ) a&#xA;&#x9;&#x9;&#x9; on h.id_periodo_prestacion = a.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_g and&#xA;&#x9;&#x9;h.id_acreedor = a.id_acreedor and h.id_tipo_prestador = a.id_tipo_prestador&#xA;&#x9;&#x9;where cant_monodrogas_acept = @monodrogas&#xA;&#x9;&#x9;&#x9;  and cant_cajas_monodroga_acept = @cajas&#xA;&#x9;&#x9;&#x9;  and id_periodo_prestacion &gt;= @periodo&#xA;-- 8vo paso se actualiza la cantidad de personas rechazadas &#xA;&#xA;update h_medicamentos_simulador_resumen&#xA;&#x9;set cant_personas_rechazadas_di = cant&#xA;&#x9;from h_medicamentos_simulador_resumen h&#xA;&#x9;&#x9;inner join ( select id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count (distinct id_persona) cant&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; from #temp_ahorro_discapacidad  where ahorro_total &lt;&gt; 0&#xA;&#x9;&#x9;&#x9;&#x9;group by id_periodo_prestacion, id_plan_agrupado_G,id_acreedor,id_tipo_prestador) a&#xA;&#x9;&#x9;&#x9; on h.id_periodo_prestacion = a.id_periodo_prestacion and a.id_plan_agrupado_G = h.id_plan_agrupado_g and&#xA;&#x9;&#x9;h.id_acreedor = a.id_acreedor and h.id_tipo_prestador = a.id_tipo_prestador&#xA;&#x9;&#x9;where cant_monodrogas_acept = @monodrogas&#xA;&#x9;&#x9;&#x9;  and cant_cajas_monodroga_acept = @cajas&#xA;&#x9;&#x9;&#x9;  and id_periodo_prestacion &gt;= @periodo&#xA;&#xA;set @monodrogas  = @monodrogas - 1&#xA;if @monodrogas = 4 &#xA;&#x9;begin &#xA;&#x9;set @cajas = @cajas - 1&#xA;&#x9;set @monodrogas = 10&#xA;&#xA;&#x9;end&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserto en H_MEDICAMENTOS_SIMULADOR"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{a041536b-75db-44b3-8735-6554e7a59dc0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserto en H_MEDICAMENTOS_SIMULADOR"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6601EFDC-B0A3-4B05-9A3F-EFAAD98885BF}"
          SQLTask:SqlStatementSource="-- INSERTO 12 + 2 MESES (PORQUE TOMO 2 MESES ANTES DEL ULTIMO DE CONSUMO, DISPOSICION DE ANALISTAS) DE CONSUMOS UTILIZANDO PERIODO PRESTACION&#xA;&#xA; SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED&#xA;&#xA;declare @periodo int = (select dbo.periodosanteriores(max(id_periodo),15) from D_PERIODO where vigente_consumo = 1)&#xA;&#xA;INSERT INTO  H_MEDICAMENTOS_SIMULADOR&#xA;select&#x9;a11.id_prestacion  id_prestacion,&#xA;&#x9;a14.id_plan_agrupado_G  id_plan_agrupado_G,&#xA;&#x9;a11.id_persona  id_persona,&#xA;&#x9;a11.   id_periodo_prestacion,&#xA;&#x9;a11.id_monodroga  id_monodroga,&#xA;&#x9;a11.fecha_prestacion  fecha_prestacion,&#xA;&#x9;a11.id_acreedor  id_acreedor,&#xA;&#x9;a11.id_tipo_prestador  id_tipo_prestador,&#xA;&#x9;sum(a11.cant_prest_amb_acep)  cant_prest_amb_acep,&#xA;&#x9;sum((Case when a11.ccosto3 = 1 then a11.imp_pret_amb_pag else NULL end))  imp_pret_amb_pag,&#xA;&#x9;0 as numero_ranking,&#xA;&#x9;0 longitud_monodroga,&#xA;&#x9;0 acumulado_cant_prest_amb_acept,&#xA;&#x9;0 ,&#xA;&#x9;0&#xA;from&#x9;H_ORD_AMB_DET&#x9;a11&#xA;&#x9;join&#x9;D_PRESTACION&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_prestacion = a12.id_prestacion)&#xA;&#x9;join&#x9;D_PLANES&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a13.id_plan_producto and &#xA;&#x9;a11.id_producto = a13.id_producto)&#xA;&#x9;join&#x9;D_PLANES_AGRUPADOS&#x9;a14&#xA;&#x9;  on &#x9;(a13.id_plan_agrupado = a14.id_plan_agrupado)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a15&#xA;&#x9;  on &#x9;(a11.id_producto = a15.id_producto)&#xA;&#x9;join&#x9;D_PERSONAS&#x9;a16&#xA;&#x9;  on &#x9;(a11.id_persona = a16.id_persona)&#xA;&#x9;join&#x9;D_LOCALIDADES_AFILIADO&#x9;a17&#xA;&#x9;  on &#x9;(a16.id_localidad_afiliado = a17.id_localidad_afiliado)&#xA;where&#x9;(a17.id_zona_comercial not in (0, 1, 20)&#xA; and a14.id_plan_agrupado_S not in (84, 85, 58, 78, 29)&#xA; and not ((a11.id_producto = 4 and a11.id_plan_producto = 'PMO  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='PMO  ')&#xA;   or  (a11.id_producto=35 and a11.id_plan_producto='PMO  ')&#xA;   or  (a11.id_producto=73 and a11.id_plan_producto='PMO  ')&#xA;   or  (a11.id_producto=0 and a11.id_plan_producto='PMO  ')&#xA;   or  (a11.id_producto=76 and a11.id_plan_producto='PMO  '))&#xA; and a11.id_producto not in (78)&#xA; and (not (a11.id_convenio = 402725&#xA; and a11.id_tipo_entidad_convenio = 'E'))&#xA; and a15.id_clase_producto in ('S ')&#xA; and a13.id_SubRubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and not ((a11.id_producto = 16 and a11.id_plan_producto = 'CC   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CM   ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS1  ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='CS100')&#xA;   or  (a11.id_producto=4 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=16 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='M    ')&#xA;   or  (a11.id_producto=14 and a11.id_plan_producto='Z    ')&#xA;   or  (a11.id_producto=20 and a11.id_plan_producto='Z    ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='C    ')&#xA;   or  (a11.id_producto=4 and a11.id_plan_producto='Z    '))&#xA; and a12.id_nomenclador in ('ME')&#xA; and (a11.id_acreedor in (7313,47660) and a11.id_tipo_prestador = 'P')&#xA; and a11.id_periodo_prestacion &gt;=  @periodo &#xA; and a14.id_plan_agrupado_G not in (24, 7)&#xA; and a11.id_provision in (6)&#xA; and a11.id_origen_prestacion in ('A')&#xA; and a11.id_reintegro in ('F')&#xA; and a11.id_monodroga not in (0, 99999)&#xA; and a11.id_persona not in (22606)&#xA; and a11.id_plan_producto not in ('P1000', 'P1500', 'P2000', 'P3000', 'P300A', 'P4000', 'P4065', 'P4500', 'P500 ', 'P5000', 'P6000')&#xA; and a11.id_prestacion not inxA; ,'ME00051499','ME00050738','ME00049372')&#xA; and a11.id_tipo_orden not in (4))&#xA;group by&#x9;a11.id_prestacion,&#xA;&#x9;a14.id_plan_agrupado_G,&#xA;&#x9;a11.id_persona,&#xA;&#x9;a11.id_periodo_prestacion,&#xA;&#x9;a11.id_monodroga,&#xA;&#x9;a11.fecha_prestacion,&#xA;&#x9;a11.id_acreedor,&#xA;&#x9;a11.id_tipo_prestador " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{6A350DC6-266A-49C9-B43E-CCD350AD661B}"
      DTS:From="Package\Elimina Periodos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\Inserto en H_MEDICAMENTOS_SIMULADOR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{16E21CEC-7DA0-4ABA-8E48-DADADC56C7B3}"
      DTS:From="Package\Inserto en H_MEDICAMENTOS_SIMULADOR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\Actualizo H_MEDICAMENTOS_SIMULADOR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{19AD7ED2-66A6-46B8-B007-D102A88CBD34}"
      DTS:From="Package\Actualizo H_MEDICAMENTOS_SIMULADOR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Inserto  H_MEDICAMENTOS_SIMULADOR_RESUMEN" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="302,42"
          Id="Package\Actualizo H_MEDICAMENTOS_SIMULADOR"
          TopLeft="362,253" />
        <NodeLayout
          Size="162,42"
          Id="Package\Elimina Periodos"
          TopLeft="439,51" />
        <NodeLayout
          Size="355,42"
          Id="Package\Inserto  H_MEDICAMENTOS_SIMULADOR_RESUMEN"
          TopLeft="361,355" />
        <NodeLayout
          Size="306,42"
          Id="Package\Inserto en H_MEDICAMENTOS_SIMULADOR"
          TopLeft="362,151" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="517.5,93">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="514,193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="513,295">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="25.5,60"
              Start="0,0"
              End="25.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="4,30" />
                  <mssgle:LineSegment
                    End="21.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="21.5,30"
                    Point2="25.5,30"
                    Point3="25.5,34" />
                  <mssgle:LineSegment
                    End="25.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>