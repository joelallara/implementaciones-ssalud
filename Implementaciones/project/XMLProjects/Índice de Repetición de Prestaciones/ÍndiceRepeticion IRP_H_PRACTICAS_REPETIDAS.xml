<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/14/2019 2:03:27 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\aquaglia"
  DTS:DTSID="{F536EA42-CC05-449A-8483-2ADBC6F72B67}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="ÍndiceRepeticion IRP_H_PRACTICAS_REPETIDAS"
  DTS:PackageType="5"
  DTS:VersionBuild="27"
  DTS:VersionGUID="{26039C6A-73A1-4715-A2A7-4393C0EB4314}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{6B652690-32B4-46B7-A2BC-10B2AA21D388}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{6B652690-32B4-46B7-A2BC-10B2AA21D388}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_PRACTICAS_REPETIDAS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4ae55adc-c3dd-4813-a422-ecefc75dc4dd}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_PRACTICAS_REPETIDAS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AF81043D-1159-4CE8-9D9C-6F22CFB556AE}"
          SQLTask:SqlStatementSource="------  Actualiza campos en H_Practicas_Repetidas&#xA;-- para obtener el acreedor mayoritario de las pràcicas autoprescriptas&#xA;&#xA;SET DATEFORMAT 'YMD'&#xA;&#xA;DECLARE @Periodo Int&#xA;DECLARE @Periodo_Cons1 Int&#xA;DECLARE @Periodo_Cons2 Int&#xA;DECLARE @Fecha_calculo_edad DATETIME&#xA;declare @ultimo_semestre int -- Esta linea debe ir al principio del script&#xA;&#xA;&#xA;SET @Periodo = (Select Max(id_periodo) from D_PERIODO where vigente_consumo = 1)&#xA;SET @Periodo_Cons1 =     (Select dbo.PeriodosAnteriores(@Periodo,12))&#xA;SET @Periodo_Cons2 =   (select   @Periodo)&#xA;SET @Fecha_calculo_edad = (select  CAST(@Periodo as CHAR(6))+'01' )&#xA;&#xA;&#xA;&#xA;-- AUTOPRESCRIBIENTE&#xA;-- el que tenga una marca de autopresc debo repetir aunque ese especifico no lo tenga, luego en MSTR busco el max&#xA;select &#xA;id_periodo,&#xA;id_ubicacion_posicion_IRP_prof_prescr,&#xA;id_grupo_especialidad_prof_preescribiente,&#xA;id_prestacion,&#xA;id_prof_prescr,&#xA;id_tipo_profesional_preescribiente,&#xA;id_acreedor_autoprescribiente_prof_prescr,&#xA;id_tipo_acreedor_autoprescribiente_prof_prescr,&#xA;SUM (importe_practicas_repetidas) as Suma_Imp_Pract_Autoprescr&#xA;into #AgrupadoAutoprescr&#xA;from H_PRACTICAS_REPETIDAS &#xA;where id_periodo = @Periodo&#xA;and marca_prescr_actuante = 1&#xA;group by &#xA;id_periodo,&#xA;id_ubicacion_posicion_IRP_prof_prescr,&#xA;id_grupo_especialidad_prof_preescribiente,&#xA;id_prestacion,&#xA;id_prof_prescr,&#xA;id_tipo_profesional_preescribiente,&#xA;id_acreedor_autoprescribiente_prof_prescr,&#xA;id_tipo_acreedor_autoprescribiente_prof_prescr&#xA;&#xA;&#xA;--- busca el Acreedor Mayoritario del Autoprescrbiente&#xA;select &#xA;id_periodo,&#xA;id_ubicacion_posicion_IRP_prof_prescr,&#xA;id_grupo_especialidad_prof_preescribiente,&#xA;id_prestacion,&#xA;id_prof_prescr,&#xA;id_tipo_profesional_preescribiente,&#xA;Max (Suma_Imp_Pract_Autoprescr) as Suma_Imp_Pract_Autoprescr&#xA;into #profesional_unico&#xA;from #AgrupadoAutoprescr &#xA;group by &#xA;id_periodo,&#xA;id_ubicacion_posicion_IRP_prof_prescr,&#xA;id_grupo_especialidad_prof_preescribiente,&#xA;id_prestacion,&#xA;id_prof_prescr,&#xA;id_tipo_profesional_preescribiente&#xA;&#xA;&#xA;&#xA;-----  se le agrega el id_acreedor_mayoritario_autorprescr&#xA;select &#xA;D.id_periodo,&#xA;D.id_ubicacion_posicion_IRP_prof_prescr,&#xA;D.id_grupo_especialidad_prof_preescribiente,&#xA;D.id_prestacion,&#xA;D.id_prof_prescr,&#xA;D.id_tipo_profesional_preescribiente,&#xA;D.id_acreedor_autoprescribiente_prof_prescr,&#xA;D.id_tipo_acreedor_autoprescribiente_prof_prescr,&#xA;D.Suma_Imp_Pract_Autoprescr&#xA;into #traspaso&#xA; from #AgrupadoAutoprescr D&#xA; inner join  #profesional_unico u ON &#xA;U.id_periodo = D.id_periodo&#xA;AND  U.id_ubicacion_posicion_IRP_prof_prescr=D.id_ubicacion_posicion_IRP_prof_prescr&#xA;AND U.id_grupo_especialidad_prof_preescribiente=D.id_grupo_especialidad_prof_preescribiente&#xA;AND U.id_prestacion=D.id_prestacion&#xA;AND U.id_prof_prescr= D.id_prof_prescr&#xA;AND U.id_tipo_profesional_preescribiente=D.id_tipo_profesional_preescribiente&#xA;AND U.Suma_Imp_Pract_Autoprescr= D.Suma_Imp_Pract_Autoprescr&#xA;order by &#xA;D.id_periodo,&#xA;D.id_ubicacion_posicion_IRP_prof_prescr,&#xA;D.id_grupo_especialidad_prof_preescribiente,&#xA;D.id_prestacion,&#xA;D.id_prof_prescr&#xA;&#xA;&#xA;&#xA;---- Por ultimo actualizar para cada profesional , el id_acreedor y id_tipo_Acreedor.&#xA;---- Actualiza tomando la info de la temporal de traspaso.&#xA;UPDATE H_PRACTICAS_REPETIDAS &#xA;SET&#xA;id_acreedor_autoprescribiente_prof_prescr = T.id_acreedor_autoprescribiente_prof_prescr,&#xA;id_tipo_acreedor_autoprescribiente_prof_prescr = T.id_tipo_acreedor_autoprescribiente_prof_prescr,&#xA;Suma_Imp_Pract_Autoprescr = T.Suma_Imp_Pract_Autoprescr&#xA;from H_PRACTICAS_REPETIDAS H&#xA;inner join #traspaso T ON&#xA;H.id_periodo = T.id_periodo&#xA;AND  H.id_ubicacion_posicion_IRP_prof_prescr = T.id_ubicacion_posicion_IRP_prof_prescr&#xA;AND H.id_grupo_especialidad_prof_preescribiente = T.id_grupo_especialidad_prof_preescribiente&#xA;AND H.id_prestacion = T.id_prestacion&#xA;AND H.id_prof_prescr = T.id_prof_prescr&#xA;AND H.id_tipo_profesional_preescribiente = T.id_tipo_profesional_preescribiente&#xA;where &#xA;H.id_periodo = @Periodo&#xA;&#xA;&#xA;drop table #AgrupadoAutoprescr&#xA;drop table #traspaso&#xA;drop table #profesional_unico&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_PRACTICAS_REPETIDAS_CONSTANTES"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{da5c1b7b-d737-4c78-875e-0f85981dad02}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_PRACTICAS_REPETIDAS_CONSTANTES"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AF81043D-1159-4CE8-9D9C-6F22CFB556AE}"
          SQLTask:SqlStatementSource="-- AQ&#xA;-- tomado de Consultas_Repetidas&#xA;-- se adiciona id_prestacion para Practicas Repetidas y se reemplaza el corte por 'posición' por 'ubicación'&#xA;&#xA;-- Corte para IRP:&#xA;--   - periodo&#x9;&#xA;--   - ubicacion_posicion_IRP_prof_prescr &#xA;--   - grupo especialidad prof prescr&#x9;&#xA;--   - prestacion&#xA;&#xA;&#xA;DECLARE @Periodo Int&#xA;SET @Periodo = (Select Max(id_periodo) from H_PRACTICAS_REPETIDAS)&#xA;&#xA;truncate table [dbo].[IRP_CTES]&#xA;&#xA;truncate table [dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES]&#xA;&#xA;INSERT INTO [DW_SALUD].[dbo].[IRP_CTES]&#xA;           ([id_periodo]&#xA;           ,[id_ubicacion_posicion_IRP_prof_prescr]  --[id_posicion_prof_prescr]&#xA;           ,[de_ubicacion_posicion_IRP_prof_prescr]  --[de_posicion_prof_prescr]&#xA;           ,[id_grupo_especialidad_prof_preescribiente]&#xA;           ,[de_grupo_especialidad_prof_preescribiente]&#xA;           ,[id_prestacion] &#xA;           ,[cantidad_practicas_IRP]&#xA;           ,[cantidad_personas_IRP]&#xA;           ,promedio_stdev_IRP)&#xA;  &#xA;select H.id_periodo, PO.id_ubicacion_posicion_IRP_prof_prescr, PO.de_ubicacion_posicion_IRP_prof_prescr, &#xA;E.id_grupo_especialidad_prof_preescribiente, GE.de_grupo_especialidad_prof_preescribiente, &#xA;h.id_prestacion,&#xA;SUM(H.cantidad_practicas_repetidas) as cantidad_practicas_IRP, &#xA;COUNT(distinct H.id_persona) as cantidad_personas_IRP, &#xA;CAST(CAST(SUM(H.cantidad_practicas_repetidas) as float)&#xA;&#x9;/CAST(COUNT(distinct H.id_persona) as float) as decimal(10,6)) as promedio_stdev_IRP&#xA;FROM dbo.H_PRACTICAS_REPETIDAS H&#xA;INNER JOIN dbo.D_PROF_PRESCRIBIENTE P ON H.id_prof_prescr = P.id_prof_prescr &#xA;&#x9;AND H.id_tipo_profesional_preescribiente = 'P'&#xA;INNER JOIN dbo.D_ESPECIALIDAD_PROF_PREESCRIBIENTE E ON &#xA;&#x9;P.id_especialidad_prof_preescribiente = E.id_especialidad_prof_preescribiente&#xA;--&#xA;INNER JOIN dbo.D_POSICION_PROF_PRESCRIBIENTE POPR &#xA;&#x9;ON P.id_posicion_prof_prescr = POPR.id_posicion_prof_prescr&#xA;INNER JOIN dbo.D_UBICACION_POSICION_IRP_PROF_PRESCR PO   --dbo.D_POSICION_PROF_PRESCRIBIENTE PO &#xA;&#x9;ON POPR.id_ubicacion_posicion_IRP_prof_prescr = PO.id_ubicacion_posicion_IRP_prof_prescr&#xA;--&#xA;INNER JOIN dbo.D_GRUPO_ESPECIALIDAD_PROF_PREESCRIBIENTE GE &#xA;&#x9;ON E.id_grupo_especialidad_prof_preescribiente = GE.id_grupo_especialidad_prof_preescribiente&#xA;INNER JOIN dbo.D_CATEGORIA_PROF_PREESCRIBIENTE CA &#xA;&#x9;ON P.id_categoria_prof_preescribiente = CA.id_categoria_prof_preescribiente &#xA;WHERE H.id_periodo = @Periodo &#xA;AND CA.id_categoria_prof_preescribiente  = 6 -- Profesional&#xA;group by H.id_periodo, &#xA;PO.id_ubicacion_posicion_IRP_prof_prescr, &#xA;PO.de_ubicacion_posicion_IRP_prof_prescr, &#xA;E.id_grupo_especialidad_prof_preescribiente, &#xA;GE.de_grupo_especialidad_prof_preescribiente, &#xA;H.id_prof_prescr, &#xA;H.id_tipo_prestador,&#xA;H.id_prestacion&#xA;ORDER BY PO.de_ubicacion_posicion_IRP_prof_prescr, GE.de_grupo_especialidad_prof_preescribiente, h.id_prestacion&#xA;&#xA;&#xA;-- Desviacion Standard y Promedio&#xA;INSERT INTO [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES]&#xA;           ([id_periodo]&#xA;           ,[id_ubicacion_posicion_IRP_prof_prescr]&#xA;           ,[id_grupo_especialidad_prof_preescribiente]&#xA;&#x9;&#x9;   ,[id_prestacion]&#xA;           ,[promedio_IRP]&#xA;           ,[desv_std_IRP]&#xA;           ,[prom_mas_ds_IRP]&#xA;           ,[prom_menos_ds_IRP]&#xA;           ,[prom_mas_2ds_IRP]&#xA;           ,[prom_menos_2ds_IRP])&#xA;&#xA;SELECT id_periodo, id_ubicacion_posicion_IRP_prof_prescr, id_grupo_especialidad_prof_preescribiente, id_prestacion,&#xA;CAST(CAST(SUM(promedio_stdev_IRP) as float)/CAST(count(promedio_stdev_IRP) as float) as float) as promedio, &#xA;STDEVP(promedio_stdev_IRP) as desv_std, 0 as prom_mas_ds, 0 as prom_menos_ds, 0 as prom_mas_2ds, 0 as prom_menos_2ds&#xA;from IRP_CTES &#xA;GROUP BY id_periodo&#xA;&#x9;&#x9;, id_ubicacion_posicion_IRP_prof_prescr&#xA;&#x9;&#x9;, de_ubicacion_posicion_IRP_prof_prescr&#xA;&#x9;&#x9;, id_grupo_especialidad_prof_preescribiente&#xA;&#x9;&#x9;, de_grupo_especialidad_prof_preescribiente&#xA;&#x9;&#x9;, id_prestacion&#xA;&#xA;&#xA;--- Calculo de desv_std teniendo en cuenta el grupo de especialidad y la ubicacion del profesional y la prestación&#xA;SELECT id_ubicacion_posicion_IRP_prof_prescr, id_grupo_especialidad_prof_preescribiente, id_prestacion,&#xA;STDEV(promedio_stdev_IRP) as desv_std &#xA;into #paso1&#xA;from IRP_CTES&#xA;group by id_ubicacion_posicion_IRP_prof_prescr, id_grupo_especialidad_prof_preescribiente, id_prestacion&#xA;&#xA;&#xA;update #paso1&#xA;set desv_std = 0&#xA;where desv_std is null&#xA;&#xA;UPDATE [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES] SET desv_std_IRP = pas.desv_std&#xA;FROM [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES] a11 &#xA;INNER JOIN #paso1 pas on (pas.id_ubicacion_posicion_IRP_prof_prescr = a11.id_ubicacion_posicion_IRP_prof_prescr and &#xA;pas.id_grupo_especialidad_prof_preescribiente = a11.id_grupo_especialidad_prof_preescribiente&#xA;and pas.id_prestacion = a11.id_prestacion)--- por prestaciòn&#xA;&#xA;&#xA;UPDATE [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES] SET prom_mas_ds_IRP = promedio_IRP + desv_std_IRP&#xA;&#xA;UPDATE [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES] SET prom_menos_ds_IRP = promedio_IRP - desv_std_IRP&#xA;&#xA;UPDATE [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES] SET prom_mas_2ds_IRP = promedio_IRP + (desv_std_IRP*2)&#xA;&#xA;UPDATE [DW_SALUD].[dbo].[H_PRACTICAS_REPETIDAS_CONSTANTES] SET prom_menos_2ds_IRP = promedio_IRP - (desv_std_IRP*2)&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Armado de H_PRACTICAS_REPETIDAS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8D5EC1DE-F455-4719-AE9D-43B96D0270B8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Armado de H_PRACTICAS_REPETIDAS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AF81043D-1159-4CE8-9D9C-6F22CFB556AE}"
          SQLTask:SqlStatementSource="SET DATEFORMAT 'YMD'&#xA;&#xA;DECLARE @Periodo Int&#xA;DECLARE @Periodo_Cons1 Int&#xA;DECLARE @Periodo_Cons2 Int&#xA;DECLARE @Fecha_calculo_edad DATETIME&#xA;declare @ultimo_semestre int -- Esta linea debe ir al principio del script&#xA;&#xA;&#xA;SET @Periodo = (Select Max(id_periodo) from D_PERIODO where vigente_consumo = 1)&#xA;SET @Periodo_Cons1 =     (Select dbo.PeriodosAnteriores(@Periodo,12))&#xA;SET @Periodo_Cons2 =   (select   @Periodo)&#xA;SET @Fecha_calculo_edad = (select  CAST(@Periodo as CHAR(6))+'01' )&#xA;&#xA;delete from H_PRACTICAS_REPETIDAS where id_periodo = @Periodo&#xA;&#xA;select&#x9;HOrd.id_profesional  id_profesional,&#xA;&#x9;HOrd.id_tipo_prestador  id_tipo_prestador,&#xA;&#x9;HOrd.id_prof_prescr id_prof_prescr, &#xA;&#x9;HOrd.id_tipo_profesional_preescribiente id_tipo_profesional_preescribiente,&#xA;&#x9;HOrd.id_persona  id_persona,&#xA;&#x9;HOrd.id_prestacion id_prestacion,&#xA;&#x9;sum(HOrd.cant_prest_amb_acep) as cant_prest_amb_acep, &#xA;&#x9;sum(HOrd.imp_pret_amb_pag) as imp_pret_amb_pag, &#xA;&#x9;0 as marca_prescr_actuante,   -- para luego poder medir cuando autoprescribe&#xA;&#x9;HOrd.id_acreedor as id_acreedor_autoprescribiente_prof_prescr,&#xA;&#x9;HOrd.id_Tipo_Prestador as id_tipo_acreedor_autoprescribiente_prof_prescr&#xA;into #paso1&#xA;from&#x9;H_ORD_AMB_DET&#x9;HOrd with (nolock)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;DPro with (nolock)&#xA;&#x9;  on &#x9;(HOrd.id_producto = DPro.id_producto)&#xA;&#x9;join&#x9;D_PLANES&#x9;DPla with (nolock)&#xA;&#x9;  on &#x9;(HOrd.id_plan_producto = DPla.id_plan_producto and &#xA;&#x9;&#x9;&#x9;HOrd.id_producto = DPla.id_producto)&#xA;&#x9;join D_PROF_PRESCRIBIENTE DPPrescr with (nolock)&#xA;&#x9;  on    (HOrd.id_prof_prescr = DPPrescr.id_prof_prescr)&#xA;where&#x9;((HOrd.id_prestacion  -- se toman sólo las prestaciones que pertenecen al Grupo_Prestaciones_IRP&#xA;IN (select p.id_prestacion from D_PRESTACION p&#xA;inner join D_GRUPOS_PRESTACIONES_IRP g on p.id_grupo_prestaciones_IRP = g.id_grupo_prestaciones_IRP&#xA;where p.id_grupo_prestaciones_IRP &lt;&gt;0))&#xA; and HOrd.id_origen_prestacion in ('A')&#xA; and DPla.id_SubRubro_ley &lt;&gt; 0&#xA; and DPro.Id_Clase_Producto in ('S ')&#xA; and HOrd.ccosto2 = 1&#xA; and DPro.id_segmento not in (3)&#xA; and HOrd.cant_prest_amb_acep &lt;&gt; 0&#xA; and not ((HOrd.id_producto = 16 and HOrd.id_plan_producto = 'CC   ')&#xA;   or  (HOrd.id_producto=16 and HOrd.id_plan_producto='CM   ')&#xA;   or  (HOrd.id_producto=16 and HOrd.id_plan_producto='CS1  ')&#xA;   or  (HOrd.id_producto=16 and HOrd.id_plan_producto='CS100')&#xA;   or  (HOrd.id_producto=4 and HOrd.id_plan_producto='M    ')&#xA;   or  (HOrd.id_producto=16 and HOrd.id_plan_producto='M    ')&#xA;   or  (HOrd.id_producto=20 and HOrd.id_plan_producto='M    ')&#xA;   or  (HOrd.id_producto=14 and HOrd.id_plan_producto='Z    ')&#xA;   or  (HOrd.id_producto=20 and HOrd.id_plan_producto='Z    ')&#xA;   or  (HOrd.id_producto=1 and HOrd.id_plan_producto='C    ')&#xA;   or  (HOrd.id_producto=4 and HOrd.id_plan_producto='PMO  ')&#xA;   or  (HOrd.id_producto=35 and HOrd.id_plan_producto='PMO  ')&#xA;   or  (HOrd.id_producto=4 and HOrd.id_plan_producto='Z    '))&#xA; and HOrd.id_periodo between @Periodo_Cons1 and @Periodo_Cons2&#xA;  and HOrd.id_reintegro in ('F')&#x9;&#x9;&#x9;-- D_REINTEGRO -- F --&gt; Facturación&#xA;  and DPPrescr.id_categoria_prof_preescribiente = 6 -- Profesional&#xA;  )&#xA;group by&#x9;HOrd.id_profesional,&#xA;&#x9;HOrd.id_tipo_prestador,&#xA;&#x9;HOrd.id_persona,&#xA;&#x9;HOrd.id_prof_prescr, &#xA;&#x9;HOrd.id_tipo_profesional_preescribiente,&#xA;&#x9;HOrd.id_prestacion,&#xA;&#x9;HOrd.id_acreedor,&#xA;&#x9;Hord.id_Tipo_Prestador&#xA;&#x9;&#xA;&#xA;&#xA;-- actualiza marca para identificar cuando el prescritpor es el actuante (se autoprescribe)&#xA;update #paso1 set marca_prescr_actuante =&#xA;&#x9;(case when &#x9;id_profesional = id_prof_prescr then 1 &#xA;&#x9;   &#x9;  else 0&#xA;&#x9;end)&#xA;&#x9;from #paso1&#xA;&#x9;&#xA;&#x9;&#xA;-- Completa H_PRACTICAS_REPETIDAS&#xA;insert INTO H_PRACTICAS_REPETIDAS  &#xA;&#x9;(id_periodo,&#xA;&#x9;id_profesional,&#xA;&#x9;id_tipo_prestador,&#xA;&#x9;paso.id_prof_prescr, &#xA;&#x9;paso.id_tipo_profesional_preescribiente,&#xA;&#x9;id_persona,&#xA;&#x9;id_prestacion,&#xA;&#x9;id_acreedor_autoprescribiente_prof_prescr,&#xA;&#x9;id_tipo_acreedor_autoprescribiente_prof_prescr,&#xA;&#x9;id_grupo_prestaciones_IRP, &#xA;&#x9;edad_actual,&#xA;&#x9;cantidad_practicas_repetidas,&#xA;&#x9;importe_practicas_repetidas,&#xA;&#x9;marca_prescr_actuante)&#xA;select&#x9;@Periodo,&#xA;&#x9;&#x9;id_profesional,&#xA;&#x9;&#x9;id_tipo_prestador,&#xA;&#x9;&#x9;paso.id_prof_prescr, &#xA;&#x9;&#x9;paso.id_tipo_profesional_preescribiente,&#xA;&#x9;&#x9;id_persona,&#xA;&#x9;&#x9;id_prestacion, &#xA;&#x9;&#x9;id_acreedor_autoprescribiente_prof_prescr,&#xA;&#x9;&#x9;id_tipo_acreedor_autoprescribiente_prof_prescr,&#xA;&#x9;&#x9;0, -- id_grupo_prestaciones_IRP, &#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;cant_prest_amb_acep,&#xA;&#x9;&#x9;imp_pret_amb_pag,&#xA;&#x9;&#x9;marca_prescr_actuante &#xA;from&#x9;#paso1&#x9;paso&#xA;&#xA;drop table #paso1&#xA;&#xA;&#xA;&#xA;update H_PRACTICAS_REPETIDAS --***-- nueva para IRP-- H_PRACTICAS_REPETIDAS&#xA; set edad_actual = case isdate(Fecha_Nacimiento) when 0 then 0 else datediff(YEAR, Fecha_Nacimiento, @Fecha_calculo_edad) end&#xA; from H_PRACTICAS_REPETIDAS HPra inner join D_PERSONAS DPer on (HPra.id_persona = DPer.id_persona)&#xA;where id_periodo = @Periodo&#xA;&#xA;&#xA;-- Actualiza id_grupo_prestaciones_IRP&#xA;update H_PRACTICAS_REPETIDAS&#xA; set  id_grupo_prestaciones_IRP = DPre.id_grupo_prestaciones_IRP&#xA; from H_PRACTICAS_REPETIDAS HPra inner join D_PRESTACION DPre on HPra.ID_PRESTACION = DPre.ID_PRESTACION &#xA;where HPra.ID_PRESTACION = DPre.ID_PRESTACION &#xA;&#xA;&#xA;Select @ultimo_semestre = MAX(id_periodo) from H_PRACTICAS_REPETIDAS&#xA;update H_PRACTICAS_REPETIDAS set id_ultimo_semestre = @ultimo_semestre &#xA;&#xA;&#xA;&#xA;-- Actualizar Cantidad_consultas_repetidas_por_prof_prescr, importe_consultas_repetidas_por_prof_prescr &#xA;-- id_acreedor_mayoritario_prof_prescr, id_tipo_acreedor_mayoritario_prof_prescr, importe_consultas_acreedor_mayoritario_prof_prescr&#xA;-- tomado de H_CONSULTAS_REPETIDAS que ya están calculados&#xA;update H_PRACTICAS_REPETIDAS &#xA;set cantidad_consultas_repetidas_prof_prescribiente = HCon.id_profesional_cantidad_consultas,&#xA;importe_consultas_repetidas_prof_prescribiente = HCon.importe_consultas_repetidas_profesional,&#xA;id_acreedor_mayoritario_prof_prescr = HCon.id_acreedor_mayoritario,&#xA;id_tipo_acreedor_mayoritario_prof_prescr = HCon.id_tipo_acreedor_mayoritario,&#xA;importe_consultas_acreedor_mayoritario_prof_prescr = HCon.importe_consultas_acreedor_mayoritario&#xA;from H_CONSULTAS_REPETIDAS HCon&#xA;INNER JOIN H_PRACTICAS_REPETIDAS HPra on (HPra.id_periodo = HCon.id_periodo and&#xA;HPra.id_prof_prescr = HCon.id_profesional and &#xA;HPra.id_tipo_profesional_preescribiente = HCon.id_tipo_prestador)&#xA;where HPra.id_periodo = @Periodo&#xA;&#xA;-- Pone 0 donde estos valores hayan quedado en null&#xA;update H_PRACTICAS_REPETIDAS&#xA;set cantidad_consultas_repetidas_prof_prescribiente = 0,&#xA;importe_consultas_repetidas_prof_prescribiente = 0&#xA;where cantidad_consultas_repetidas_prof_prescribiente is null&#xA;&#xA;-- limpia de null estos campos porque para el caso que NO tengan CONSULTAS, quedan en NULL&#xA;update H_PRACTICAS_REPETIDAS &#xA;set id_acreedor_mayoritario_prof_prescr = 0,&#xA;&#x9;id_tipo_acreedor_mayoritario_prof_prescr = ' ',&#xA;&#x9;importe_consultas_acreedor_mayoritario_prof_prescr = 0&#xA;where  id_acreedor_mayoritario_prof_prescr IS NULL&#xA;&#x9;and id_tipo_acreedor_mayoritario_prof_prescr IS NULL&#xA;&#x9;and importe_consultas_acreedor_mayoritario_prof_prescr IS NULL&#xA;and cantidad_consultas_repetidas_prof_prescribiente = 0&#xA;&#xA;&#xA;--limpia de null el campo Suma_Imp_Pract_Autoprescr&#xA;update H_PRACTICAS_REPETIDAS &#xA;set Suma_Imp_Pract_Autoprescr = 0&#xA;where Suma_Imp_Pract_Autoprescr is null&#xA;&#xA;-- limpia datos acreedor mayoritario Autoprescriptas que no necesito cuando no se da el caso&#xA;update H_PRACTICAS_REPETIDAS&#xA;set id_acreedor_autoprescribiente_prof_prescr = 0,&#xA;id_tipo_acreedor_autoprescribiente_prof_prescr = ' '&#xA;where marca_prescr_actuante = 0&#xA;&#xA;&#xA;-- Actualizar Ubicacion + Grupo Especialidad por Prof Prescr&#xA;UPDATE H_PRACTICAS_REPETIDAS&#xA;set id_ubicacion_posicion_IRP_prof_prescr = HPos.id_ubicacion_posicion_IRP_prof_prescr,&#xA;id_grupo_especialidad_prof_preescribiente = HEsp.id_grupo_especialidad_prof_preescribiente&#xA;FROM H_PRACTICAS_REPETIDAS HPra&#xA;INNER JOIN D_PROF_PRESCRIBIENTE HProf ON (HPra.id_prof_prescr = HProf.id_prof_prescr&#xA;and HPra.id_tipo_profesional_preescribiente = HProf.id_tipo_profesional_preescribiente)&#xA;inner join D_POSICION_PROF_PRESCRIBIENTE HPos&#xA;ON (HProf.id_posicion_prof_prescr = HPos.id_posicion_prof_prescr)&#xA;inner join D_ESPECIALIDAD_PROF_PREESCRIBIENTE HEsp&#xA;ON (HEsp.id_especialidad_prof_preescribiente = HProf.id_especialidad_prof_preescribiente)&#xA;&#xA;&#xA;&#xA;-- calculo y guardo contidad de pràcticas realizadas para poder hacer custom en reporte de gráfico de promedios&#xA;UPDATE H_PRACTICAS_REPETIDAS SET id_profesional_cantidad_practicas = Practicas_Profesional.cantidad_practicas &#xA;FROM H_PRACTICAS_REPETIDAS H&#xA;INNER JOIN (Select&#x9;id_periodo, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_ubicacion_posicion_IRP_prof_prescr,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_grupo_especialidad_prof_preescribiente,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_prestacion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_prof_prescr, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_tipo_prestador, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;sum(cantidad_practicas_repetidas) AS cantidad_practicas &#xA;            FROM H_PRACTICAS_REPETIDAS &#xA;            GROUP BY id_periodo, &#xA;            &#x9;&#x9;id_ubicacion_posicion_IRP_prof_prescr,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_grupo_especialidad_prof_preescribiente,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_prestacion,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_prof_prescr, &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;id_tipo_prestador) Practicas_Profesional            &#xA;            ON&#x9;H.id_periodo = Practicas_Profesional.id_periodo &#xA;            &#x9;and h.id_ubicacion_posicion_IRP_prof_prescr = Practicas_Profesional.id_ubicacion_posicion_IRP_prof_prescr&#xA;&#x9;&#x9;&#x9;&#x9;and h.id_grupo_especialidad_prof_preescribiente = Practicas_Profesional.id_grupo_especialidad_prof_preescribiente&#xA;&#x9;&#x9;&#x9;&#x9;and h.id_prestacion = Practicas_Profesional.id_prestacion&#xA;&#x9;            AND H.id_prof_prescr = Practicas_Profesional.id_prof_prescr &#xA;&#x9;&#x9;        AND H.id_tipo_prestador = Practicas_Profesional.id_tipo_prestador&#xA;            &#xA;&#xA;&#xA;--- Eliminar al socio A de las estadísticas&#xA;delete H_PRACTICAS_REPETIDAS where id_persona = 22606&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra en H_PRACTICAS_REPETIDAS el periodo más viejo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{884b79c2-d113-4c5d-987d-60950aa3e0d3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra en H_PRACTICAS_REPETIDAS el periodo más viejo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{AF81043D-1159-4CE8-9D9C-6F22CFB556AE}"
          SQLTask:SqlStatementSource="IF (Select COUNT(distinct id_periodo) from H_PRACTICAS_REPETIDAS) &gt;= 6&#xA;BEGIN&#xA;&#xA;Declare @PERIODO_MAS_VIEJO INT &#xA;SET  @PERIODO_MAS_VIEJO = (Select MIN(id_periodo) from H_PRACTICAS_REPETIDAS)&#xA;&#xA;DELETE FROM H_PRACTICAS_REPETIDAS where id_periodo = @PERIODO_MAS_VIEJO&#xA;&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{35057035-827D-41DF-B781-375E8F571E01}"
      DTS:From="Package\Armado de H_PRACTICAS_REPETIDAS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualiza H_PRACTICAS_REPETIDAS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C5AC354F-EEB2-4D5F-B948-90E2AF6D0385}"
      DTS:From="Package\Actualiza H_PRACTICAS_REPETIDAS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Actualiza H_PRACTICAS_REPETIDAS_CONSTANTES" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{6527A8B5-4756-4CBE-A6B5-BE7322F93F5E}"
      DTS:From="Package\Actualiza H_PRACTICAS_REPETIDAS_CONSTANTES"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Borra en H_PRACTICAS_REPETIDAS el periodo más viejo" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="272,42"
          Id="Package\Actualiza H_PRACTICAS_REPETIDAS"
          TopLeft="54.8396226415094,92.4811320754717" />
        <NodeLayout
          Size="353,42"
          Id="Package\Actualiza H_PRACTICAS_REPETIDAS_CONSTANTES"
          TopLeft="14.3396226415094,179.462264150943" />
        <NodeLayout
          Size="281,42"
          Id="Package\Armado de H_PRACTICAS_REPETIDAS"
          TopLeft="50.3396226415094,5.5" />
        <NodeLayout
          Size="370,42"
          Id="Package\Borra en H_PRACTICAS_REPETIDAS el periodo más viejo"
          TopLeft="5.83962264150944,266.443396226415" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="190.839622641509,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,44.9811320754717"
              Start="0,0"
              End="0,37.4811320754717">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.4811320754717" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="190.839622641509,134.481132075472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,44.9811320754713"
              Start="0,0"
              End="0,37.4811320754713">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.4811320754713" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="190.839622641509,221.462264150943">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{x:Null}"
              EndConnector="0,44.981132075472"
              Start="0,0"
              End="0,37.481132075472">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.481132075472" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>