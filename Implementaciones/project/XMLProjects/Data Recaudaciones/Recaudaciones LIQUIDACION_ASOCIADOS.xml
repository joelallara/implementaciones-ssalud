<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/4/2017 7:27:11 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\nborio"
  DTS:DTSID="{E08FB22A-17BD-480F-8EC1-573D52DCCC04}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="Recaudaciones LIQUIDACION_ASOCIADOS"
  DTS:PackageType="5"
  DTS:VersionBuild="323"
  DTS:VersionGUID="{41E6C4DB-C919-4B77-A805-BFBF64EC43D1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Recaudacion Convenios]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{D58FF67E-4F2F-4538-BBA6-FB5A6C7EDB9E}"
      DTS:ObjectName="Excel Recaudacion Convenios">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\P-IS-01\SSIS2017$\03 - Archivos\Data Recaudaciones\Recaudacion convenios.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{53E0C657-C269-411C-93BD-BF936661C29E}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{53E0C657-C269-411C-93BD-BF936661C29E}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza costos"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E121210F-095C-4B2E-AB4D-06F67B24E81F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza costos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto1 = 1&#xA;from&#x9;H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PLANES&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a12.id_plan_producto and &#xA;&#x9;a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a12.id_producto = a13.id_producto)&#xA;where&#x9;(a11.id_origen_recaudacion not in (17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30)&#xA;-- AND NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; AND a13.id_segmento not in (3)&#xA; AND a12.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; AND a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion)&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto1 = 0&#xA;WHERE rcosto1 IS NULL and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto2 = 1&#xA;from&#x9;H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PLANES&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a12.id_plan_producto and &#xA;&#x9;a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a12.id_producto = a13.id_producto)&#xA;where -- NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a13.id_segmento not in (3)&#xA; and a12.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a13.Id_Clase_Producto in ('S ')&#xA; and a11.id_origen_recaudacion not in (18, 29, 30, 17)&#xA; and a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA; &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto2 = 0&#xA;WHERE rcosto2 IS NULL AND id_periodo = @PeriodoLiquidacion&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto3 = 1 &#xA;from&#x9;H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PLANES&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a12.id_plan_producto and &#xA;&#x9;a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a12.id_producto = a13.id_producto)&#xA;where --NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a13.id_segmento not in (3)&#xA; and a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA; and ((a13.Id_Clase_Producto in ('G ')&#xA; and a11.id_origen_recaudacion not in (18, 29)&#xA; and not ((a11.id_producto = 5 and a11.id_plan_producto = 'S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-S'))&#xA;   and exists (SELECT id_periodo, id_persona FROM H_COMER_STOCK_AFILIA S WHERE S.id_periodo=a11.id_periodo AND S.id_persona=a11.id_persona)))&#xA; &#xA; &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto3 = 1 &#xA;where id_origen_recaudacion in (30) &#xA;and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA; &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto3 = 1 &#xA;From H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PLANES&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a12.id_plan_producto and &#xA;&#x9;a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a12.id_producto = a13.id_producto)&#xA;where (a12.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a13.Id_Clase_Producto in ('S ')&#xA; and a11.id_origen_recaudacion not in (18, 29, 17, 30))&#xA; and a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;  &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto3 = 1 &#xA;From H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_producto = a13.id_producto)&#xA;where a13.Id_Clase_Producto in ('U')and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion &#xA; &#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto3 = 0&#xA;WHERE rcosto3 is null and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto4 = 1 &#xA;from&#x9;H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PLANES&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a12.id_plan_producto and &#xA;&#x9;a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a12.id_producto = a13.id_producto)&#xA;where --NOT EXISTS (SELECT * FROM FILTRO_PLAN_PRODUCTO a14 WHERE a11.id_producto=a14.id_producto and a11.id_plan_producto=a14.id_plan_producto)&#xA; a13.id_segmento not in (3)&#xA; and a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA; and ((a13.Id_Clase_Producto in ('G ')&#xA; and a11.id_origen_recaudacion not in (18, 29)&#xA; and not ((a11.id_producto = 5 and a11.id_plan_producto = 'S10  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=10 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=13 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=1 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S10-S')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=5 and a11.id_plan_producto='S20-S')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20  ')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-C')&#xA;   or  (a11.id_producto=34 and a11.id_plan_producto='S20-S'))&#xA;   and exists (SELECT id_periodo, id_persona FROM H_COMER_STOCK_AFILIA S WHERE S.id_periodo=a11.id_periodo AND S.id_persona=a11.id_persona)))&#xA; &#xA; &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto4 = 1 &#xA;where id_origen_recaudacion in (30, 29)&#xA;and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;  &#xA; &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto4 = 1 &#xA;From H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PLANES&#x9;a12&#xA;&#x9;  on &#x9;(a11.id_plan_producto = a12.id_plan_producto and &#xA;&#x9;a11.id_producto = a12.id_producto)&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a12.id_producto = a13.id_producto)&#xA;where (a12.id_subrubro_ley in (1, 2, 3, 5, 6, 7)&#xA; and a13.Id_Clase_Producto in ('S ')&#xA; and a11.id_origen_recaudacion not in (18, 29, 17, 30))&#xA;and a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA; &#xA; &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET rcosto4 = 1 &#xA;From H_RECAUDACION_DETALLE_NUEVO&#x9;a11&#xA;&#x9;join&#x9;D_PRODUCTOS&#x9;a13&#xA;&#x9;  on &#x9;(a11.id_producto = a13.id_producto)&#xA;where a13.Id_Clase_Producto in ('U')&#xA;and a11.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA; &#xA;&#xA;Update H_RECAUDACION_DETALLE_NUEVO&#xA;Set rcosto4 = 0&#xA;Where rcosto4 is null and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_producto_original = id_producto,&#xA;&#x9;id_subproducto_original = id_subproducto,&#xA;&#x9;id_plan_producto_original = id_plan_producto&#xA;Where id_periodo_comprobante_liquidacion = @PeriodoLiquidacion" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza datos"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E855BEB1-35CD-454D-8B29-5E1E9501540D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza datos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="---- Actualizacion de subproducto respecto al mail de lore enviado el 03/01/2018&#xA;UPDATE AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_subproducto = R.id_subproducto&#xA;FROM AUX_H_RECAUDACION_DETALLE_NUEVO A&#xA;INNER JOIN (SELECT * FROM AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;WHERE id_categoria_liquidacion = 'GR' and id_subproducto &lt;&gt; 0) R ON (R.afiliado=A.afiliado AND R.id_persona=A.id_persona AND R.secuencia=A.secuencia AND R.subnumero=A.subnumero)&#xA;WHERE A.id_subproducto = 0 and A.id_categoria_liquidacion &lt;&gt; 'GR'&#xA;&#xA;&#xA;DELETE AUX_H_RECAUDACION_DETALLE_NUEVO WHERE id_origen_recaudacion NOT IN  (1, 31, 2)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza empresa"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F10D1EF0-7BAA-48E7-9342-C9F8CD764569}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza empresa"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;-- Actualiza empresa y tipo de entidad donde encuentre persona y periodo igual.&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_empresa_recaudacion = S.id_empresa_facturacion,&#xA;id_tipo_entidad_recaudacion = S.id_tipo_entidad_facturacion&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN H_COMER_STOCK_AFILIA S ON (R.id_persona=S.id_persona AND R.id_periodo=S.id_periodo)&#xA;WHERE (id_empresa_recaudacion IS NULL OR id_tipo_entidad_recaudacion IS NULL) and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;-- Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_RECAUDACION_DETALLE_NUEVO R ON (R.id_persona=S.id_persona)&#xA;WHERE (R.id_empresa_recaudacion IS NULL OR R.id_tipo_entidad_recaudacion IS NULL)&#xA;AND S.id_empresa_facturacion IS NOT NULL AND S.id_tipo_entidad_facturacion IS NOT NULL AND S.id_tipo_entidad_facturacion &lt;&gt; 'E' AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_tipo_entidad_facturacion, id_empresa_facturacion into #STOCK FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;&#xA;-- Se actualiza ambos datos con el ultimo periodo donde se encontro cada persona.&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_empresa_recaudacion = S.id_empresa_facturacion,&#xA;id_tipo_entidad_recaudacion = S.id_tipo_entidad_facturacion&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN #STOCK S ON (R.id_persona=S.id_persona)&#xA;WHERE (R.id_empresa_recaudacion IS NULL OR R.id_tipo_entidad_recaudacion IS NULL) AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;-- Lo que quedo en nulo es porque nunca se encontraron, por lo tanto se le fuerzan estos datos.&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO &#xA;SET id_tipo_entidad_recaudacion = 'I', id_empresa_recaudacion = 99999999&#xA;WHERE (id_tipo_entidad_recaudacion is null OR id_empresa_recaudacion is null)&#xA;and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza entidad"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5E77D3EA-4F85-4827-9C18-0466F919B5FF}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza entidad"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;--ACTUALIZA ENTIDAD&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_entidad = S.id_entidad&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN H_COMER_STOCK_AFILIA S &#xA;ON (R.afiliado=S.afiliado AND R.secuencia=S.secuencia AND R.subnumero=S.subnumero AND S.id_persona=R.id_persona AND R.id_periodo=S.id_periodo)&#xA;&#xA;SELECT afiliado, id_persona, secuencia, subnumero, MAX(id_periodo) id_periodo INTO #COMER FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS &#xA;(SELECT * FROM H_RECAUDACION_DETALLE_NUEVO R WHERE id_origen_recaudacion = 1 AND id_entidad IS NULL&#xA;AND R.afiliado=S.afiliado AND R.secuencia=S.secuencia AND R.subnumero=S.subnumero AND S.id_persona=R.id_persona and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion)&#xA;GROUP BY afiliado, id_persona, secuencia, subnumero&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_entidad = S.id_entidad&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN H_COMER_STOCK_AFILIA S &#xA;ON (R.afiliado=S.afiliado AND R.secuencia=S.secuencia AND R.subnumero=S.subnumero AND S.id_persona=R.id_persona)&#xA;INNER JOIN #COMER T&#xA;ON (T.afiliado=S.afiliado AND T.secuencia=S.secuencia AND T.subnumero=S.subnumero AND S.id_persona=T.id_persona AND S.id_periodo=T.id_periodo)&#xA;WHERE R.id_entidad IS NULL&#xA;&#xA;SELECT id_persona, MAX(id_periodo) id_periodo INTO #COMER2 FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS &#xA;(SELECT * FROM H_RECAUDACION_DETALLE_NUEVO R WHERE id_origen_recaudacion = 1 AND id_entidad IS NULL and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion &#xA;AND S.id_persona=R.id_persona)&#xA;GROUP BY id_persona&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_entidad = S.id_entidad&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN H_COMER_STOCK_AFILIA S &#xA;ON (S.id_persona=R.id_persona)&#xA;INNER JOIN #COMER2 T&#xA;ON (S.id_persona=T.id_persona AND S.id_periodo=T.id_periodo)&#xA;WHERE R.id_entidad IS NULL&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_entidad = 0&#xA;WHERE id_entidad IS NULL&#xA;&#xA;DROP TABLE #COMER&#xA;DROP TABLE #COMER2" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza grilla"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{4FBC6270-E262-4FDC-A089-FE6DB172604D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza grilla"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;&#xA;-- ACTUALIZACION GRILLA 17/06/2011&#xA;Set dateformat 'YMD'&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_ULTPeriodo')&#xA;  begin&#xA;     drop table TEMP_ULTPeriodo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_GRillaULTPeriodo')&#xA;  begin&#xA;     drop table TEMP_GRillaULTPeriodo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_GRillaULTPeriodoAfiViejo')&#xA;  begin&#xA;     drop table TEMP_GRillaULTPeriodoAfiViejo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_ULTPeriodoAfiViejo')&#xA;  begin&#xA;     drop table TEMP_ULTPeriodoAfiViejo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TGRIREC')&#xA;  begin&#xA;     drop table TGRIREC&#xA;  end&#xA;&#xA;&#xA;-- Arma Tabla Temporal con grilla para la persona, producto, plan_producto para el ultimo periodo en el Data Comercial para utilizar luego en Recaudación &#xA;&#xA;select id_persona, id_plan_producto, id_producto, max(id_periodo) as id_periodo INTO TEMP_ULTPeriodo&#xA;from H_COMER_STOCK_AFILIA HA&#xA;GROUP BY id_persona, id_plan_producto, id_producto&#xA;&#xA;&#xA;select id_persona, id_plan_producto, id_producto, max(id_periodo) as id_periodo INTO TEMP_ULTPeriodoAfiViejo&#xA;from H_COMP_GRUPO_ACTIVO HA&#xA;GROUP BY id_persona, id_plan_producto, id_producto&#xA;&#xA;&#xA;Select HA.id_persona, HA.id_plan_producto, HA.id_producto, HA.grilla INTO TEMP_GRillaULTPeriodo&#xA;FROM H_COMER_STOCK_AFILIA HA&#xA;INNER JOIN TEMP_ULTPeriodo T_ULTP&#xA;ON HA.id_periodo = T_ULTP.id_periodo and HA.id_persona = T_ULTP.id_persona and HA.id_plan_producto = T_ULTP.id_plan_producto and HA.id_producto = T_ULTP.id_producto&#xA;&#xA;&#xA;Select HA.id_persona, HA.id_plan_producto, HA.id_producto, HA.grilla INTO TEMP_GRillaULTPeriodoAfiViejo&#xA;FROM H_COMP_GRUPO_ACTIVO HA&#xA;INNER JOIN TEMP_ULTPeriodoAfiViejo T_ULTP&#xA;ON HA.id_periodo = T_ULTP.id_periodo and HA.id_persona = T_ULTP.id_persona and HA.id_plan_producto = T_ULTP.id_plan_producto and HA.id_producto = T_ULTP.id_producto&#xA;&#xA;-- Actualizo la grilla en un valor comodìn 9999 para TODOS los registros de las tablas de recaudación&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO SET grilla = 9999 &#xA;where id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;    &#xA;-- Actualiza campo Grilla en Data de Recaudación (Tomada de Stock AFiliados de Comercial)&#xA;&#xA;update H_RECAUDACION_DETALLE_NUEVO&#xA;set grilla = S.grilla&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R&#xA;INNER JOIN H_COMER_STOCK_AFILIA S&#xA;ON R.id_persona = S.id_persona AND&#xA;R.id_plan_producto = S.id_plan_producto AND&#xA;R.id_producto = S.id_producto&#xA;where R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion and S.id_periodo = DBO.PeriodosAnteriores(R.id_periodo, 2)&#xA;&#xA;------------------------------------------------------------&#xA;&#xA;------- Para los casos de prestaciones que no encuentra esa persona, ese producto, ese plan_producto y fecha_prestacion = Periodo Comercial -1 1 en el Data Comercial, busca la grilla del Data Comercial del último periodo encontrado&#xA;&#xA;-- Actualiza H_RECAUDACION_DETALLE&#xA;&#xA;Update H_RECAUDACION_DETALLE_NUEVO &#xA;SET grilla = TG.grilla&#xA;from H_RECAUDACION_DETALLE_NUEVO HC&#xA;Inner join TEMP_GRillaULTPeriodo TG on HC.id_persona = TG.id_persona and&#xA;HC.id_plan_producto = TG.id_plan_producto and&#xA;HC.id_producto = TG.id_producto and HC.grilla = 9999&#xA;where HC.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;-- Actualiza H_RECAUDACION_DETALLE para los casos que quedan con Grilla = 9999 entonces busca la grilla en Afiliados Viejo&#xA;&#xA;Update H_RECAUDACION_DETALLE_NUEVO SET grilla = TG.grilla&#xA;from H_RECAUDACION_DETALLE_NUEVO HC&#xA;Inner join TEMP_GRillaULTPeriodoAfiViejo TG on HC.id_persona = TG.id_persona and&#xA;HC.id_plan_producto = TG.id_plan_producto and&#xA;HC.id_producto = TG.id_producto and HC.grilla = 9999&#xA;where HC.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;&#xA;&#xA;-- Actualizo en la tabla D_GRILLAS las grillas de recaudación no existentes&#xA;select H.id_producto, H.id_plan_producto, H.grilla, max('No Definida') as De_Grilla, max('19000101') as Char_Fecha_Vig_Desde, max('19000101') as Char_Fecha_Vig_Hasta, max('X') as Id_Con_Copago, max('1900-01-01 ') as Fecha_Vig_Desde, max('1900-01-01 ') as Fecha_Vig_Hasta&#xA;into TGRIREC from H_RECAUDACION_DETALLE_NUEVO H where not exists &#xA;(Select * from D_Grillas G where H.id_producto = G.id_producto and H.id_plan_producto = G.id_plan_producto and H.grilla = G.grilla) and not(H.GRILLA is null)&#xA;group by H.id_producto, H.id_plan_producto, H.grilla&#xA;&#xA;&#xA;INSERT INTO D_GRILLAS&#xA;Select * from TGRIREC T Where not exists &#xA;(Select * from D_Grillas G where T.id_producto = G.id_producto and T.id_plan_producto = G.id_plan_producto and T.grilla = G.grilla)&#xA;&#xA;&#xA;&#xA;&#xA;INSERT INTO D_GRILLAS &#xA;select P.id_producto, P.id_plan_producto, max(9999), max('No Definida') as De_Grilla, max('19000101') as Char_Fecha_Vig_Desde, max('19000101') as Char_Fecha_Vig_Hasta, max('X') as Id_Con_Copago, max('1900-01-01 ') as Fecha_Vig_Desde, max('1900-01-01 ') as Fecha_Vig_Hasta &#xA;FROM D_PLANES P&#xA;where not exists (select * from d_grillas G WHERE P.id_producto = G.id_producto and P.id_plan_producto = G.id_plan_producto)&#xA;group by P.id_producto, P.id_plan_producto&#xA;&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_ULTPeriodo')&#xA;  begin&#xA;     drop table TEMP_ULTPeriodo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_GRillaULTPeriodo')&#xA;  begin&#xA;     drop table TEMP_GRillaULTPeriodo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_GRillaULTPeriodoAfiViejo')&#xA;  begin&#xA;     drop table TEMP_GRillaULTPeriodoAfiViejo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TEMP_ULTPeriodoAfiViejo')&#xA;  begin&#xA;     drop table TEMP_ULTPeriodoAfiViejo&#xA;  end&#xA;&#xA;if exists (select * from sysobjects where name = 'TGRIREC')&#xA;  begin&#xA;     drop table TGRIREC&#xA;  end&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza NPE"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{CA8E1731-9F2C-4A9A-B82D-D78FF0433E81}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza NPE"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @PeriodoRecaudacion Int, @PeriodoLiquidacion Int&#xA;SET @PeriodoRecaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@PeriodoRecaudacion,2))&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_periodo = @PeriodoRecaudacion&#xA;WHERE id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;-- PRIMER BARRIDO POR CLAVE CTA/SCTA/SECUENCIA Y PERIODO UNO A UNO&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_factura_A_E_rec = S.id_factura_A_E,&#xA;id_empresa_PE_rec = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_rec = S.id_tipo_entidad_PE,&#xA;id_marca_PE_rec = S.id_marca_PE,&#xA;id_convenio_especial_rec = S.id_convenio_especial&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN H_COMER_STOCK_AFILIA S ON (R.afiliado = S.afiliado and R.subnumero = S.subnumero and R.secuencia = S.secuencia AND R.id_periodo=S.id_periodo)&#xA;WHERE R.id_periodo = @PeriodoRecaudacion&#xA;&#xA;-- BUSCAMOS MAXIMO PERIODO DE STOCK CON TOPE AL QUE SE ESTA ACTUALIZANDO PARA LA CLAVE EN CUESTION&#xA;&#xA;SELECT MAX(S.id_periodo) id_periodo, S.afiliado,S.subnumero,S.secuencia &#xA;INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_RECAUDACION_DETALLE_NUEVO R ON (R.afiliado = S.afiliado and R.subnumero = S.subnumero and R.secuencia = S.secuencia)&#xA;WHERE R.id_marca_PE_rec is null and S.id_periodo &lt;= R.id_periodo&#xA;AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;GROUP BY S.afiliado,S.subnumero,S.secuencia&#xA;&#xA;SELECT DISTINCT id_periodo, S.afiliado,S.subnumero,S.secuencia, id_tipo_entidad_PE, id_empresa_PE, id_marca_PE, id_factura_A_E, id_convenio_especial &#xA;into #STOCK &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE T.afiliado = S.afiliado and T.subnumero = S.subnumero and T.secuencia = S.secuencia and S.id_periodo=T.id_periodo)&#xA;&#xA;-- SEGUNDO BARRIDO CON CLAVE CTA/SCTA/SECUENCIA Y PERIODO MAXIMO DE STOCK&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_factura_A_E_rec = S.id_factura_A_E,&#xA;id_empresa_PE_rec = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_rec = S.id_tipo_entidad_PE,&#xA;id_marca_PE_rec = S.id_marca_PE,&#xA;id_convenio_especial_rec = S.id_convenio_especial&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN #STOCK S ON (R.afiliado = S.afiliado and R.subnumero = S.subnumero and R.secuencia = S.secuencia)&#xA;WHERE R.id_marca_PE_rec IS NULL and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK&#xA;&#xA;--PROCEDEMOS A HACER ACTUALIZACIONES AHORA SOLO POR LA CLAVE DE PERSONA.&#xA;&#xA;-- Actualiza empresa y tipo de entidad donde encuentre persona y periodo igual.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_factura_A_E_rec = S.id_factura_A_E,&#xA;id_empresa_PE_rec = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_rec = S.id_tipo_entidad_PE,&#xA;id_marca_PE_rec = S.id_marca_PE,&#xA;id_convenio_especial_rec = S.id_convenio_especial&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN H_COMER_STOCK_AFILIA S ON (R.id_persona=S.id_persona AND R.id_periodo=S.id_periodo)&#xA;WHERE R.id_marca_PE_rec is null AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;-- Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP_PERS&#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_RECAUDACION_DETALLE_NUEVO R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_marca_PE_rec is null and S.id_periodo &lt;= R.id_periodo&#xA;AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_tipo_entidad_PE, id_empresa_PE, id_marca_PE, id_factura_A_E, id_convenio_especial &#xA;into #STOCK_PERS &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP_PERS T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;&#xA;-- Se actualiza ambos datos con el ultimo periodo donde se encontro cada persona.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_factura_A_E_rec = S.id_factura_A_E,&#xA;id_empresa_PE_rec = S.id_empresa_PE,&#xA;id_tipo_entidad_PE_rec = S.id_tipo_entidad_PE,&#xA;id_marca_PE_rec = S.id_marca_PE,&#xA;id_convenio_especial_rec = S.id_convenio_especial&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN #STOCK_PERS S ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion and R.id_marca_PE_rec IS NULL&#xA;&#xA;/*   EXCEPCIONES     */&#xA;&#xA;-- si esta en ospaca, pero no es producto 78, lo paso a indivicual&#xA;&#xA;update H_RECAUDACION_DETALLE_NUEVO &#xA;set id_factura_A_E_rec = 'A',&#xA;id_empresa_PE_rec = 0,&#xA;id_tipo_entidad_PE_rec = 'I',&#xA;id_marca_PE_rec = 7,&#xA;id_convenio_especial_rec = 0&#xA;where id_marca_PE_rec = 10 and id_producto &lt;&gt; 78 and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;--si es AMPS, pero el producto no es el 18, lo paso a individual&#xA;&#xA;update H_RECAUDACION_DETALLE_NUEVO &#xA;set id_factura_A_E_rec = 'A',&#xA;id_empresa_PE_rec = 0,&#xA;id_tipo_entidad_PE_rec = 'I',&#xA;id_marca_PE_rec = 7,&#xA;id_convenio_especial_rec = 0&#xA;where id_marca_PE_rec = 9 and id_producto &lt;&gt; 18 and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;-- Lo que quedo en nulo es porque nunca se encontraron, por lo tanto se le fuerzan estos datos.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO &#xA;set id_factura_A_E_rec = 'A',&#xA;id_empresa_PE_rec = 0,&#xA;id_tipo_entidad_PE_rec = 'I',&#xA;id_marca_PE_rec = 7,&#xA;id_convenio_especial_rec = 0&#xA;WHERE id_marca_PE_rec is null&#xA;and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;DROP TABLE #TEMP_PERS&#xA;DROP TABLE #STOCK_PERS" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza Periodo M y Rango"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ECEB95E0-B7D0-42FC-94D4-03C02541F36D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza Periodo M y Rango"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="---- Para Actualizar el campo id_periodo_consumo_M    para el Data de Recaudaciones, siempre se registra el periodo anterior al que procesamos&#xA;---- Se declara en la Varible el periodo Anterior, restandole un periodo al de la AUX_PERIODO_MES_BORRA (periodo que procesamos).&#xA;&#xA;DECLARE @PeriodoRecaudacion INT;&#xA;SET @PeriodoRecaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;&#xA;Declare  @Periodo_Anterior int&#xA;Set @Periodo_Anterior = (select dbo.PeriodosAnteriores(@PeriodoRecaudacion,2))&#xA;&#xA;---- Actualizamos el id_periodo_consumo_M con el periodo Anterior al que actualmente estamos procesando para Data Recaudaciones.&#xA;&#xA;update H_RECAUDACION_DETALLE_NUEVO &#xA;set id_periodo_consumo_M = @Periodo_Anterior&#xA;from  H_RECAUDACION_DETALLE_NUEVO&#xA;where id_periodo = @PeriodoRecaudacion&#xA;and id_origen_recaudacion in (1, 31)&#xA;&#xA;&#xA;&#xA;/* Actualiza el rango de edad en AUX_H_RECAUDACION_DETALLE. */&#xA;&#xA;UPDATE DW_SALUD.dbo.H_RECAUDACION_DETALLE_NUEVO&#xA;    set id_rango_edad_rec = case&#xA;      WHEN edad_actual between 0 and 1 THEN 1&#xA;      WHEN edad_actual between 2 and 18 THEN 2&#xA;      WHEN edad_actual between 19 and 45 THEN 3&#xA;      WHEN edad_actual between 46 and 65 THEN 4&#xA;      WHEN edad_actual between 66 and 75 THEN 5&#xA;      WHEN edad_actual &gt;= 76 and edad_actual &lt; 999 THEN 6&#xA;      WHEN edad_actual = 999 or edad_actual &lt; 0 THEN 0&#xA;      END&#xA;   FROM DW_SALUD.dbo.H_RECAUDACION_DETALLE_NUEVO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza plan para las notas de credito"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{22AB2B0A-D3E4-49E4-B578-467BDCECA5EB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza plan para las notas de credito"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;&#xA;--ACTUALIZA PLAN Y SUBPRODUCTO EN RECAUDACION PARA LAS NOTAS DE CREDITO.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_plan_producto = S.id_plan_producto,&#xA;&#x9;id_subproducto = S.id_subproducto&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN H_COMER_STOCK_AFILIA S &#xA;ON (R.afiliado=S.afiliado and R.id_persona=S.id_persona and R.id_producto=S.id_producto)&#xA;WHERE S.id_periodo = @PeriodoLiquidacion and id_origen_recaudacion = 1 and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;--BUSCA EL MAXIMO PERIODO DE STOCK SI NO LO ENCONTRO EN EL MISMO QUE RECAUDACION.&#xA;&#xA;SELECT DISTINCT afiliado, id_persona, id_plan_producto, id_subproducto, MAX(id_periodo) id_periodo INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM H_RECAUDACION_DETALLE_NUEVO R WHERE R.afiliado=S.afiliado and  R.id_persona=S.id_persona and R.id_producto=S.id_producto&#xA;and id_origen_recaudacion = 1 and id_plan_producto = '' and id_persona &lt;&gt; 0 AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion )&#xA;GROUP BY afiliado, id_persona, id_plan_producto, id_subproducto&#xA;&#xA;&#xA;--ACTUALIZA CON EL ULTIMO PERIODO DE STOCK DONDE ESTUVO CADA PERSONA.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_plan_producto = S.id_plan_producto,&#xA;&#x9;id_subproducto = S.id_subproducto&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN #TEMP S &#xA;ON (R.afiliado=S.afiliado and R.id_persona=S.id_persona)&#xA;WHERE id_origen_recaudacion = 1 and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;&#xA;--- Para los casos donde el plan quedó vacío se le pega alguno para que en el control de lore no los excluya. Se hace por persona, afiliado la relación ya que en muchos casos difiere el subnumero y la secuencia.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET subnumero = R.subnumero,&#xA;&#x9;secuencia = R.secuencia,&#xA;&#x9;id_producto = R.id_producto,&#xA;&#x9;id_subproducto = R.id_subproducto,&#xA;&#x9;id_plan_producto = R.id_plan_producto&#xA;FROM H_RECAUDACION_DETALLE_NUEVO A&#xA;INNER JOIN (SELECT * FROM AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;WHERE id_categoria_liquidacion = 'GR' and id_plan_producto &lt;&gt; '') R ON (A.id_persona=R.id_persona and A.afiliado=R.afiliado)&#xA;WHERE A.id_plan_producto = '' and A.id_persona &lt;&gt; 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza planes"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{ED6E3C09-FE8B-4FE2-AEB4-47342DE0C53E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza planes"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;-- Busco las personas que tengan supra y las inserto en la temporal&#xA;Select R.afiliado, R.id_persona Into #AfiliadoPersona&#xA;From H_RECAUDACION_DETALLE_NUEVO R Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and rcosto3 = 1 and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion &#xA;Group by R.afiliado, R.id_persona&#xA;&#xA;-- Busco los productos de Salud para los registros obtenidos anteriormente&#xA;Select R.afiliado, R.id_persona, R.id_producto, R.id_subproducto, R.id_plan_producto Into #CuentasSalud&#xA;From H_RECAUDACION_DETALLE_NUEVO R Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Inner join #AfiliadoPersona A On (R.afiliado=A.afiliado and R.id_persona=A.id_persona)&#xA;Where P.id_clase_producto IN ('S') and R.id_producto &lt;&gt; 18 and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;Group by R.afiliado, R.id_persona, R.id_producto, R.id_subproducto, R.id_plan_producto &#xA;&#xA;-- Actualizo producto, subproducto y plan con los datos obtenidos en el paso anterior.&#xA;Update H_RECAUDACION_DETALLE_NUEVO&#xA;Set id_producto = C.id_producto,&#xA;&#x9;id_subproducto = C.id_subproducto,&#xA;&#x9;id_plan_producto = C.id_plan_producto&#xA;From H_RECAUDACION_DETALLE_NUEVO R &#xA;Inner join #CuentasSalud C On (R.afiliado=C.afiliado and R.id_persona=C.id_persona)&#xA;Inner join D_PRODUCTOS P On (R.id_producto=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and R.rcosto3 = 1 AND R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;-- Las personas que me quedaron sin actualizar, porque tenia salud en ese periodo, pero no con ese afiliado, las actualizo aca.&#xA;Select id_periodo, id_persona, id_producto = NULL, id_subproducto = NULL, id_plan_producto = NULL INTO #Personas &#xA;from H_RECAUDACION_DETALLE_NUEVO H INNER JOIN D_PRODUCTOS P ON (H.id_producto=P.id_producto) where rcosto3 = 1 and P.id_clase_producto IN ('G', 'U')&#xA;AND id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;Alter table #Personas alter column id_plan_producto CHAR(5)&#xA;&#xA;UPDATE #Personas&#xA;SET id_producto = S.id_producto,&#xA;&#x9;id_subproducto = S.id_subproducto,&#xA;&#x9;id_plan_producto = S.id_plan_producto&#xA;from H_COMER_STOCK_AFILIA S INNER JOIN #Personas P on (S.id_persona=P.id_persona)&#xA;WHERE P.id_producto IS NULL and S.id_producto &lt;&gt; 18&#xA;&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_producto = T.id_producto,&#xA;&#x9;id_subproducto = T.id_subproducto,&#xA;&#x9;id_plan_producto = T.id_plan_producto&#xA;From H_RECAUDACION_DETALLE_NUEVO H inner join #Personas T on (H.id_persona=T.id_persona and H.id_periodo=T.id_periodo)&#xA;inner join D_PRODUCTOS P on (H.id_producto=P.id_producto)&#xA;where P.id_clase_producto in ('G', 'U') and T.id_producto is not null AND H.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;Drop table #Personas&#xA;DROP TABLE #AfiliadoPersona&#xA;DROP TABLE #CuentasSalud&#xA;&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET grilla_original = grilla&#xA;WHERE id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;--RECAUDACION&#xA;-- Busco las personas que tengan supra y las inserto en la temporal&#xA;Select R.afiliado, R.id_persona Into #AfiliadoPersona2&#xA;From H_RECAUDACION_DETALLE_NUEVO R Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and rcosto3 = 1 and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;Group by R.afiliado, R.id_persona&#xA;&#xA;-- Busco los productos de Salud para los registros obtenidos anteriormente&#xA;Select R.afiliado, R.id_persona, R.id_producto_original, R.id_subproducto_original, R.id_plan_producto_original, R.grilla Into #CuentasSalud2&#xA;From H_RECAUDACION_DETALLE_NUEVO R Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Inner join #AfiliadoPersona2 A On (R.afiliado=A.afiliado and R.id_persona=A.id_persona)&#xA;Where P.id_clase_producto IN ('S') and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;Group by R.afiliado, R.id_persona, R.id_producto_original, R.id_subproducto_original, R.id_plan_producto_original, R.grilla &#xA;&#xA;-- Actualizo producto, subproducto y plan con los datos obtenidos en el paso anterior.&#xA;Update H_RECAUDACION_DETALLE_NUEVO&#xA;Set grilla = C.grilla&#xA;From H_RECAUDACION_DETALLE_NUEVO R &#xA;Inner join #CuentasSalud2 C On (R.afiliado=C.afiliado and R.id_persona=C.id_persona and R.id_plan_producto=C.id_plan_producto_original and R.id_producto=C.id_producto_original)&#xA;Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;-- Buscamos incosistencias que se dan por las personas que no tienen salud, pero que no llego recaudacion por el planb de salud&#xA;Select id_persona into #NoActualizado&#xA;from H_RECAUDACION_DETALLE_NUEVO R where not exists (select id_producto,id_plan_producto,grilla from D_GRILLAS G where (R.grilla=G.grilla and R.id_producto=G.id_producto and R.id_plan_producto=G.id_plan_producto))&#xA;and rcosto3 = 1 and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;group by id_persona, afiliado&#xA;&#xA;&#xA;-- buscamos del stock la grilla de salud que se corresponde para ese afiliado y plan&#xA;Select R.id_persona, R.id_plan_producto, R.grilla Into #Datos&#xA;From H_COMER_STOCK_AFILIA R Inner join #NoActualizado A On (R.id_persona=A.id_persona)&#xA;Group by R.afiliado, R.id_plan_producto, R.id_persona, R.grilla&#xA;&#xA;Update H_RECAUDACION_DETALLE_NUEVO&#xA;Set grilla = C.grilla&#xA;From H_RECAUDACION_DETALLE_NUEVO R &#xA;Inner join #Datos C On (R.id_persona=C.id_persona and R.id_plan_producto=C.id_plan_producto)&#xA;Inner join D_PRODUCTOS P On (R.id_producto_original=P.id_producto)&#xA;Where P.id_clase_producto IN ('G', 'U') and R.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;&#xA;DROP TABLE #AfiliadoPersona2&#xA;DROP TABLE #CuentasSalud2&#xA;drop table #NoActualizado&#xA;drop table #Datos" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra las Tablas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E3E08960-8736-49B3-A1DF-2B9895FCFD46}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra las Tablas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="Declare @Periodo_Recaudacion Int&#xA;SET @Periodo_Recaudacion = (Select dbo.PeriodosAnteriores((SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA),2))&#xA;&#xA;/* Borra la Auxiliar */&#xA;&#xA;Truncate Table AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;&#xA;/* Borra el Periodo Correspondiente en H_RECAUDACION_DETALLE_NUEVO */&#xA; &#xA;DELETE FROM H_RECAUDACION_DETALLE_NUEVO&#xA;where id_periodo_comprobante_liquidacion =  @Periodo_Recaudacion" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserta en H"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1F74EDC4-6CE5-4FDC-AC81-1A50C7E14CD5}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserta en H"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="INSERT INTO [DW_SALUD].[dbo].[H_RECAUDACION_DETALLE_NUEVO]   &#xA;&#x9;&#x9;&#x9;(id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,total_recaudacion&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion, id_fuente_recaudacion ,id_convenio&#xA;                                                , id_tipo_entidad_convenio)&#xA;SELECT&#x9;&#x9;id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,ROUND(SUM(total_recaudacion), 2)&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;                                                , id_fuente_recaudacion ,id_convenio&#xA;                                                , id_tipo_entidad_convenio&#xA;FROM  AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;GROUP BY id_periodo, afiliado, id_persona, subnumero, secuencia&#xA;&#x9;&#x9;,id_producto, id_subproducto, id_plan_producto &#xA;&#x9;&#x9;,id_empresa_recaudacion, id_periodo_liquidacion&#xA;&#x9;&#x9;,id_periodo_comprobante_liquidacion, id_origen_recaudacion, id_fuente_recaudacion,id_convenio&#xA;                                                , id_tipo_entidad_convenio&#xA;&#xA;DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;--Actualiza las edades de cada persona &#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET edad_actual = DATEDIFF(YY, P.Fecha_Nacimiento, CAST(CAST(dbo.Devuelve_Fecha(R.id_periodo) AS varchar(20)) AS datetime)) &#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN D_PERSONAS P ON (P.id_persona=R.id_persona)&#xA;WHERE id_periodo_comprobante_liquidacion = @PeriodoLiquidacion AND P.Fecha_Nacimiento &lt;&gt; 0&#xA;&#xA;--Actualiza las localidades de cada registro.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_localidad = P.id_localidad_afiliado&#xA;FROM D_PERSONAS P&#xA;INNER JOIN H_RECAUDACION_DETALLE_NUEVO H ON (H.id_persona=P.id_persona)&#xA;&#xA;&#xA;-- Se le aplica el descuento de IVA para STAFF GRAV.&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;SET total_recaudacion = total_recaudacion/1.105&#xA;FROM H_RECAUDACION_DETALLE_NUEVO&#xA;WHERE id_producto = 43 and id_origen_recaudacion = 1 and id_periodo_comprobante_liquidacion = @PeriodoLiquidacion &#xA;&#xA;&#xA;update H_RECAUDACION_DETALLE_NUEVO &#xA;set fecha_ingreso_segmento = Hc.fecha_ingreso_segmento&#xA;from H_RECAUDACION_DETALLE_NUEVO HD&#xA;inner join (select id_persona, max(fecha_ingreso_segmento_comercial) as fecha_ingreso_segmento from h_comer_stock_afilia (nolock) group by id_persona) HC on HD.id_persona = HC.id_persona&#xA;Where hd.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO &#xA;SET Id_Categoria = A.Id_Categoria&#xA;FROM H_RECAUDACION_DETALLE_NUEVO H1&#xA;INNER JOIN H_COMP_GRUPO_ACTIVO A ON (H1.id_Persona = A.id_persona AND H1.id_periodo=A.id_periodo)&#xA;WHERE H1.id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO &#xA;SET Id_Categoria = 9&#xA;WHERE Id_Categoria is null or Id_Categoria not in (SELECT id_categoria FROM d_categoria_afiliado) or id_categoria = ' '&#xA;&#xA;-- Actualizacion de subproducto respecto al mail de lore enviado el 03/01/2018&#xA;--UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;--SET id_subproducto = R.id_subproducto&#xA;--FROM H_RECAUDACION_DETALLE_NUEVO A&#xA;--INNER JOIN (SELECT * FROM H_RECAUDACION_DETALLE_NUEVO&#xA;--WHERE id_categoria_liquidacion = 'GR' and id_subproducto &lt;&gt; 0) R ON (R.afiliado=A.afiliado AND R.id_persona=A.id_persona AND R.secuencia=A.secuencia AND R.subnumero=A.subnumero)&#xA;--WHERE A.id_subproducto = 0 and A.id_categoria_liquidacion &lt;&gt; 'GR'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserta la info en H_RECAUDACION_DETALLE"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0E7115EE-A538-48D7-B770-EC933D206888}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserta la info en H_RECAUDACION_DETALLE"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="Declare @Periodo_Recaudacion int&#xA;SET @Periodo_Recaudacion = (Select max(id_periodo) from AUX_PERIODO_MES_BORRA)&#xA;&#xA;/* Borra la información Liquidacion de Asociados en caso de reproceso */&#xA;Delete from H_RECAUDACION_DETALLE where id_periodo = @Periodo_Recaudacion&#xA;and id_fuente_recaudacion in ( 8 , 14 )&#xA;&#xA;/* Insert la información de Liquidacion de Asociados  */&#xA;&#xA;INSERT INTO H_RECAUDACION_DETALLE &#xA;(id_periodo, afiliado, subnumero,&#xA;secuencia, id_persona, id_origen_recaudacion,&#xA;id_producto, id_subproducto, id_plan_producto,&#xA;id_entidad, id_localidad, edad_actual,&#xA;total_recaudacion, grilla, fecha_ingreso_segmento,&#xA;fecha_ingreso_salud, id_categoria, id_empresa_recaudacion,&#xA;id_tipo_entidad_recaudacion, rcosto1, rcosto2,&#xA;rcosto3, rcosto4, id_producto_original,&#xA;id_subproducto_original, id_plan_producto_original, grilla_original,&#xA;id_periodo_liquidacion, id_factura_A_E_rec, id_empresa_PE_rec,&#xA;id_tipo_entidad_PE_rec, id_marca_PE_rec, id_convenio_especial_rec,&#xA;id_periodo_consumo_M, id_rango_edad_rec, id_fuente_recaudacion ,id_convenio, id_tipo_entidad_convenio )&#xA;SELECT &#xA;id_periodo, afiliado, subnumero,&#xA;secuencia, id_persona, id_origen_recaudacion,&#xA;id_producto, id_subproducto, id_plan_producto,&#xA;id_entidad, id_localidad, edad_actual,&#xA;total_recaudacion, grilla, fecha_ingreso_segmento,&#xA;fecha_ingreso_salud, id_categoria, id_empresa_recaudacion,&#xA;id_tipo_entidad_recaudacion, rcosto1, rcosto2,&#xA;rcosto3, rcosto4, id_producto_original,&#xA;id_subproducto_original, id_plan_producto_original, grilla_original,&#xA;id_periodo_liquidacion, id_factura_A_E_rec, id_empresa_PE_rec,&#xA;id_tipo_entidad_PE_rec, id_marca_PE_rec, id_convenio_especial_rec,&#xA;id_periodo_consumo_M, id_rango_edad_rec, isnull(id_fuente_recaudacion, 8) ,id_convenio, id_tipo_entidad_convenio&#xA;from DW_SALUD.dbo.H_RECAUDACION_DETALLE_NUEVO&#xA;where @Periodo_Recaudacion = id_periodo" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserta origen 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{50625C63-5EAA-4983-8494-E830C9C6F4B3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserta origen 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @Periodo_Recaudacion Int, @PeriodoLiquidacion Int&#xA;SET @Periodo_Recaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (Select dbo.PeriodosAnteriores(@Periodo_Recaudacion,2))&#xA;&#xA;/* Se insertan solo los registros con origen de recaudacion 106 */&#xA;&#xA;INSERT INTO [DW_SALUD].[dbo].[AUX_H_RECAUDACION_DETALLE_NUEVO]   &#xA;&#x9;&#x9;&#x9;(id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,total_recaudacion&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;&#x9;&#x9;&#x9;,id_categoria_liquidacion &#xA;                                                ,id_convenio&#xA;                                               , id_tipo_entidad_convenio)&#x9;&#x9;&#x9;        &#xA;SELECT&#x9;&#x9; id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,106 --Origen recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,total_concepto&#xA;&#x9;&#x9;&#x9;,id_empresa&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;&#x9;&#x9;&#x9;,id_categoria_liquidacion&#xA;                                                ,id_convenio&#xA;                                                , id_tipo_entidad_convenio&#xA;FROM H_LIQUIDACIONES L &#xA;WHERE id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;AND id_concepto_liquidacion IN (605, 606, 784) &#xA;AND (L.id_producto = 1 OR L.id_producto = 16 OR L.id_producto = 20)&#xA;AND id_empresa NOT IN (402724, 402723, 402725, 405674, 405685, 406832, 414020, 452076)&#xA;&#xA;/* Se insertan los registros con origen de recaudacion entre 100 y 105 */&#xA;&#xA;INSERT INTO [DW_SALUD].[dbo].[AUX_H_RECAUDACION_DETALLE_NUEVO]   &#xA;&#x9;&#x9;&#x9;(id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,total_recaudacion&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;&#x9;&#x9;&#x9;,id_categoria_liquidacion&#xA;                                                 ,id_convenio&#xA;                                                , id_tipo_entidad_convenio)&#xA;SELECT&#x9;&#x9; id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,C.id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,total_concepto&#xA;&#x9;&#x9;&#x9;,id_empresa&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;&#x9;&#x9;&#x9;,L.id_categoria_liquidacion&#xA;                                                ,id_convenio&#xA;                                                , id_tipo_entidad_convenio&#xA;FROM H_LIQUIDACIONES  L &#xA;INNER JOIN D_CATEGORIAS_LIQUIDACION C ON (L.id_categoria_liquidacion = C.id_categoria_liquidacion) &#xA;WHERE id_periodo_comprobante_liquidacion = @PeriodoLiquidacion&#xA;AND L.id_categoria_liquidacion IN ('GR', 'AU', 'BA', 'BE', 'PP', 'RE', 'FU', 'GB', 'BG', 'CONT' , 'BEA', 'BEC' ,'BEL', 'REC' , 'REA')&#xA;AND id_empresa NOT IN (402724, 402723, 402725, 405674, 405685, 406832, 414020, 452076)&#xA;&#xA;/* Agrupa los registros e inserta 1 en origen de recaudacion y calcula total de recaudacion */&#xA;&#xA;INSERT INTO [DW_SALUD].[dbo].[AUX_H_RECAUDACION_DETALLE_NUEVO]   &#xA;&#x9;&#x9;&#x9;(id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,total_recaudacion&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;&#x9;&#x9;&#x9;,id_categoria_liquidacion&#xA;                                                ,id_convenio&#xA;                                                , id_tipo_entidad_convenio)&#xA;SELECT&#x9;&#x9;id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,1 as id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,ROUND(SUM(total_recaudacion), 2)&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_periodo_comprobante_liquidacion&#xA;&#x9;&#x9;&#x9;,id_categoria_liquidacion&#xA;                                                ,id_convenio&#xA;                                                , id_tipo_entidad_convenio&#xA;FROM  AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;GROUP BY id_periodo, afiliado, id_persona, subnumero, secuencia&#xA;&#x9;&#x9;,id_producto, id_subproducto, id_plan_producto, id_entidad&#xA;&#x9;&#x9;,id_localidad, edad_actual, grilla, id_categoria&#xA;&#x9;&#x9;,id_empresa_recaudacion, id_periodo_liquidacion, id_periodo_comprobante_liquidacion, id_categoria_liquidacion ,id_convenio&#xA;                                                , id_tipo_entidad_convenio&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;/*  Actualiza la fuente 8 con la info que ingresa por Liquidaciones */&#xA;&#xA;UPDATE AUX_H_RECAUDACION_DETALLE_NUEVO SET id_fuente_recaudacion = 8&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Linea Empresa"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B3C28A25-2273-4682-A997-0A8A13F27B38}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Linea Empresa"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @PeriodoRecaudacion Int, @Periodo Int&#xA;SET @PeriodoRecaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @Periodo = (Select dbo.PeriodosAnteriores(@PeriodoRecaudacion,2))&#xA;&#xA;&#xA;-- PRIMER BARRIDO POR CLAVE CTA/SCTA/SECUENCIA Y PERIODO UNO A UNO&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_convenio = S.id_convenio,&#xA;id_tipo_entidad_convenio = S.id_tipo_entidad_convenio&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN H_COMER_STOCK_AFILIA S ON (R.afiliado = S.afiliado and R.subnumero = S.subnumero and R.secuencia = S.secuencia AND R.id_periodo=S.id_periodo)&#xA;WHERE R.id_periodo = @Periodo&#xA;and R.id_convenio is null&#xA;&#xA;-- BUSCAMOS MAXIMO PERIODO DE STOCK CON TOPE AL QUE SE ESTA ACTUALIZANDO PARA LA CLAVE EN CUESTION&#xA;SELECT MAX(S.id_periodo) id_periodo, S.afiliado,S.subnumero,S.secuencia &#xA;INTO #TEMP &#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_RECAUDACION_DETALLE_NUEVO R ON (R.afiliado = S.afiliado and R.subnumero = S.subnumero and R.secuencia = S.secuencia)&#xA;WHERE R.id_convenio is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo and  S.id_periodo &gt; 201603 and R.id_convenio is null&#xA;GROUP BY S.afiliado,S.subnumero,S.secuencia&#xA;&#xA;SELECT DISTINCT id_periodo, S.afiliado,S.subnumero,S.secuencia, id_convenio,id_tipo_entidad_convenio&#xA;into #STOCK &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP T WHERE T.afiliado = S.afiliado and T.subnumero = S.subnumero and T.secuencia = S.secuencia and S.id_periodo=T.id_periodo)&#xA;and id_periodo &gt;= 201603&#xA;&#xA;-- SEGUNDO BARRIDO CON CLAVE CTA/SCTA/SECUENCIA Y PERIODO MAXIMO DE STOCK&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_convenio = S.id_convenio,&#xA;id_tipo_entidad_convenio = S.id_tipo_entidad_convenio&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN #STOCK S ON (R.afiliado = S.afiliado and R.subnumero = S.subnumero and R.secuencia = S.secuencia)&#xA;WHERE R.id_periodo = @Periodo&#xA;AND R.id_convenio IS NULL &#xA;AND  S.id_periodo &gt;= 201603&#xA;&#xA;DROP TABLE #TEMP&#xA;DROP TABLE #STOCK&#xA;&#xA;&#xA;--PROCEDEMOS A HACER ACTUALIZACIONES AHORA SOLO POR LA CLAVE DE PERSONA.&#xA;&#xA;-- Actualiza empresa y tipo de entidad donde encuentre persona y periodo igual.&#xA;&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_convenio = S.id_convenio,&#xA;id_tipo_entidad_convenio = S.id_tipo_entidad_convenio&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R INNER JOIN H_COMER_STOCK_AFILIA S ON (R.id_persona=S.id_persona AND R.id_periodo=S.id_periodo)&#xA;WHERE R.id_periodo = @Periodo AND R.id_convenio is null&#xA;and S.id_periodo &gt;= 201603&#xA;&#xA;-- Se busca el maximo periodo donde estuvo una persona para obtener el tipo de entidad y la empresa.&#xA;&#xA;SELECT MAX(S.id_periodo) id_periodo, S.id_persona &#xA;INTO #TEMP_PERS&#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN H_RECAUDACION_DETALLE_NUEVO R ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_convenio is null and S.id_periodo &lt;= @Periodo&#xA;AND R.id_periodo = @Periodo&#xA;and S.id_periodo &gt;= 201603&#xA;GROUP BY S.id_persona&#xA;&#xA;SELECT DISTINCT id_periodo, id_persona, id_convenio,id_tipo_entidad_convenio&#xA;into #STOCK_PERS &#xA;FROM H_COMER_STOCK_AFILIA S&#xA;WHERE EXISTS (SELECT * FROM #TEMP_PERS T WHERE S.id_persona=T.id_persona and S.id_periodo=T.id_periodo)&#xA;&#xA;-- Se actualiza ambos datos con el ultimo periodo donde se encontro cada persona.&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO&#xA;set id_convenio = S.id_convenio,&#xA;id_tipo_entidad_convenio = S.id_tipo_entidad_convenio&#xA;FROM H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN #STOCK_PERS S ON (R.id_persona=S.id_persona)&#xA;WHERE R.id_periodo = @Periodo&#xA;AND R.id_convenio IS NULL&#xA;&#xA;&#xA;&#xA;&#xA;-- Lo que quedo en nulo es porque nunca se encontraron, por lo tanto se le fuerzan estos datos.&#xA;UPDATE H_RECAUDACION_DETALLE_NUEVO &#xA;set id_convenio = 0,&#xA;id_tipo_entidad_convenio = 'I'&#xA;WHERE id_convenio is null and id_periodo = @Periodo&#xA;&#xA;&#xA;DROP TABLE #TEMP_PERS&#xA;DROP TABLE #STOCK_PERS&#xA;&#xA;&#xA;&#xA;&#xA;select distinct id_convenio,id_tipo_entidad_convenio,0 as id_periodo_maximo into #convenios_nuevos &#xA;from H_RECAUDACION_DETALLE_NUEVO h&#xA;where  not exists  (select id_convenio ,id_tipo_entidad_convenio &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;from H_CONVENIOS_EMPRESAS C where id_periodo = @periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;and h.id_periodo = &#x9;c.id_periodo and h.id_convenio = c.id_convenio and h.id_tipo_entidad_convenio = c.id_tipo_entidad_convenio) &#xA;&#x9;&#x9;and id_periodo = @periodo&#xA;&#xA;&#xA;update #convenios_nuevos&#xA;set id_periodo_maximo = maximo_periodo from&#xA;#convenios_nuevos c inner join (&#xA;select t.id_convenio, max(h.id_periodo) as maximo_periodo from #convenios_nuevos t inner join H_CONVENIOS_EMPRESAS h on t.id_convenio = h.id_convenio&#xA;&#x9;and t.id_tipo_entidad_convenio = h.id_tipo_entidad_convenio&#xA;group by t.id_convenio) A on c.id_convenio = a.id_convenio&#xA;&#xA;&#xA;insert into H_CONVENIOS_EMPRESAS&#xA;select @periodo,c.id_convenio,c.id_tipo_entidad_convenio,e.id_subtipo_venta,id_rango_stock,id_rango_costo,id_blindaje,interes_comercial,es_mutual&#xA;,id_holding,'Reca' from #convenios_nuevos c inner join H_CONVENIOS_EMPRESAS e&#xA;on  c.id_convenio = e.id_convenio and c.id_periodo_maximo = e.id_periodo and c.id_tipo_entidad_convenio = e.id_tipo_entidad_convenio&#xA;&#xA;&#xA;drop table #convenios_nuevos" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Prorrateo empresas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{69AA0516-601E-4772-AC97-5D43536E4C09}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Prorrateo empresas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}"
          SQLTask:SqlStatementSource="DECLARE @PeriodoLiquidacion INT, @PeriodoRecaudacion INT&#xA;SET @PeriodoRecaudacion = (SELECT MAX(id_periodo) FROM AUX_PERIODO_MES_BORRA)&#xA;SET @PeriodoLiquidacion = (SELECT dbo.PeriodosAnteriores(@PeriodoRecaudacion,2) )&#xA;&#xA;&#xA;--PRORRATEO EMPRESAS&#xA;SELECT R.id_periodo_comprobante_liquidacion as id_periodo, COUNT(S.id_persona) C_id_persona, id_empresa_recaudacion, total_recaudacion, ROUND(total_recaudacion/COUNT(S.id_persona), 2) Prorrateo INTO #RECA&#xA;FROM H_COMER_STOCK_AFILIA S INNER JOIN AUX_H_RECAUDACION_DETALLE_NUEVO R ON (S.id_empresa_facturacion=R.id_empresa_recaudacion and S.id_periodo=R.id_periodo_comprobante_liquidacion)&#xA;WHERE R.afiliado = 0 AND S.id_producto IN (1, 16, 43, 44) and S.id_marca_suspendido = 0 AND S.id_tipo_entidad_PE = 'E'&#xA;GROUP BY R.id_periodo_comprobante_liquidacion, R.afiliado, R.subnumero, R.secuencia, R.id_persona, R.id_origen_recaudacion, R.id_producto, R.id_subproducto, R.id_plan_producto, total_recaudacion, R.id_empresa_recaudacion, id_periodo_liquidacion&#xA;ORDER BY C_id_persona DESC&#xA;&#xA;SELECT id_periodo, C_id_persona, id_empresa_recaudacion, SUM(total_recaudacion) total_recaudacion, SUM(total_recaudacion)/C_id_persona Prorrateo INTO #PRORRATEO &#xA;FROM #RECA&#xA;GROUP BY id_periodo, C_id_persona, id_empresa_recaudacion&#xA;order by id_empresa_recaudacion&#xA;&#xA;UPDATE AUX_H_RECAUDACION_DETALLE_NUEVO&#xA;SET id_producto = S.id_producto,&#xA;&#x9;id_subproducto = S.id_subproducto,&#xA;&#x9;id_plan_producto = S.id_plan_producto&#xA;FROM AUX_H_RECAUDACION_DETALLE_NUEVO R &#xA;INNER JOIN H_COMER_STOCK_AFILIA S ON (R.afiliado=S.afiliado AND R.id_persona=S.id_persona AND R.secuencia=S.secuencia AND R.subnumero=S.subnumero)&#xA;INNER JOIN #PRORRATEO T ON (S.id_empresa_facturacion=T.id_empresa_recaudacion AND S.id_periodo=T.id_periodo)&#xA;INNER JOIN D_PERSONAS P ON (S.id_persona=P.id_persona)&#xA;WHERE S.id_producto IN (1, 16, 43, 44) and id_marca_suspendido = 0 AND S.id_tipo_entidad_PE = 'E'&#xA;&#xA;&#xA;INSERT INTO [DW_SALUD].[dbo].[AUX_H_RECAUDACION_DETALLE_NUEVO]   &#xA;&#x9;&#x9;&#x9;(id_periodo&#xA;&#x9;&#x9;&#x9;,afiliado&#xA;&#x9;&#x9;&#x9;,subnumero&#xA;&#x9;&#x9;&#x9;,secuencia&#xA;&#x9;&#x9;&#x9;,id_persona&#xA;&#x9;&#x9;&#x9;,id_origen_recaudacion&#xA;&#x9;&#x9;&#x9;,id_producto&#xA;&#x9;&#x9;&#x9;,id_subproducto&#xA;&#x9;&#x9;&#x9;,id_plan_producto&#xA;&#x9;&#x9;&#x9;,id_entidad&#xA;&#x9;&#x9;&#x9;,id_localidad&#xA;&#x9;&#x9;&#x9;,edad_actual&#xA;&#x9;&#x9;&#x9;,total_recaudacion&#xA;&#x9;&#x9;&#x9;,grilla&#xA;&#x9;&#x9;&#x9;,fecha_ingreso_segmento&#xA;&#x9;&#x9;&#x9;, fecha_ingreso_salud&#xA;&#x9;&#x9;&#x9;,id_categoria&#xA;&#x9;&#x9;&#x9;,id_empresa_recaudacion&#xA;&#x9;&#x9;&#x9;,id_tipo_entidad_PE_rec&#xA;&#x9;&#x9;&#x9;,id_periodo_liquidacion&#xA;&#x9;&#x9;&#x9;,id_fuente_recaudacion&#xA;&#x9;&#x9;&#x9;,id_periodo_Comprobante_liquidacion)&#x9;&#xA;SELECT DISTINCT T.id_periodo, S.afiliado, S.subnumero, S.secuencia, S.id_persona, 1, S.id_producto, S.id_subproducto, S.id_plan_producto, S.id_entidad, &#xA;P.id_localidad_afiliado, P.Edad_actual, ROUND(T.Prorrateo, 2), S.grilla, S.fecha_ingreso_segmento_comercial, S.fecha_ingreso_Sancor_Salud, S.id_categoria,&#xA;S.id_empresa_facturacion, S.id_tipo_entidad_PE, @PeriodoLiquidacion, 8 , @PeriodoLiquidacion as id_periodo_Comprobante_liquidacion&#xA;FROM H_COMER_STOCK_AFILIA S &#xA;INNER JOIN #PRORRATEO T ON (S.id_empresa_facturacion=T.id_empresa_recaudacion AND S.id_periodo=T.id_periodo)&#xA;INNER JOIN D_PERSONAS P ON (S.id_persona=P.id_persona)&#xA;WHERE S.id_producto IN (1, 16, 43, 44) and id_marca_suspendido = 0 AND S.id_tipo_entidad_PE = 'E' &#xA;&#xA;DELETE R&#xA;FROM AUX_H_RECAUDACION_DETALLE_NUEVO R&#xA;WHERE EXISTS (SELECT * FROM #PRORRATEO P WHERE P.id_empresa_recaudacion=R.id_empresa_recaudacion and P.id_periodo=R.id_periodo)&#xA;AND afiliado = 0&#xA;&#xA;DROP TABLE #PRORRATEO&#xA;DROP TABLE #RECA" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Recaudacion convenios"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A17272E5-A36D-42FC-A04D-3F222C70C6AA}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Recaudacion convenios"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Recaudacion convenios\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Recaudacion convenios\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Recaudacion convenios\Data Conversion.Inputs[Data Conversion Input].Columns[id_plan_producto]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="id_plan_producto"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_plan_producto]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\Data Conversion.Inputs[Data Conversion Input].Columns[id_periodo_liquidacion]"
                      cachedDataType="r8"
                      cachedName="id_periodo_liquidacion"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo_liquidacion]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Recaudacion convenios\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of id_plan_producto]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of id_plan_producto]"
                      name="Copy of id_plan_producto"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_plan_producto]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output].Columns[id_periodo_comprobante_liquidacion]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output].Columns[id_periodo_comprobante_liquidacion]"
                      name="id_periodo_comprobante_liquidacion"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo_liquidacion]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Recaudacion convenios\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Recaudacion convenios\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Updates column values using expressions"
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Recaudacion convenios\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Recaudacion convenios\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Output].Columns[id_fuente_recaudacion]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Output].Columns[id_fuente_recaudacion]"
                      name="id_fuente_recaudacion"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">14</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">14</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Recaudacion convenios\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Recaudacion convenios\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Base$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Recaudacion convenios\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Recaudacion Convenios]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Recaudacion Convenios]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_periodo]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo]"
                      name="id_periodo"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[afiliado]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[afiliado]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[afiliado]"
                      name="afiliado"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[subnumero]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[subnumero]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[subnumero]"
                      name="subnumero"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[secuencia]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[secuencia]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[secuencia]"
                      name="secuencia"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_persona]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_persona]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_persona]"
                      name="id_persona"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_origen_recaudacion]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_origen_recaudacion]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_origen_recaudacion]"
                      name="id_origen_recaudacion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_producto]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_producto]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_producto]"
                      name="id_producto"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_subproducto]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_subproducto]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_subproducto]"
                      name="id_subproducto"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_plan_producto]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_plan_producto]"
                      length="255"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_plan_producto]"
                      name="id_plan_producto"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_entidad]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_entidad]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_entidad]"
                      name="id_entidad"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[total_recaudacion]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[total_recaudacion]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[total_recaudacion]"
                      name="total_recaudacion"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[grilla]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[grilla]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[grilla]"
                      name="grilla"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo_liquidacion]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_periodo_liquidacion]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo_liquidacion]"
                      name="id_periodo_liquidacion"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_periodo]"
                      dataType="r8"
                      name="id_periodo" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[afiliado]"
                      dataType="r8"
                      name="afiliado" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[subnumero]"
                      dataType="r8"
                      name="subnumero" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[secuencia]"
                      dataType="r8"
                      name="secuencia" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_persona]"
                      dataType="r8"
                      name="id_persona" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_origen_recaudacion]"
                      dataType="r8"
                      name="id_origen_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_producto]"
                      dataType="r8"
                      name="id_producto" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_subproducto]"
                      dataType="r8"
                      name="id_subproducto" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_plan_producto]"
                      dataType="wstr"
                      length="255"
                      name="id_plan_producto" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_entidad]"
                      dataType="r8"
                      name="id_entidad" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[total_recaudacion]"
                      dataType="r8"
                      name="total_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[grilla]"
                      dataType="r8"
                      name="grilla" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].ExternalColumns[id_periodo_liquidacion]"
                      dataType="r8"
                      name="id_periodo_liquidacion" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_periodo]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_periodo]"
                      name="id_periodo" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[afiliado]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[afiliado]"
                      name="afiliado" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[subnumero]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[subnumero]"
                      name="subnumero" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[secuencia]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[secuencia]"
                      name="secuencia" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_persona]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_persona]"
                      name="id_persona" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_origen_recaudacion]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_origen_recaudacion]"
                      name="id_origen_recaudacion" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_producto]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_producto]"
                      name="id_producto" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_subproducto]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_subproducto]"
                      name="id_subproducto" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_plan_producto]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_plan_producto]"
                      name="id_plan_producto" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_entidad]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_entidad]"
                      name="id_entidad" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[total_recaudacion]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[total_recaudacion]"
                      name="total_recaudacion" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[grilla]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[grilla]"
                      name="grilla" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_periodo_liquidacion]"
                      dataType="r8"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[id_periodo_liquidacion]"
                      name="id_periodo_liquidacion" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Recaudacion convenios\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[AUX_H_RECAUDACION_DETALLE_NUEVO]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Recaudacion convenios\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{E98BA7A5-A37B-425A-9974-434BB6F83FD9}:external"
                  connectionManagerRefId="Project.ConnectionManagers[DS_DW_SALUD]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_periodo]"
                      cachedDataType="r8"
                      cachedName="id_periodo"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_periodo]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[afiliado]"
                      cachedDataType="r8"
                      cachedName="afiliado"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[afiliado]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[afiliado]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[subnumero]"
                      cachedDataType="r8"
                      cachedName="subnumero"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subnumero]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[subnumero]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[secuencia]"
                      cachedDataType="r8"
                      cachedName="secuencia"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[secuencia]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[secuencia]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_persona]"
                      cachedDataType="r8"
                      cachedName="id_persona"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_persona]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_persona]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_origen_recaudacion]"
                      cachedDataType="r8"
                      cachedName="id_origen_recaudacion"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_origen_recaudacion]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_origen_recaudacion]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_producto]"
                      cachedDataType="r8"
                      cachedName="id_producto"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_producto]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_producto]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_subproducto]"
                      cachedDataType="r8"
                      cachedName="id_subproducto"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_subproducto]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_subproducto]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_entidad]"
                      cachedDataType="r8"
                      cachedName="id_entidad"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_entidad]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_entidad]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[total_recaudacion]"
                      cachedDataType="r8"
                      cachedName="total_recaudacion"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_recaudacion]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[total_recaudacion]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[grilla]"
                      cachedDataType="r8"
                      cachedName="grilla"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grilla]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[grilla]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_periodo_liquidacion]"
                      cachedDataType="r8"
                      cachedName="id_periodo_liquidacion"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_periodo_liquidacion]"
                      lineageId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output].Columns[id_periodo_liquidacion]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of id_plan_producto]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="255"
                      cachedName="Copy of id_plan_producto"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_plan_producto]"
                      lineageId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of id_plan_producto]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_periodo_comprobante_liquidacion]"
                      cachedDataType="i4"
                      cachedName="id_periodo_comprobante_liquidacion"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_periodo_comprobante_liquidacion]"
                      lineageId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output].Columns[id_periodo_comprobante_liquidacion]" />
                    <inputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[id_fuente_recaudacion]"
                      cachedDataType="i4"
                      cachedName="id_fuente_recaudacion"
                      externalMetadataColumnId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_fuente_recaudacion]"
                      lineageId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Output].Columns[id_fuente_recaudacion]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_periodo]"
                      dataType="i4"
                      name="id_periodo" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[afiliado]"
                      dataType="i4"
                      name="afiliado" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[subnumero]"
                      dataType="i4"
                      name="subnumero" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[secuencia]"
                      dataType="i4"
                      name="secuencia" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_persona]"
                      dataType="i4"
                      name="id_persona" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_origen_recaudacion]"
                      dataType="i4"
                      name="id_origen_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_producto]"
                      dataType="i4"
                      name="id_producto" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_subproducto]"
                      dataType="i4"
                      name="id_subproducto" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_plan_producto]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="id_plan_producto" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_entidad]"
                      dataType="i4"
                      name="id_entidad" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_localidad]"
                      dataType="i4"
                      name="id_localidad" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[edad_actual]"
                      dataType="i4"
                      name="edad_actual" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_recaudacion]"
                      dataType="r8"
                      name="total_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grilla]"
                      dataType="i4"
                      name="grilla" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[fecha_ingreso_segmento]"
                      dataType="dbTimeStamp"
                      name="fecha_ingreso_segmento" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[fecha_ingreso_salud]"
                      dataType="dbTimeStamp"
                      name="fecha_ingreso_salud" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_categoria]"
                      dataType="i4"
                      name="id_categoria" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_empresa_recaudacion]"
                      dataType="i4"
                      name="id_empresa_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_tipo_entidad_recaudacion]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="id_tipo_entidad_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[rcosto1]"
                      dataType="ui1"
                      name="rcosto1" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[rcosto2]"
                      dataType="ui1"
                      name="rcosto2" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[rcosto3]"
                      dataType="ui1"
                      name="rcosto3" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[rcosto4]"
                      dataType="ui1"
                      name="rcosto4" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_periodo_liquidacion]"
                      dataType="i4"
                      name="id_periodo_liquidacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_producto_original]"
                      dataType="i4"
                      name="id_producto_original" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_subproducto_original]"
                      dataType="i4"
                      name="id_subproducto_original" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_plan_producto_original]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="id_plan_producto_original" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[grilla_original]"
                      dataType="i4"
                      name="grilla_original" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_factura_A_E_rec]"
                      dataType="i4"
                      name="id_factura_A_E_rec" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_empresa_PE_rec]"
                      dataType="i4"
                      name="id_empresa_PE_rec" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_tipo_entidad_PE_rec]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="id_tipo_entidad_PE_rec" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_marca_PE_rec]"
                      dataType="i4"
                      name="id_marca_PE_rec" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_periodo_comprobante_liquidacion]"
                      dataType="i4"
                      name="id_periodo_comprobante_liquidacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_categoria_liquidacion]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="id_categoria_liquidacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_fuente_recaudacion]"
                      dataType="i4"
                      name="id_fuente_recaudacion" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_convenio]"
                      dataType="i4"
                      name="id_convenio" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_tipo_entidad_convenio]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="id_tipo_entidad_convenio" />
                    <externalMetadataColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[id_convenio_especial_rec]"
                      dataType="i4"
                      name="id_convenio_especial_rec" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Recaudacion convenios\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Recaudacion convenios\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Recaudacion convenios\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Recaudacion convenios.Paths[Data Conversion Output]"
              endId="Package\Recaudacion convenios\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\Recaudacion convenios\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Recaudacion convenios.Paths[Derived Column Output]"
              endId="Package\Recaudacion convenios\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Derived Column Output"
              startId="Package\Recaudacion convenios\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Recaudacion convenios.Paths[Excel Source Output]"
              endId="Package\Recaudacion convenios\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Recaudacion convenios\Excel Source.Outputs[Excel Source Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0FDC9DD4-0CA2-46C4-AA9C-D3E905BDD685}"
      DTS:From="Package\Borra las Tablas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Inserta origen 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{5B45A742-AE37-4B3F-8B14-98B2EEB65D28}"
      DTS:From="Package\Inserta origen 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Recaudacion convenios" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{BB29EC8F-26B6-4F1B-B5AE-F1440C158FD2}"
      DTS:From="Package\Actualiza datos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Prorrateo empresas" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{5CC677AE-0420-4011-BE58-248654C75C8A}"
      DTS:From="Package\Recaudacion convenios"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Actualiza datos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{CFC1D9AD-4ACA-4067-9E0D-9B5FF150BF31}"
      DTS:From="Package\Actualiza entidad"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Actualiza plan para las notas de credito" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{30CB2E53-7E1E-4719-903B-4A474DAF916E}"
      DTS:From="Package\Linea Empresa"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Actualiza Periodo M y Rango" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{25BE8A45-58A1-481C-9F10-C212AC5CB7F4}"
      DTS:From="Package\Actualiza plan para las notas de credito"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\Actualiza NPE" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{801AA46D-3CA0-447D-BDC4-3809A5AC1ED0}"
      DTS:From="Package\Prorrateo empresas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Inserta en H" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{A96BD5C1-0DF7-4030-A92F-7AA7B6873F73}"
      DTS:From="Package\Actualiza grilla"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Actualiza empresa" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{E973A67A-693C-44BE-9A7D-A51B3A317F1C}"
      DTS:From="Package\Actualiza empresa"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Actualiza costos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{47657ACF-7023-4F2F-8750-087B2F45C827}"
      DTS:From="Package\Actualiza costos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Actualiza planes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{3267D53C-C48E-4569-8494-C974662DA217}"
      DTS:From="Package\Actualiza planes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Actualiza entidad" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{63A3CAD9-83BA-4412-BFA4-3764EF67149D}"
      DTS:From="Package\Inserta en H"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Actualiza grilla" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{FCAE5ADE-6F1F-4583-98D0-7243183DA0AC}"
      DTS:From="Package\Actualiza NPE"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Linea Empresa" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{D07D841D-E964-45FC-AC70-77241DDD7A07}"
      DTS:From="Package\Actualiza Periodo M y Rango"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\Inserta la info en H_RECAUDACION_DETALLE" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="158,42"
          Id="Package\Actualiza costos"
          TopLeft="79.6733490566038,608.52893081761" />
        <NodeLayout
          Size="154,42"
          Id="Package\Actualiza datos"
          TopLeft="81.6733490566038,231.635849056604" />
        <NodeLayout
          Size="169,42"
          Id="Package\Actualiza empresa"
          TopLeft="74.1733490566038,533.150314465409" />
        <NodeLayout
          Size="163,42"
          Id="Package\Actualiza entidad"
          TopLeft="77.1733490566038,759.286163522013" />
        <NodeLayout
          Size="150,42"
          Id="Package\Actualiza grilla"
          TopLeft="83.6733490566038,457.771698113208" />
        <NodeLayout
          Size="149,42"
          Id="Package\Actualiza NPE"
          TopLeft="84.1733490566038,910.043396226415" />
        <NodeLayout
          Size="220,42"
          Id="Package\Actualiza Periodo M y Rango"
          TopLeft="48.6733490566038,1060.80062893082" />
        <NodeLayout
          Size="271,42"
          Id="Package\Actualiza plan para las notas de credito"
          TopLeft="23.1733490566038,834.664779874214" />
        <NodeLayout
          Size="159,42"
          Id="Package\Actualiza planes"
          TopLeft="79.1733490566038,683.907547169811" />
        <NodeLayout
          Size="159,42"
          Id="Package\Borra las Tablas"
          TopLeft="79.1733490566038,5.5" />
        <NodeLayout
          Size="139,42"
          Id="Package\Inserta en H"
          TopLeft="89.1733490566038,382.393081761006" />
        <NodeLayout
          Size="313,42"
          Id="Package\Inserta la info en H_RECAUDACION_DETALLE"
          TopLeft="2.17334905660377,1136.17924528302" />
        <NodeLayout
          Size="155,42"
          Id="Package\Inserta origen 1"
          TopLeft="81.1733490566038,80.8786163522012" />
        <NodeLayout
          Size="153,42"
          Id="Package\Linea Empresa"
          TopLeft="82.1733490566038,985.422012578616" />
        <NodeLayout
          Size="176,42"
          Id="Package\Prorrateo empresas"
          TopLeft="70.6733490566038,307.014465408805" />
        <NodeLayout
          Size="196,42"
          Id="Package\Recaudacion convenios"
          TopLeft="60.6733490566038,156.257232704402" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="158.673349056604,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="158.673349056604,122.878616352201">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522008"
              Start="0,0"
              End="0,25.8786163522008">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522008" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="158.673349056604,273.635849056604">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.378616352201"
              Start="0,0"
              End="0,25.878616352201">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.878616352201" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="158.673349056604,198.257232704402">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="158.673349056604,801.286163522013">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="158.673349056604,1027.42201257862">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522013"
              Start="0,0"
              End="0,25.8786163522013">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522013" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="158.673349056604,876.664779874214">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.673349056604,349.014465408805">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.378616352201"
              Start="0,0"
              End="0,25.878616352201">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.878616352201" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="158.673349056604,499.771698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.378616352201"
              Start="0,0"
              End="0,25.878616352201">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.878616352201" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="158.673349056604,575.150314465409">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="158.673349056604,650.52893081761">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="158.673349056604,725.907547169811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="158.673349056604,424.393081761006">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.378616352202"
              Start="0,0"
              End="0,25.878616352202">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.878616352202" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="158.673349056604,952.043396226415">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522012"
              Start="0,0"
              End="0,25.8786163522012">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522012" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="158.673349056604,1102.80062893082">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3786163522013"
              Start="0,0"
              End="0,25.8786163522013">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8786163522013" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Recaudacion convenios">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\Recaudacion convenios\OLE DB Destination"
          TopLeft="5.5,200.594339622642" />
        <NodeLayout
          Size="136,44"
          Id="Package\Recaudacion convenios\Excel Source"
          TopLeft="12.3679245283019,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Recaudacion convenios\Derived Column"
          TopLeft="269.160377358491,75.7264150943396" />
        <NodeLayout
          Size="136,44"
          Id="Package\Recaudacion convenios\Data Conversion"
          TopLeft="12.5566037735849,75.0849056603773" />
        <EdgeLayout
          Id="Package\Recaudacion convenios.Paths[Excel Source Output]"
          TopLeft="80.2547169811321,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.188679245282998,25.6603773584906"
              Start="0,0"
              End="0.188679245282998,18.1603773584906">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8301886792453" />
                  <mssgle:LineSegment
                    End="0.188679245282998,12.8301886792453" />
                  <mssgle:LineSegment
                    End="0.188679245282998,18.1603773584906" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recaudacion convenios.Paths[Derived Column Output]"
          TopLeft="337.047169811321,119.650943396226">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-263.660377358491,80.9433962264151"
              Start="0,0"
              End="-263.660377358491,73.4433962264151">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.4528301886793" />
                  <mssgle:LineSegment
                    End="-263.660377358491,40.4528301886793" />
                  <mssgle:LineSegment
                    End="-263.660377358491,73.4433962264151" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Recaudacion convenios.Paths[Data Conversion Output]"
          TopLeft="148.330188679245,97.0471698113208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="120.830188679245,0.641509433962256"
              Start="0,0"
              End="113.330188679245,0.641509433962256">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="60.4150943396226,0" />
                  <mssgle:LineSegment
                    End="60.4150943396226,0.641509433962256" />
                  <mssgle:LineSegment
                    End="113.330188679245,0.641509433962256" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Recaudacion convenios\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Recaudacion convenios\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>