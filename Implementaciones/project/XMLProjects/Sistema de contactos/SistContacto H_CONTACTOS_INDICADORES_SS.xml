<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/3/2017 8:43:13 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\nborio"
  DTS:DTSID="{27996FB1-0800-4D2E-8403-72ABDB4D0074}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="SistContacto H_CONTACTOS_INDICADORES_SS"
  DTS:PackageType="5"
  DTS:VersionBuild="348"
  DTS:VersionGUID="{941AE0C3-0F43-4CD4-B766-8CD4F5C71FF5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{BD770F5A-8C4A-44D2-91CD-D10AF0673916}"
      DTS:ObjectName="SSIS log provider for SQL Server1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11B3D15F-1CBA-4EB5-B4C8-3D9A98280E3D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Fecha">
      <DTS:VariableValue
        DTS:DataType="7">8/3/2017 9:26:19 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C4F2042-3C06-4F8F-8B77-CF6F97C17752}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Periodo">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{BD770F5A-8C4A-44D2-91CD-D10AF0673916}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{198D22BA-5E18-44D6-A638-2D3DE3A10627}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @maxfecha datetime&#xA;SET @maxfecha = '2017-06-01 00:00:00.000'--(select MAX(fecha_ingreso) from AUX_H_CONTACTOS_INDICADORES_DETALLE)&#xA;&#xA;&#xA;SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;&#xA;&#xA;&#xA;&#xA;insert into  consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas &#xA;SELECT dw_salud.dbo.DevuelvePeriodo(p.fecha_ingreso) AS id_periodo, &#xA;       p.id_caso AS id_contacto, &#xA;&#x9;   T.codigo as id_tipo_caso_contacto,&#xA;&#x9;   c.id_tipo_caso_categoria as id_codigo_clasificacion_ampliado,&#xA;&#x9;   null as id_codigo_clasificacion,&#xA;&#x9;   C.id_caso_via_acceso as id_via_acceso,&#xA;&#x9;   P.id_unidad_organizacional ,-- buscar el minimo&#xA;&#x9;   P.id_usuario, -- buscar el minimo usuario&#xA;&#x9;   0 as id_usuario_supervisor,&#xA;&#x9;   C.tipo_cuenta, -- id_tipo_conacto,&#xA;&#x9;   p.fecha_inicio as fecha_inicio_contacto,&#xA;&#x9;   null as fecha_fin_contacto,&#xA;&#x9;   null as fecha_carga_contacto,&#xA;&#x9;   isnull(p.desvio_mal_clasificado,c.mal_clasificado),&#xA;&#x9;&#x9;SUBSTRING(c.mal_clasificado_comentario,1,70),&#xA;&#x9;&#x9;isnull(p.desvio_fecha,c.mal_clasificado_fecha),&#xA;&#x9;&#x9;isnull(p.id_usuario,c.mal_clasificado_nombre_usuario),&#xA;&#x9;   p.id_unidad_organizacional AS id_unidad_organizacional_detalle,&#xA;&#x9;   0 as id_unidad_organizacional_detalle_anterior, &#xA;&#x9;   p.id_usuario,p.fecha_ingreso, p.fecha_fin, &#xA;&#x9;   p.tiempo_total AS tiempo_minutos_detalle,&#xA;&#x9;   0 as nro_orden_detalle,&#xA;&#x9;   0 as id_periodo_ingreso_unidad,&#xA;&#x9;   p.plazo_vencido  as plazo_vencido_unidad_organizacional,&#xA;&#x9;   c.plazo_vencido as plazo_vencido_contacto,&#xA;&#x9;   p.id_usuario as id_usuario_carga_contacto_detalle,&#xA;&#x9;   null as id_usuario_carga_contacto_anterior,&#xA;&#x9;   p.id_actividad as id_actividad,&#xA;&#x9;   p.resultado as id_resultado,&#xA;&#x9;   case when cuil_cuit_cuenta = '' then '0' else cuil_cuit_cuenta end as cuit_proveedor,&#xA;&#x9;   0 as id_categoria_caso,&#xA;&#x9;   case when c.estado is not null then c.estado else 999 end,&#xA; &#x9;case when p.estado is not null then p.estado else 999 end,&#xA;&#x9; c.id_tipo_caso,&#xA;&#x9;isnull(p.desvio_informacion_incompleta,0),&#xA;&#x9;isnull(p.desvio_derivacion_incompleta,0),&#xA;&#x9;isnull(p.desvio_correspondia_resolucion_primer_contacto,0),&#xA;&#x9;isnull(uo.id_direccion,0),&#xA;&#x9;isnull(uo.id_gerencia,0),&#xA;&#x9;fecha_asignacion,&#xA;&#x9;id_cuenta,&#xA;&#x9;c.id_tipo_caso_categoria&#x9;&#xA;FROM contactos.callcenter_gestion.dbo.paso p   with (nolock)      inner join contactos.callcenter_gestion.dbo.caso c with (nolock) on p.id_caso = c.id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;        INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T with (nolock)  ON (C.id_tipo_caso=T.id)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;        inner join contactos.callcenter_gestion.[dbo].[unidad_organizacional] uo on uo.id = p.id_unidad_organizacional&#xA;WHERE  p.fecha_ingreso &gt; @maxfecha&#xA;&#xA;--SE TOMA UN CONTACTO DE INICIO, ES PRIMER CONTACTO QUE APARECE EN EL PERIODO 201706 QUE ES NUESTRO INICIO&#xA;delete from consultas_dw.dbo.aux_H_CONTACTOS_INDICADORES_SS_pruebas where id_contacto &lt; 12584809&#xA;&#xA;&#xA;update consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas &#xA;set id_categoria_caso = id_caso_categoria&#xA;from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas  h inner join CONTACTOS.callcenter_gestion.dbo.CASO C with (nolock) on c.id = h.id_contacto&#xA;INNER JOIN CONTACTOS.callcenter_gestion.dbo.PASO P with (nolock) ON (C.id=P.id_caso and C.id_paso_inicial=P.id)&#xA;INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T with (nolock) ON (C.id_tipo_caso=T.id)&#xA;&#xA;--Realizo particion por id_contacto (ya que necesito que para un contacto se cuenten todos los pasos) y ordeno por fecha ( ya que necesito&#xA;---que todos los pasos esten ordenados por fecha)&#xA;---Cargo en una temporal y despues lo paso a la tabla&#xA;--drop table #temporal_detalle&#xA;--if exists (SELECT * FROM sysobjects WHERE name = '#temporal_detalle') begin drop table #temporal_detalle end &#xA;SELECT id_contacto, fecha_ingreso,id_unidad_organizacional_detalle, &#xA;&#x9;&#x9;ROW_NUMBER() OVER(PARTITION BY id_contacto ORDER BY fecha_ingreso ASC) AS orden -- estaba con fecha inicio se cambio a fecha_ingreso&#xA;INTO #temporal_detalle&#xA;FROM consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas  C&#xA;ORDER BY id_contacto, c.fecha_ingreso ASC&#xA;&#xA;UPDATE consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas &#xA;SET nro_orden_detalle = orden&#xA;FROM consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas  c INNER JOIN #temporal_detalle t on c.id_contacto =  t.id_contacto&#xA;AND c.fecha_ingreso = t.fecha_ingreso&#xA;--AND c.fecha_inicio = t.fecha_inicio version anterior&#xA;&#xA;--- calcula id_periodo_ingreso&#xA;update consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas &#xA;set id_periodo_ingreso_unidad = dw_salud.dbo.DevuelvePeriodo(fecha_ingreso)&#xA;&#xA;-- Agrega la columna de unidad organizacional anterior&#xA;-- Si existe la temporal la elimina &#xA;--drop table #t_uni_org_ant &#xA;if exists (SELECT * FROM sysobjects WHERE name = '#t_uni_org_ant ') begin drop table #t_uni_org_ant end &#xA;select a.id_periodo, a.id_contacto,a.fecha_ingreso, A.id_unidad_organizacional_detalle,a.nro_orden_detalle,b.id_unidad_organizacional_detalle as id_unidad_organizacional_detalle_ant&#xA;into #t_uni_org_ant&#xA;--select a.id_periodo, a.id_contacto,a.fecha_ingreso, A.id_unidad_organizacional_detalle,a.nro_orden_detalle,b.id_unidad_organizacional_detalle as id_unidad_organizacional_detalle_ant&#xA;from (SELECT id_periodo, id_contacto, id_unidad_organizacional_detalle,nro_orden_detalle, fecha_ingreso, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas ) a&#xA;left outer join (SELECT id_periodo, id_contacto, id_unidad_organizacional_detalle, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas ) b&#xA;on A.fila = b.fila - 1 and a.id_contacto = b.id_contacto&#xA;--WHERE a.id_contacto &gt;  14877876 &#xA;order by a.id_contacto desc , a.nro_orden_detalle  asc&#xA;&#xA;&#xA;update consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas  &#xA;set id_unidad_organizacional_detalle_anterior = te.id_unidad_organizacional_detalle_ant&#xA;from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas   d inner join #t_uni_org_ant te on d.id_contacto = te.id_contacto and d.nro_orden_detalle = te.nro_orden_detalle&#xA;&#xA;&#x9;&#xA;&#xA;select a.id_periodo, a.id_contacto,a.fecha_ingreso, A.id_usuario_carga_contacto,a.nro_orden_detalle,&#xA;b.id_usuario_carga_contacto as id_usuario_carga_contacto_anterior&#xA;into #t_usuario_org_ant&#xA;from (SELECT id_periodo, id_contacto, id_usuario_carga_contacto,nro_orden_detalle, fecha_ingreso, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas ) a&#xA;left outer join (SELECT id_periodo, id_contacto, id_usuario_carga_contacto, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas ) b&#xA;on A.fila = b.fila - 1 and a.id_contacto = b.id_contacto&#xA;order by a.id_contacto desc , a.nro_orden_detalle  asc&#xA;&#xA;update consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas  &#xA;set id_usuario_carga_contacto_anterior = te.id_usuario_carga_contacto_anterior&#xA;from consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas   d  with (nolock)    inner join #t_usuario_org_ant te on d.id_contacto = te.id_contacto and d.nro_orden_detalle = te.nro_orden_detalle&#xA;&#xA;&#xA;UPDATE consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas &#xA;SET id_codigo_clasificacion = D.codigo&#xA;FROM consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas  C with (nolock)  INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO_CATEGORIA D with (nolock)  ON (C.id_codigo_clasificacion_ampliado= D.id)&#xA;&#xA;drop table #t_uni_org_ant&#xA;drop table #temporal_detalle&#xA;drop table #t_usuario_org_ant" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Fecha"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{e33e909a-9434-4c3d-9096-c7c849125a34}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="&#xA;DECLARE @maxfecha datetime&#xA;SET @maxfecha = (select min(id_fecha) from D_FECHA &#xA;where id_periodo = dbo.PeriodosAnteriores(dbo.DevuelvePeriodo(getdate()-1),19))&#xA;&#xA;declare @minfecha datetime = (select min(id_fecha) from D_FECHA &#xA;where id_periodo = dbo.PeriodosAnteriores(dbo.DevuelvePeriodo(getdate()-1),12))&#xA;&#xA;declare @min_contacto int = (select min(id_contacto) from H_CONTACTOS_INDICADORES_SS where id_periodo = dbo.DevuelvePeriodo(@maxfecha))&#xA;&#xA;SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;&#xA;&#xA;&#xA;insert into  AUX_H_CONTACTOS_INDICADORES_SS&#xA;SELECT dw_salud.dbo.DevuelvePeriodo(p.fecha_ingreso) AS id_periodo, &#xA;       p.id_caso AS id_contacto, &#xA;&#x9;   T.codigo as id_tipo_caso_contacto,&#xA;&#x9;   c.id_tipo_caso_categoria as id_codigo_clasificacion_ampliado,&#xA;&#x9;   null as id_codigo_clasificacion,&#xA;&#x9;   C.id_caso_via_acceso as id_via_acceso,&#xA;&#x9;   P.id_unidad_organizacional ,-- buscar el minimo&#xA;&#x9;   P.id_usuario, -- buscar el minimo usuario&#xA;&#x9;   0 as id_usuario_supervisor,&#xA;&#x9;   C.tipo_cuenta, -- id_tipo_conacto,&#xA;&#x9;   p.fecha_inicio as fecha_inicio_contacto,&#xA;&#x9;   null as fecha_fin_contacto,&#xA;&#x9;   null as fecha_carga_contacto,&#xA;&#x9;   isnull(p.desvio_mal_clasificado,c.mal_clasificado),&#xA;&#x9;&#x9;SUBSTRING(c.mal_clasificado_comentario,1,70),&#xA;&#x9;&#x9;isnull(p.desvio_fecha,c.mal_clasificado_fecha),&#xA;&#x9;&#x9;isnull(p.id_usuario,c.mal_clasificado_nombre_usuario),&#xA;&#x9;   p.id_unidad_organizacional AS id_unidad_organizacional_detalle,&#xA;&#x9;   0 as id_unidad_organizacional_detalle_anterior, &#xA;&#x9;   p.id_usuario,p.fecha_ingreso, p.fecha_fin, &#xA;&#x9;   p.tiempo_total AS tiempo_minutos_detalle,&#xA;&#x9;   0 as nro_orden_detalle,&#xA;&#x9;   0 as id_periodo_ingreso_unidad,&#xA;&#x9;   p.plazo_vencido  as plazo_vencido_unidad_organizacional,&#xA;&#x9;   c.plazo_vencido as plazo_vencido_contacto,&#xA;&#x9;   p.id_usuario as id_usuario_carga_contacto_detalle,&#xA;&#x9;   null as id_usuario_carga_contacto_anterior,&#xA;&#x9;   p.id_actividad as id_actividad,&#xA;&#x9;   p.resultado as id_resultado,&#xA;&#x9;   case when cuil_cuit_cuenta = '' then '0' else cuil_cuit_cuenta end as cuit_proveedor,&#xA;&#x9;   0 as id_categoria_caso,&#xA;&#x9;   case when c.estado is not null then c.estado else 999 end,&#xA; &#x9;case when p.estado is not null then p.estado else 999 end,&#xA;&#x9; c.id_tipo_caso,&#xA;&#x9;isnull(p.desvio_informacion_incompleta,0),&#xA;&#x9;isnull(p.desvio_derivacion_incompleta,0),&#xA;&#x9;isnull(p.desvio_correspondia_resolucion_primer_contacto,0),&#xA;&#x9;isnull(uo.id_direccion,0),&#xA;&#x9;isnull(uo.id_gerencia,0),&#xA;&#x9;fecha_asignacion,&#xA;&#x9;id_cuenta,&#xA;&#x9;c.id_tipo_caso_categoria&#x9;&#xA;FROM contactos.callcenter_gestion.dbo.paso p   with (nolock)      inner join contactos.callcenter_gestion.dbo.caso c with (nolock) on p.id_caso = c.id&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;        INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T with (nolock)  ON (C.id_tipo_caso=T.id)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;        inner join contactos.callcenter_gestion.[dbo].[unidad_organizacional] uo on uo.id = p.id_unidad_organizacional&#xA;WHERE  p.fecha_ingreso &gt; @maxfecha&#xA;&#xA;--SE TOMA UN CONTACTO DE INICIO, ES PRIMER CONTACTO QUE APARECE EN EL PERIODO 201706 QUE ES NUESTRO INICIO&#xA;delete from AUX_H_CONTACTOS_INDICADORES_SS where id_contacto &lt; @min_contacto&#xA;&#xA;&#xA;--Realizo particion por id_contacto (ya que necesito que para un contacto se cuenten todos los pasos) y ordeno por fecha ( ya que necesito&#xA;---que todos los pasos esten ordenados por fecha)&#xA;---Cargo en una temporal y despues lo paso a la tabla&#xA;--drop table #temporal_detalle&#xA;--if exists (SELECT * FROM sysobjects WHERE name = '#temporal_detalle') begin drop table #temporal_detalle end &#xA;SELECT id_contacto, fecha_ingreso,id_unidad_organizacional_detalle, &#xA;&#x9;&#x9;ROW_NUMBER() OVER(PARTITION BY id_contacto ORDER BY fecha_ingreso ASC) AS orden -- estaba con fecha inicio se cambio a fecha_ingreso&#xA;INTO #temporal_detalle&#xA;FROM AUX_H_CONTACTOS_INDICADORES_SS  C&#xA;ORDER BY id_contacto, c.fecha_ingreso ASC&#xA;&#xA;UPDATE AUX_H_CONTACTOS_INDICADORES_SS &#xA;SET nro_orden_detalle = orden&#xA;FROM AUX_H_CONTACTOS_INDICADORES_SS c INNER JOIN #temporal_detalle t on c.id_contacto =  t.id_contacto&#xA;AND c.fecha_ingreso = t.fecha_ingreso&#xA;--AND c.fecha_inicio = t.fecha_inicio version anterior&#xA;&#xA;select distinct id_contacto into #contactos from AUX_H_CONTACTOS_INDICADORES_SS&#xA;where nro_orden_detalle = 1 and fecha_ingreso &lt; @minfecha&#xA;&#xA;delete from AUX_H_CONTACTOS_INDICADORES_SS&#xA;where id_contacto in (select id_contacto from #contactos)&#xA;&#xA;&#xA;update AUX_H_CONTACTOS_INDICADORES_SS&#xA;set id_categoria_caso = id_caso_categoria&#xA;from AUX_H_CONTACTOS_INDICADORES_SS h inner join CONTACTOS.callcenter_gestion.dbo.CASO C with (nolock) on c.id = h.id_contacto&#xA;INNER JOIN CONTACTOS.callcenter_gestion.dbo.PASO P with (nolock) ON (C.id=P.id_caso and C.id_paso_inicial=P.id)&#xA;INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T with (nolock) ON (C.id_tipo_caso=T.id)&#xA;&#xA;--- calcula id_periodo_ingreso&#xA;update AUX_H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_ingreso_unidad = dw_salud.dbo.DevuelvePeriodo(fecha_ingreso)&#xA;&#xA;-- Agrega la columna de unidad organizacional anterior&#xA;-- Si existe la temporal la elimina &#xA;--drop table #t_uni_org_ant &#xA;if exists (SELECT * FROM sysobjects WHERE name = '#t_uni_org_ant ') begin drop table #t_uni_org_ant end &#xA;select a.id_periodo, a.id_contacto,a.fecha_ingreso, A.id_unidad_organizacional_detalle,a.nro_orden_detalle,b.id_unidad_organizacional_detalle as id_unidad_organizacional_detalle_ant&#xA;into #t_uni_org_ant&#xA;--select a.id_periodo, a.id_contacto,a.fecha_ingreso, A.id_unidad_organizacional_detalle,a.nro_orden_detalle,b.id_unidad_organizacional_detalle as id_unidad_organizacional_detalle_ant&#xA;from (SELECT id_periodo, id_contacto, id_unidad_organizacional_detalle,nro_orden_detalle, fecha_ingreso, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from AUX_H_CONTACTOS_INDICADORES_SS) a&#xA;left outer join (SELECT id_periodo, id_contacto, id_unidad_organizacional_detalle, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from AUX_H_CONTACTOS_INDICADORES_SS) b&#xA;on A.fila = b.fila - 1 and a.id_contacto = b.id_contacto&#xA;--WHERE a.id_contacto &gt;  14877876 &#xA;order by a.id_contacto desc , a.nro_orden_detalle  asc&#xA;&#xA;&#xA;update AUX_H_CONTACTOS_INDICADORES_SS &#xA;set id_unidad_organizacional_detalle_anterior = te.id_unidad_organizacional_detalle_ant&#xA;from AUX_H_CONTACTOS_INDICADORES_SS  d inner join #t_uni_org_ant te on d.id_contacto = te.id_contacto and d.nro_orden_detalle = te.nro_orden_detalle&#xA;&#xA;&#x9;&#xA;&#xA;select a.id_periodo, a.id_contacto,a.fecha_ingreso, A.id_usuario_carga_contacto,a.nro_orden_detalle,&#xA;b.id_usuario_carga_contacto as id_usuario_carga_contacto_anterior&#xA;into #t_usuario_org_ant&#xA;from (SELECT id_periodo, id_contacto, id_usuario_carga_contacto,nro_orden_detalle, fecha_ingreso, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from AUX_H_CONTACTOS_INDICADORES_SS) a&#xA;left outer join (SELECT id_periodo, id_contacto, id_usuario_carga_contacto, ROW_NUMBER() OVER (partition by id_contacto ORDER BY nro_orden_detalle desc) as FILA from AUX_H_CONTACTOS_INDICADORES_SS) b&#xA;on A.fila = b.fila - 1 and a.id_contacto = b.id_contacto&#xA;order by a.id_contacto desc , a.nro_orden_detalle  asc&#xA;&#xA;update AUX_H_CONTACTOS_INDICADORES_SS &#xA;set id_usuario_carga_contacto_anterior = te.id_usuario_carga_contacto_anterior&#xA;from AUX_H_CONTACTOS_INDICADORES_SS  d  with (nolock)    inner join #t_usuario_org_ant te on d.id_contacto = te.id_contacto and d.nro_orden_detalle = te.nro_orden_detalle&#xA;&#xA;&#xA;UPDATE AUX_H_CONTACTOS_INDICADORES_SS&#xA;SET id_codigo_clasificacion = D.codigo&#xA;FROM AUX_H_CONTACTOS_INDICADORES_SS C with (nolock)  INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO_CATEGORIA D with (nolock)  ON (C.id_codigo_clasificacion_ampliado= D.id)&#xA;&#xA;drop table #t_uni_org_ant&#xA;drop table #temporal_detalle&#xA;drop table #t_usuario_org_ant" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Fecha"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza D_PERIODO y D_MES"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{57453912-FC65-4229-90CC-2524D4587682}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza D_PERIODO y D_MES"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="-- ACTUALIZA D_PERIODO para que se muestren correctamente los ultimos 36 meses en los tableros correspondiente&#xA;-- Se muestra hasta el ultimo periodo cerrado&#xA;&#xA;declare @id_periodo_max int = (select dbo.periodosanteriores(max(id_periodo),2)from H_CONTACTOS_INDICADORES_SS)&#xA;declare @id_periodo_12m int = dbo.periodosanteriores(@id_periodo_max,12)&#xA;declare @id_periodo_24m int = dbo.periodosanteriores(@id_periodo_max,24)&#xA;declare @id_periodo_36m int = dbo.periodosanteriores(@id_periodo_max,36)&#xA;&#xA;update d_periodo&#xA;set id_periodo_anual_contactos = 3&#xA;where id_periodo between @id_periodo_12m and @id_periodo_max &#xA; &#xA; update d_periodo&#xA;set id_periodo_anual_contactos = 2&#xA;where id_periodo between @id_periodo_24m and dbo.PeriodosAnteriores(@id_periodo_12m ,2)&#xA; &#xA; update d_periodo&#xA;set id_periodo_anual_contactos = 1&#xA;where id_periodo between @id_periodo_36m and dbo.PeriodosAnteriores(@id_periodo_24m,2)&#xA;&#xA;&#xA; update d_periodo&#xA;set id_periodo_anual_contactos = 0&#xA;where id_periodo &gt; @id_periodo_max or  id_periodo &lt; @id_periodo_36m &#xA;&#xA;-- Se muestra cual es el mes que tiene que aparecer como ultimo (el ultimo cerrado) &#xA;declare @id_mes int = case when (DATEPART(mm,getdate())) -1 = 0 then 12 else (DATEPART(mm,getdate())) - 1 end -- mes posicion 12&#xA;&#xA;update d_mes &#xA;set id_orden_contactos =  case when id_mes = @id_mes then 12 -- Para el ultimo mes cerrado&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when  id_mes &gt; @id_mes then id_mes - @id_mes --para los meses del año anteriores al ultimo mes cerrado&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when id_mes &lt; @id_mes  then 12-  (@id_mes-id_mes) end --para los meses del año posteriores al ultimo mes cerrado&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_CONTACTOS_INDICADORES_SS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{7D521B53-D3A4-49C5-BA17-1F2E4630C9AC}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_CONTACTOS_INDICADORES_SS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="&#xA;-- SEGUN LOS DIAS VENCIDOS A NIVEL CONTACTO GENERAL SE UBICA EN EL RANGO CORRESPONDIENTE&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_rango_dias_vencidos = case when cant_dias_vencido_contacto_general between 0 and 1 then 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when cant_dias_vencido_contacto_general between 2 and 3 then 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when cant_dias_vencido_contacto_general between 3 and 8 then 3&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when cant_dias_vencido_contacto_general between 9 and 17 then 4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when cant_dias_vencido_contacto_general &gt;= 18 then 5 end &#xA;&#xA;&#xA;update  h_contactos_indicadores_ss&#xA;set id_marca_vencimiento_de_unidad = 1&#xA;where fecha_fin_paso_contacto &gt; fecha_vencimiento_unidad_organizacional&#xA;&#xA;&#xA;&#xA;--Actualiza cant_minutos_planificado segun el id_codigo_clasificacion del contacto&#xA;&#xA;UPDATE H_CONTACTOS_INDICADORES_SS&#xA;SET cant_minutos_planificado = tc.tiempo_maximo&#xA;from H_CONTACTOS_INDICADORES_SS hc&#xA;inner join CONTACTOS.callcenter_gestion.dbo.tipo_caso_categoria tc &#xA;on hc.id_tipo_caso = tc.id_tipo_caso and id_codigo_clasificacion = codigo collate SQL_Latin1_General_CP850_CI_AI&#xA;&#xA;&#xA;--ACTUALIZA D_PERIODO&#xA;update D_PERIODO&#xA;set id_periodo_anual_contactos = 2&#xA;from D_PERIODO where id_periodo &#xA;in (select top 12  dbo.periodosanteriores(id_periodo,13) from H_CONTACTOS_INDICADORES_SS group by id_periodo order by id_periodo desc)&#xA;&#xA;update D_PERIODO&#xA;set id_periodo_anual_contactos = 1&#xA;from D_PERIODO d where id_periodo &#xA;in (select top 36 id_periodo from H_CONTACTOS_INDICADORES_SS group by id_periodo)&#xA;and id_periodo_anual_contactos not in (2,3) &#xA;&#xA;update D_PERIODO&#xA;set id_periodo_anual_contactos = 0&#xA;from D_PERIODO&#xA;where id_periodo not in &#xA;(select top 36 id_periodo from D_PERIODO where id_periodo_anual_contactos &lt;&gt; 0  order by id_periodo desc)&#xA;&#xA;&#xA;&#xA;-- BUSCA EL PERIODO MAXIMO DE SISTEMA DE CONTACTOS, SI EL PRIMER MES DEL ORDEN ES IGUAL AL SIGUIENTE DEL PERIODO MAXIMO NO ACTUALIZA DE LO CONTRARIO MUEVE UN MES&#xA;declare @id_mes_contacto int = cast(right(cast((select max(id_periodo) from H_CONTACTOS_INDICADORES_SS)as varchar(6)),2) as int)&#xA;declare @id_mes_orden int = (select iD_MES from D_MES where id_orden_contactos = 1)&#xA;&#xA;set @id_mes_contacto = case when @id_mes_contacto &lt;= 11 then @id_mes_contacto + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when @id_mes_contacto = 12 then 1 end &#xA;&#xA;--ACTUALIZA D_MES&#xA;update D_MES&#xA;set id_orden_contactos = case when id_orden_contactos &lt;= 11 then id_orden_contactos + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_orden_contactos = 12 then 1 end&#xA; where @id_mes_orden &lt;&gt; @id_mes_contacto&#xA;&#xA;&#xA;&#xA;--CARGA LA DIFERENCIA DE MINUTOS HÁBILES  ENTRE LAS DIFERENTES FECHAS&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_fingreso_fcarga&#x9;= case when fecha_carga_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then dbo.segundoshabiles(fecha_carga_contacto,fecha_ingreso_paso_contacto) / 60 else 0 end,&#xA;diff_min_finicio_fcarga&#x9;= case when fecha_carga_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_inicio_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then dbo.segundoshabiles(fecha_carga_contacto,fecha_inicio_paso_contacto) / 60 else 0 end ,&#xA;diff_min_finicio_fingreso =case when fecha_ingreso_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_inicio_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then dbo.segundoshabiles(fecha_ingreso_paso_contacto,fecha_inicio_paso_contacto)/60 else 0 end,&#xA;diff_min_finicio_fasignacion =case when fecha_asignacion_paso_contacto&lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_inicio_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then dbo.segundoshabiles(fecha_asignacion_paso_contacto,fecha_inicio_paso_contacto)/60 else 0 end&#xA;&#xA;where id_unidad_organizacional_detalle_contacto = 400&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_fingreso_fcarga&#x9;=0 where&#xA;fecha_carga_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_ingreso_paso_contacto = '1900-01-01 00:00:00.000' &#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_finicio_fcarga&#x9;=0 where&#xA;fecha_carga_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_inicio_paso_contacto = '1900-01-01 00:00:00.000'&#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_finicio_fingreso&#x9;=0 where&#xA;fecha_inicio_paso_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_ingreso_paso_contacto = '1900-01-01 00:00:00.000'&#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_finicio_fasignacion  =0 where&#xA;fecha_inicio_paso_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_asignacion_paso_contacto = '1900-01-01 00:00:00.000'&#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;&#xA;&#xA;--- si hay un peridoo nuevo se carga en los objetivos&#xA; declare @periodo int = (select max(id_periodo) from H_CONTACTOS_INDICADORES_SS)&#xA; if @periodo not in (select distinct id_periodo from H_OBJETIVOS_SISTEMA_CONTACTOS)&#xA; begin&#xA; insert into H_OBJETIVOS_SISTEMA_CONTACTOS&#xA;select @periodo,id_unidad_organizacional_detalle_contacto,reingresos,&#xA;promedio_min_tiempo_resol,cant_contactos_obj,cant_reingresos,cant_minutos_objetivo&#xA;from H_OBJETIVOS_SISTEMA_CONTACTOS where id_periodo = dbo.periodosanteriores(@periodo,2)&#xA;end &#xA;&#xA;&#xA;update D_CODIGOS_CLASIFICACIONES &#xA;set de_codigo_clasificacion = 'Solicitud reintegro odontología'&#xA;where id_codigo_clasificacion = '45.9'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_CONTACTOS_INDICADORES_SS 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{38da3ead-3259-4663-88e2-22542a9b69b3}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_CONTACTOS_INDICADORES_SS 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="declare @periodo int = (select min(id_periodo) from AUX_H_CONTACTOS_INDICADORES_SS)&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;-- CALCULA LA MARCA DE FINALIZACION PARA LAS UNIDADES QUE UTILIZAN PERIODO DE PRODUCTIVIDAD&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_finalizacion_paso_contacto_productividad =  case when fecha_fin_paso_contacto ='1900-01-01 00:00:00.000' then 3 -- Pendiente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when id_periodo_productividad = id_periodo_fin_paso_contacto_productividad then 1 -- Finalizado mismo periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when id_periodo_productividad &lt; id_periodo_fin_paso_contacto_productividad then 2 end --Finalizado periodos posteriores&#xA;where id_unidad_organizacional_detalle_contacto in (188, 458,161)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- Calculo la cantidad de minutos total de cada contacto&#xA;select id_contacto, sum(tiempo_minutos_detalle) as tiempo_total_minutos &#xA;into #temp_total_minutos from H_CONTACTOS_INDICADORES_SS  &#xA;group by id_contacto&#xA;-- Setea por cada contacto el tiempo total en minutos &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set tiempo_minutos_detalle_total = tiempo_total_minutos&#xA;from H_CONTACTOS_INDICADORES_SS C inner join #temp_total_minutos t on t.id_contacto = c.id_contacto&#xA;where  id_periodo_alta_contacto &gt;= @periodo&#xA;drop table #temp_total_minutos&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set [id_marca_mal_clasificado] = 0,&#xA;obs_mal_clasificado = '',&#xA;[fecha_marca_mal_clasificado] = '1900-01-01 00:00:00.000',&#xA;[usuario_marca_mal_clasificado] = 'F/D'&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;where [id_marca_mal_clasificado] is null and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;-- SEGUN LOS DIAS VENCIDOS A NIVEL CONTACTO GENERAL SE UBICA EN EL RANGO CORRESPONDIENTE&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_rango_dias_vencidos = case when cant_dias_vencido_contacto_general between 0 and 1 then 1&#xA;          when cant_dias_vencido_contacto_general between 2 and 3 then 2&#xA;          when cant_dias_vencido_contacto_general between 3 and 8 then 3&#xA;          when cant_dias_vencido_contacto_general between 9 and 17 then 4&#xA;          when cant_dias_vencido_contacto_general &gt;= 18 then 5 end &#xA;&#x9;&#x9;  where   id_periodo_inicio_contacto &gt;= @periodo&#xA;&#xA;update  h_contactos_indicadores_ss&#xA;set id_marca_vencimiento_de_unidad = 1&#xA;where fecha_fin_paso_contacto &gt; fecha_vencimiento_unidad_organizacional&#xA;and   id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;--Actualiza cant_minutos_planificado segun el id_codigo_clasificacion del contacto&#xA;&#xA;UPDATE H_CONTACTOS_INDICADORES_SS&#xA;SET cant_minutos_planificado = tc.tiempo_maximo&#xA;from H_CONTACTOS_INDICADORES_SS hc&#xA;inner join CONTACTOS.callcenter_gestion.dbo.tipo_caso_categoria tc &#xA;on hc.id_tipo_caso = tc.id_tipo_caso and id_codigo_clasificacion = codigo collate SQL_Latin1_General_CP850_CI_AI&#xA;where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;--ACTUALIZA D_PERIODO&#xA;update D_PERIODO&#xA;set id_periodo_anual_contactos = 2&#xA;from D_PERIODO where id_periodo &#xA;in (select top 12  dbo.periodosanteriores(id_periodo,13) from H_CONTACTOS_INDICADORES_SS group by id_periodo order by id_periodo desc)&#xA;&#xA;update D_PERIODO&#xA;set id_periodo_anual_contactos = 1&#xA;from D_PERIODO d where id_periodo &#xA;in (select top 36 id_periodo from H_CONTACTOS_INDICADORES_SS group by id_periodo)&#xA;and id_periodo_anual_contactos not in (2,3) &#xA;&#xA;update D_PERIODO&#xA;set id_periodo_anual_contactos = 0&#xA;from D_PERIODO&#xA;where id_periodo not in &#xA;(select top 36 id_periodo from D_PERIODO where id_periodo_anual_contactos &lt;&gt; 0  order by id_periodo desc)&#xA;&#xA;&#xA;&#xA;-- BUSCA EL PERIODO MAXIMO DE SISTEMA DE CONTACTOS, SI EL PRIMER MES DEL ORDEN ES IGUAL AL SIGUIENTE DEL PERIODO MAXIMO NO ACTUALIZA DE LO CONTRARIO MUEVE UN MES&#xA;declare @id_mes_contacto int = cast(right(cast((select max(id_periodo) from H_CONTACTOS_INDICADORES_SS)as varchar(6)),2) as int)&#xA;declare @id_mes_orden int = (select iD_MES from D_MES where id_orden_contactos = 1)&#xA;&#xA;set @id_mes_contacto = case when @id_mes_contacto &lt;= 11 then @id_mes_contacto + 1&#xA;         when @id_mes_contacto = 12 then 1 end &#xA;&#xA;--ACTUALIZA D_MES&#xA;update D_MES&#xA;set id_orden_contactos = case when id_orden_contactos &lt;= 11 then id_orden_contactos + 1&#xA;         when id_orden_contactos = 12 then 1 end&#xA; where @id_mes_orden &lt;&gt; @id_mes_contacto&#xA;&#xA;&#xA;&#xA;--CARGA LA DIFERENCIA DE MINUTOS HÁBILES  ENTRE LAS DIFERENTES FECHAS&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_fingreso_fcarga = case when fecha_carga_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;          and fecha_ingreso_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;         then dbo.segundoshabiles(fecha_carga_contacto,fecha_ingreso_paso_contacto) / 60 else 0 end,&#xA;diff_min_finicio_fcarga = case when fecha_carga_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;          and fecha_inicio_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;         then dbo.segundoshabiles(fecha_carga_contacto,fecha_inicio_paso_contacto) / 60 else 0 end ,&#xA;diff_min_finicio_fingreso =case when fecha_ingreso_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;          and fecha_inicio_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;         then dbo.segundoshabiles(fecha_ingreso_paso_contacto,fecha_inicio_paso_contacto)/60 else 0 end,&#xA;diff_min_finicio_fasignacion =case when fecha_asignacion_paso_contacto&lt;&gt; '1900-01-01 00:00:00.000'  &#xA;          and fecha_inicio_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  &#xA;         then dbo.segundoshabiles(fecha_asignacion_paso_contacto,fecha_inicio_paso_contacto)/60 else 0 end&#xA;&#xA;where id_unidad_organizacional_detalle_contacto = 400 and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_fingreso_fcarga =0 where&#xA;fecha_carga_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_ingreso_paso_contacto = '1900-01-01 00:00:00.000' &#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;and  id_periodo_alta_contacto&gt;= @periodo&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_finicio_fcarga =0 where&#xA;fecha_carga_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_inicio_paso_contacto = '1900-01-01 00:00:00.000'&#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;and  id_periodo_alta_contacto&gt;= @periodo&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_finicio_fingreso =0 where&#xA;fecha_inicio_paso_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_ingreso_paso_contacto = '1900-01-01 00:00:00.000'&#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;and  id_periodo_alta_contacto&gt;= @periodo&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set diff_min_finicio_fasignacion  =0 where&#xA;fecha_inicio_paso_contacto = '1900-01-01 00:00:00.000'  &#xA;or fecha_asignacion_paso_contacto = '1900-01-01 00:00:00.000'&#xA;and id_unidad_organizacional_detalle_contacto = 400&#xA;and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;--- si hay un peridoo nuevo se carga en los objetivos&#xA; declare @periodo_maximo int = (select max(id_periodo) from H_CONTACTOS_INDICADORES_SS)&#xA; if @periodo_maximo not in (select distinct id_periodo from H_OBJETIVOS_SISTEMA_CONTACTOS)&#xA; begin&#xA; insert into H_OBJETIVOS_SISTEMA_CONTACTOS&#xA;select @periodo_maximo,id_unidad_organizacional_detalle_contacto,reingresos,&#xA;promedio_min_tiempo_resol,cant_contactos_obj,cant_reingresos,cant_minutos_objetivo&#xA;from H_OBJETIVOS_SISTEMA_CONTACTOS where id_periodo = dbo.periodosanteriores(@periodo,2)&#xA;end &#xA;&#xA;&#xA;update D_CODIGOS_CLASIFICACIONES &#xA;set de_codigo_clasificacion = 'Solicitud reintegro odontología'&#xA;where id_codigo_clasificacion = '45.9'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra tablas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F5643BD2-E548-4E5E-BF98-331E77134F99}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra tablas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="truncate table consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas&#xA;&#xA;truncate table AUX_H_CONTACTOS_INDICADORES_SS&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserta en H_CONTACTOS_INDICADORES_SS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{5676D1E1-DC8F-4806-876D-5618CE96C0AB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserta en H_CONTACTOS_INDICADORES_SS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="----- Borra la H_CONTACTOS_INDICADORES_SS&#xA;&#xA;truncate table  dw_salud.dbo.H_CONTACTOS_INDICADORES_SS&#xA;&#xA;&#xA;&#xA;INSERT INTO H_CONTACTOS_INDICADORES_SS&#xA;SELECT dw_salud.DBO.DevuelvePeriodo(T.fecha_ingreso), t.id_periodo, t.id_contacto, t.id_usuario_carga_contacto, isnull(t.id_usuario_carga_contacto_anterior,0), t.id_tipo_caso_contacto,&#xA; isnull(t.id_codigo_clasificacion,0),t.id_via_acceso,t.id_unidad_organizacional_contacto,T.id_unidad_organizacional_detalle,isnull(t.id_unidad_organizacional_detalle_anterior,0),&#xA;  t.id_tipo_contacto, isnull(T.fecha_ingreso,'1900-01-01 00:00:00.000'), isnull(fecha_inicio_contacto,'1900-01-01 00:00:00.000'), isnull(dw_salud.DBO.DevuelvePeriodo(fecha_fin),190001), isnull(t.fecha_fin,'1900-01-01 00:00:00.000'),  isnull(t.plazo_vencido_contacto,'1900-01-01 00:00:00.000'), isnull(t.plazo_vencido_unidad_organizacional,'1900-01-01 00:00:00.000'),&#xA;   isnull(tiempo_minutos_detalle,0),T.nro_orden_detalle,case when fecha_fin is null then 3 -- Pendiente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when dw_salud.DBO.DevuelvePeriodo(T.fecha_ingreso) = dw_salud.DBO.DevuelvePeriodo(fecha_fin) then 1 -- Finalizado mismo periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when dw_salud.DBO.DevuelvePeriodo(T.fecha_ingreso) &lt; dw_salud.DBO.DevuelvePeriodo(fecha_fin) then 2 end, -- Finalizado periodos posteriores&#xA;t.id_categoria_caso, --id_categoria_caso&#xA;1, -- Cant_paso_contacto&#xA;1, --id_marca_computo_contacto&#xA;0, -- cant_paso_contacto_nuevo&#xA;0, -- id_marca_vencimiento&#xA;0, --Cant_dias_vencidos&#xA;0, --Cant_dias_vencidos_unidad&#xA;0,    -- id_dias_reoslucion&#xA;0, --id_semana_fn_paso_contacto&#xA;0, -- cant_dias_resolucion&#xA;0, -- id_acreedor&#xA;'', --id_tipo_acreedor&#xA;0, --Cuit Acreedor&#xA;0, -- Unidad donde se vencio&#xA;0, -- Acumulado de contactos pendientes&#xA;0 as id_marca_contacto_resuelto_9hs,&#xA;null as fecha_carga_contacto,&#xA;0 as id_marca_computo_contacto_especifico_discapacidad,&#xA;0 as id_marca_resuelto_15min,&#xA;0 as id_marca_derivacion_contacto,&#xA;'1900-01-01 00:00:00.000' as fecha_cierre_fin_contacto,&#xA;0 as id_clasificacion_vencimiento_contacto,&#xA;0 as id_marca_maximo_paso_unidad,&#xA;0 as id_marca_contacto_resuelto_9hs_18hs,&#xA;0 as id_marca_computo_contacto_especifico_conectividad,&#xA;0 as id_periodo_productividad,&#xA; 0 as id_marca_finalizo_vencido_contacto,&#xA;0 as cant_dias_vencido_contacto_general,&#xA;0 as id_marca_resuelto_dia,&#xA;0 as id_marca_rango_dias_vencidos,&#xA;0 as  ID_clasificacion_vencimiento_impuestos,&#xA;0 as id_periodo_fin_paso_contacto_productividad,&#xA;0  as id_marca_finalizacion_paso_contacto_productividad,&#xA;0 as id_marca_generado_por_sector,&#xA;isnull(t.id_marca_mal_clasificado,0) as id_marca_mal_clasificado,&#xA;t.de_marca_mal_clasificado as obs_mal_clasificado,&#xA;isnull(t.fecha_marca_mal_clasificado,'1900-01-01 00:00:00.000')  as fecha_marca_mal_clasificado ,&#xA;isnull(t.usuario_marca_mal_clasificado,'F/D') as usuario_marca_mal_clasificado,&#xA;0 as id_marca_finalizacion_15_dias_discapacidad,&#xA;0 as id_usuario_carga_contacto,&#xA;0 as tiempo_minutos_detalle_total,&#xA;0 as id_marca_vencimiento_de_unidad,&#xA; id_estado_contacto,&#xA;id_estado_paso,&#xA;0 as id_marca_elimina_ultimo_paso,&#xA;0 as id_usuario_cierre_contacto,&#xA;t.id_tipo_caso,&#xA;0 as cant_minutos_planificado,&#xA;cant_informacion_incompleta,&#xA;cant_derivacion_incompleta,&#xA;cant_correspondia_resolucion_primer_contacto,&#xA;id_direccion_ss,&#xA;id_gerencia_ss,&#xA;0 as diff_min_fingreso_fcarga,&#xA;0 as diff_min_finicio_fcarga,&#xA;0 as diff_min_finicio_fingreso,&#xA;isnull(t.fecha_asignacion_paso_contacto,'1900-01-01 00:00:00.000'),&#xA;0 as diff_min_finicio_fasignacion,&#xA;id_persona,&#xA;dbo.DevuelvePeriodo(isnull(fecha_inicio_contacto,'1900-01-01')),&#xA;id_codigo_clasificacion_ampliado&#xA;FROM  consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas T &#xA;where id_periodo &gt;= 201706&#xA;&#xA;--CALCULA LA UNIDAD DE ORIGEN&#xA;select id_contacto, id_unidad_organizacional_detalle_contacto  into #tempunidadcarga&#xA;from H_CONTACTOS_INDICADORES_SS where nro_orden_detalle_contacto = 1 &#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_unidad_organizacional_origen_contacto = t.id_unidad_organizacional_detalle_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempunidadcarga t on h.id_contacto = t.id_contacto&#xA;&#xA;--Almacena los contactos, la unidad de origen y la cantidad de unidades organizacionales diferente atraviesa &#xA;select id_contacto, id_unidad_organizacional_origen_contacto, COUNT(distinct id_unidad_organizacional_detalle_contacto) as cant_unidades into #tempcontactos&#xA;from H_CONTACTOS_INDICADORES_SS &#xA;group by id_contacto, id_unidad_organizacional_origen_contacto&#xA;&#xA;-- Almacena los ultimos pasos actuales de cada contacto&#xA;select id_contacto,max(nro_orden_detalle_contacto) as nro_orden into #tempcontpendiente &#xA;from H_CONTACTOS_INDICADORES_SS  group by id_contacto&#xA; &#xA;-- Borra los ultimos pasos de cada contacto , que se genera sin objetivo alguno&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;and id_unidad_organizacional_detalle_contacto not in(304,451,392,112)&#xA;&#x9;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#xA;-- Aquellos casos que se originan en la misma unidad se eliminan salvo aquellos que no son transferidos a otra unidad en ninguna parte del proceso&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0 &#xA;where id_unidad_organizacional_origen_contacto not in(304,451,392,112)   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; and id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_origen_contacto&#xA;&#x9;&#x9;and id_categoria_caso &lt;&gt; 7 -- No tiene en cuenta los contactos automaticos (ya que estos tienen un solo paso y se generan en la misma unidad)&#xA;     &#x9;and id_contacto not in (select id_contacto from #tempcontactos where cant_unidades= 1)-- Los contactos donde se origino en la unidad pero no derivo nunca se cuenta&#xA;&#xA;-- Borra los ultimos pasos de cada contacto , que se genera sin objetivo alguno (PONE EN 1 aquellos que no hay que tener en cuenta)&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_elimina_ultimo_paso = 1&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#xA;--EXEPCIONES&#xA;--AFILIACIONES EMPRESA&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_categoria_caso not in (5,7) -- No es automatico y no essolicitud de clave&#xA;&#x9;and id_unidad_organizacional_detalle_contacto = 304 -- afilianciones empresa&#xA;&#x9;--and H.id_contacto not in (select id_contacto from #tempcontactos where cant_unidades= 1)-- Los contactos donde se origino en la unidad pero no derivo nunca se cuenta&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0 -- Pone la marca en 0&#xA;where id_unidad_organizacional_origen_contacto = 304 -- Afiliaciones empresa&#xA;and id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_origen_contacto and id_categoria_caso not in(5,7) --cuando la unidad origen es igual al detalle&#xA;and id_contacto not in (select id_contacto from #tempcontactos where cant_unidades= 1)&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;--Debitos de Auditoría Médica y Refacturación de Prestaciones&#xA;-- Elimina el ultimo paso &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_unidad_organizacional_detalle_contacto in (392,112) -- afilianciones empresa&#xA;&#xA;&#xA;&#xA;-- Para la unidad Ejecutiva existen contactos que tienen un solo paso ya que no son cerrados adecuadamente y se deben tener en cuenta &#xA;select id_contacto, COUNT (*) as cant into #tempprueba&#xA;from H_CONTACTOS_INDICADORES_SS where id_unidad_organizacional_detalle_contacto = 451  and id_unidad_organizacional_origen_contacto = 451 --Ejecutiva&#xA;group by id_contacto&#xA;having COUNT (*) = 1&#xA;order by id_contacto&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 1&#xA;from H_CONTACTOS_INDICADORES_SS&#xA;where id_contacto in (select id_contacto from #tempprueba) and id_marca_computo_contacto = 0&#xA;-- Calculo cuales son los pasos nuevos por unidad en cada periodo, osea busca el minimo paso con la agrupacion correspondiente&#xA;select id_contacto, id_unidad_organizacional_detalle_contacto, min(id_periodo) id_periodo, min(nro_orden_detalle_contacto) as minimo_paso into #tempcontactosnuevos&#xA;from H_CONTACTOS_INDICADORES_SS &#xA;group by id_contacto, id_unidad_organizacional_detalle_contacto&#xA;-- Pongo en 1 la marca de los contactos nuevos segun la tabla calculada anteriormente&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_paso_contacto_nuevo = 1&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempcontactosnuevos t on t.id_contacto = h.id_contacto and t.id_periodo = h.id_periodo &#xA;and t.id_unidad_organizacional_detalle_contacto = h.id_unidad_organizacional_detalle_contacto and t.minimo_paso = h.nro_orden_detalle_contacto&#xA;&#xA;-- Para los contactos pendientes &#xA;-- Con la formula aportada por vale se calculan la horas transcurridas al dia de hoy pero se lo calcula en minutos para que haya concordancia con la columna y sea mas exacto&#xA;update H_CONTACTOS_INDICADORES_SS &#xA;set tiempo_minutos_detalle = ((Datediff(minute,fecha_ingreso_paso_contacto , GETDATE())/24 * 0.714) * 9 )&#xA;where id_marca_finalizacion_paso_contacto = 3&#xA;&#xA;-- Calcula marca de vencimiento, a los que ingresan vencidos les pone 1, a los que se vencieron en la unidad 2, a los resueltos a tiempo 3 y a los que esta pendiente 0&#xA;-- Setea la Maarca de finalizacion antes de 15 dias de discapacidad&#xA;--Calcula los dias laborales en los que se resolvio el caso&#xA;-- Calcula en que semana del mes (del 1º a la 4º o a la 5º dependiendo del mes) &#xA;-- Calcula la cantidad de dias en que demoro resolver el contacto&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_vencimiento =  case when  fecha_ingreso_paso_contacto &gt; fecha_vencimiento_contacto  then 1 --llego vencido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when  fecha_fin_paso_contacto &gt; fecha_vencimiento_contacto then 2 -- Vencio en la unidad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto &lt;= fecha_vencimiento_contacto and fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  then 3 -- Terminado a tiempo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and fecha_vencimiento_contacto &lt;= getdate() then 4 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and fecha_vencimiento_contacto &gt; getdate() then 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 0 end,&#xA; id_marca_finalizacion_discapacidad = case when tiempo_minutos_detalle &lt;= 3780 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 1-- Entre 0 y 7 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;      when tiempo_minutos_detalle &gt; 3780 and tiempo_minutos_detalle &lt;= 8100 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 2 -- Entre 8 y 15 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 8100 and tiempo_minutos_detalle &lt;= 10800 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 3 -- Entre 16 y 20 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 10800 and tiempo_minutos_detalle &lt;= 13500 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 4 -- Entre 21 y 25 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 13500 and tiempo_minutos_detalle &lt;= 16200 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 5 -- Entre 25 y 30 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 13500 and tiempo_minutos_detalle &lt;= 16200 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 5 -- + de 30 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 end, -- Pendiente de resolucion&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xA; id_dias_resolucion = case when tiempo_minutos_detalle / 60  &lt; 9 then 1 -- 1 dia&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 9 and 17 then 2 -- 2 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 18 and 26 then 3 --3 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 27 and 71 then 4 -- entre 4 y 8 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 72 and 98 then 5 -- entre 9 y 11 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 99 and 116 then 6 -- entre 12 y 13 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 117 and 152 then 7 -- entre 14 y  17 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 &gt;152 then 8 -- 18 dias o mas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 end,&#xA; id_semana_fin_paso_contacto = case when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' then 0 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else datepart(week,fecha_fin_paso_contacto) - datepart(week, dateadd(dd,-day(fecha_fin_paso_contacto)+1,fecha_fin_paso_contacto)) +1 end,&#xA; cant_dias_resolucion =  cast(tiempo_minutos_detalle as float) / 60 -- redondear int&#xA;&#xA;-- Para aquellos casos que llegan vencidos se calcula cuantos dias tarde llego&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_dias_vencidos = case when id_marca_vencimiento = 1 then datediff(day, fecha_vencimiento_contacto,fecha_ingreso_paso_contacto) else 0 end&#xA;&#xA;&#xA;-- Para los casos que se vencieron en la unidad, se calcula cuantos casos tarda en vencerse&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_dias_vencidos_unidad = case when id_marca_vencimiento = 2 then datediff(day,fecha_vencimiento_contacto,fecha_fin_paso_contacto) else 0 end&#xA;&#xA;-- Calcula el cuit del provedor &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cuit_acreedor = T.cuit_proveedor&#xA;from H_CONTACTOS_INDICADORES_SS h  inner join  consultas_dw.dbo.AUX_H_CONTACTOS_INDICADORES_SS_pruebas T  on h.id_contacto = T.id_contacto&#xA;where h.id_tipo_contacto = 3&#xA;&#xA;-- A travez del cuit se calcula el acreedor y el tipo&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_acreedor = D.id_acreedor,&#xA;&#x9;id_tipo_prestador = D.id_tipo_prestador&#xA;from H_CONTACTOS_INDICADORES_SS h  &#x9;inner join dw_salud.dbo.D_ACREEDOR D on D.cuit = h.cuit_acreedor&#xA;where id_tipo_contacto = 3&#xA;&#xA;&#xA; -- Calcula aquellos contactos que ingresaron vencidos&#xA;select id_contacto, id_unidad_organizacional_detalle_contacto&#xA;into #tempvencido&#xA;from H_CONTACTOS_INDICADORES_SS&#xA;where  id_marca_computo_contacto = 1 &#xA;and id_marca_vencimiento = 2&#x9;-- Ingreso vencido&#xA;order by id_contacto&#xA;&#xA;&#xA;-- Setea la unidad donde se vencio el contacto&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_unidad_organizacional_donde_vencio = t.id_unidad_organizacional_detalle_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join #tempvencido t on h.id_contacto = t.id_contacto &#xA;where id_marca_vencimiento = 1 and id_marca_computo_contacto = 1&#xA;&#xA;&#xA;/*Selecciona todos los periodos de cada unidad donde hay contactos*/&#xA;select id_periodo, id_unidad_organizacional_detalle_contacto, 0 as acumuladoperiodo, 0 as acumuladoperiodoanterior&#xA;into #temppendientescompleto from H_CONTACTOS_INDICADORES_SS&#xA;group by id_periodo, id_unidad_organizacional_detalle_contacto&#xA;order by id_unidad_organizacional_detalle_contacto,  id_periodo &#xA;&#xA;/*Selecciona los periodos de cada unidad en los que se hayan pendientes */&#xA;select id_periodo, id_unidad_organizacional_detalle_contacto, COUNT(*) cantcontactos , 0 as acumuladoperiodo, 0 as acumuladoperiodoanterior&#xA;into #temppendientes from H_CONTACTOS_INDICADORES_SS&#xA;where id_marca_computo_contacto = 1 and id_estado_contacto &lt;&gt; 3  and id_estado_contacto_detalle = 0  ---id_marca_finalizacion_paso_contacto = 3&#xA;group by id_periodo, id_unidad_organizacional_detalle_contacto&#xA;order by id_unidad_organizacional_detalle_contacto,  id_periodo &#xA;&#xA;&#xA;declare @acumulador int = 0&#xA;declare @id_unidad_organizacional_detalle_contacto int = (select min(id_unidad_organizacional_detalle_contacto) from #temppendientes)&#xA;  /* Por cada periodo le pone cuantos contactos pendiente tiene */&#xA;update #temppendientes&#xA;set  @acumulador = case when @id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_detalle_contacto then @acumulador + cantcontactos else cantcontactos end,&#xA;&#x9; @id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_detalle_contacto,&#xA;&#x9; acumuladoperiodo =  @acumulador &#xA;FROM #temppendientes H &#xA;&#xA;/* A cada periodo le actualiza para que no se tengan en cuenta los contactos pendiente de ese periodo*/&#xA;update #temppendientes&#xA;set acumuladoperiodoanterior = acumuladoperiodo-cantcontactos&#xA;&#xA;/*Se pasa lo calculado a la temporal donde estan todos los periodos*/&#xA;update #temppendientescompleto&#xA;set acumuladoperiodo = t1.acumuladoperiodo,&#xA;acumuladoperiodoanterior = t1.acumuladoperiodoanterior&#xA;from #temppendientescompleto t  inner join #temppendientes t1 &#xA;on t.id_periodo = t1.id_periodo and t.id_unidad_organizacional_detalle_contacto = t1.id_unidad_organizacional_detalle_contacto&#xA;&#xA;/*Quedan periodos en el medio sin contactos pendientes en los cuales deben tener valor hasta el proximo periodo con contactos pendientes*/&#xA;declare @unidad int = (select min(id_unidad_organizacional_detalle_contacto) from #temppendientescompleto where id_unidad_organizacional_detalle_contacto &lt;&gt; 0 )&#xA;declare @cantacumulado int = (select  top 1 acumuladoperiodo from #temppendientescompleto where id_unidad_organizacional_detalle_contacto =@unidad  )&#xA;declare  @cantacumuladoant int = 0&#xA;-- Setea el la cantidad de contactos pendientes hay hasta ese momento&#xA;update #temppendientescompleto&#xA;set acumuladoperiodoanterior = case  when  acumuladoperiodoanterior = 0 and acumuladoperiodo = 0 then @cantacumulado else acumuladoperiodoanterior end , &#xA;&#x9;@cantacumulado = case when acumuladoperiodo &lt;&gt; 0 then acumuladoperiodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_unidad_organizacional_detalle_contacto &lt;&gt; @unidad then acumuladoperiodo   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else @cantacumulado end,&#xA;&#x9;@unidad = t.id_unidad_organizacional_detalle_contacto&#xA;from #temppendientescompleto t &#xA;&#xA;/*Se pasa la informacion a la tabla de contactos */&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set acumulado_cant_contactos_pendientes_periodo_anterior = acumuladoperiodoanterior&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #temppendientescompleto t &#xA;on t.id_periodo = h.id_periodo and&#xA; t.id_unidad_organizacional_detalle_contacto = h.id_unidad_organizacional_detalle_contacto&#xA;  &#xA;&#xA;  -- Setea aquellos contactos que estan pendientes en 0, menor a 540 minutos (9 horas) en 1 y mayor en 2&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_contacto_resuelto_9hs = case when id_marca_finalizacion_paso_contacto = 3 then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_marca_finalizacion_paso_contacto &lt;&gt; 3 and tiempo_minutos_detalle &lt;= 540 then 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_marca_finalizacion_paso_contacto &lt;&gt; 3 and tiempo_minutos_detalle &gt; 540 then 2 end&#xA;&#xA;&#xA;-- Calcula la minima fecha (donde se inicio el contacto) &#xA;select id_contacto, MIN(fecha_ingreso_paso_contacto) as fecha_carga_contacto into #tempMinimaFecha from H_CONTACTOS_INDICADORES_SS group by id_contacto&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set fecha_carga_contacto = c.fecha_carga_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempMinimaFecha c on h.id_contacto = c.id_contacto&#xA;&#xA;&#xA;--EXISTE UN REPORTE ESPECIFICO DE DISCAPACIDAD QUE NECESITA UNA MARCA PARA PODER GENERARSE ADECUADAMENTE QUE SE CALCULA ACA&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_discapacidad = 1&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;where id_unidad_organizacional_detalle_contacto in (161)&#xA;&#xA;-- Calcula las marca de computo de contacto pero para el reporte especifico de discapacidad&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_discapacidad = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_unidad_organizacional_detalle_contacto in (161) -- Conectividad , Discapacidad , Recupero Sur&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#xA;&#xA;&#xA;-- Calcula la marca para ver si se resolvio en 9horas (540 min) 18 horas (1080 min) o mas o si esta pendiente&#xA;UPDATE H_CONTACTOS_INDICADORES_SS&#xA;SET id_marca_contacto_resuelto_9hs_18hs = CASE WHEN tiempo_minutos_detalle &lt;=540 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 1 -- Resueleve en menos de 9 horas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when tiempo_minutos_detalle &gt; 540 and tiempo_minutos_detalle &lt;=1080 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 2 -- Resuelve entre 9 y 18 horas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when tiempo_minutos_detalle &gt; 1080 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 3 -- Resuelve en mas de 18 horas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when  id_marca_finalizacion_paso_contacto = 3 then 0 -- No resuelto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else 0 end&#xA;&#xA;&#xA;&#xA;-- Calcula aquellos que se resolvieron en menos de 15 min&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_15min = 1 &#xA;where tiempo_minutos_detalle &lt;= 15&#xA;&#xA;&#xA;-- CALCULA FECHA MAXIMA PARA LOS CONTACTOS CERRADOS PARA SABER QUE DIA SE CERRO EL CONTACTO GLOBAL&#xA;select id_contacto, max(fecha_fin_paso_contacto) as fecha_maxima into #mayor_fecha&#xA;from H_CONTACTOS_INDICADORES_SS where id_marca_finalizacion_paso_contacto &lt;&gt; 3 group by id_contacto&#xA;&#xA;-- setea la fecha de cierre del contacto total (a nivel cabecera)&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set fecha_cierre_final_contacto = fecha_maxima&#xA;from H_CONTACTOS_INDICADORES_SS H inner join #mayor_fecha t on H.id_contacto = t.id_contacto&#xA;&#xA;&#xA;&#xA;-- CALCULA ESTADO DE VENCIMIENTO Y DETERMINA CLASIFICACION&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;SET id_clasificacion_vencimiento_contacto = case when fecha_ingreso_paso_contacto &gt; fecha_vencimiento_contacto then 1 --Ingresa Vencido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto &gt; fecha_vencimiento_contacto and fecha_cierre_final_contacto &gt; fecha_fin_paso_contacto then 3--Vence en el sector&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_cierre_final_contacto &gt; fecha_vencimiento_contacto and fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' then 4 -- Vence fuera del sector&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' then 5 -- No resuelto a la fecha&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 2 end -- Resuelto en tiempo y forma&#xA;&#xA;&#xA;&#xA;&#xA;--CALCULA y SETEA la marca correspondiente segun si se DERIVO o no, tambien tiene en cuenta si es automatico o no&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_derivacion_contacto = case when id_categoria_caso = 7 then 3 -- automatico&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when id_categoria_caso &lt;&gt; 7 and t.cant_unidades = 1 and id_marca_resuelto_15min &lt;&gt; 1 then 1 -- abierto y cerrado unidad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when id_categoria_caso &lt;&gt; 7 and t.cant_unidades = 1 and id_marca_resuelto_15min = 1 then 4 -- abierto y cerrado unidad en 15 min&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when id_categoria_caso &lt;&gt; 7 and t.cant_unidades &gt; 1 then 2 end-- derivado&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempcontactos t on t.id_contacto = h.id_contacto&#xA;&#xA;&#xA;-- CALCULA MARCA DE ESPECIFICO DE CONECTIVIDAD&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_conectividad = 1&#xA;where id_unidad_organizacional_detalle_contacto = 298&#xA;&#xA;-- SETEA LA MARCA PARA EL ESPECIFICO DE CONECTIVIDAD SEGUN LOS REQUISITOS NECESARIOS&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_conectividad = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_unidad_organizacional_detalle_contacto in (298) -- Conectividad&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#xA;-- CALCULA NUMERO MAXIMO DE PASO&#xA;select id_contacto,id_unidad_organizacional_detalle_contacto,max(nro_orden_detalle_contacto) as nro_orden into #tempulimopasos &#xA;from H_CONTACTOS_INDICADORES_SS &#xA;where id_marca_computo_contacto_especifico_conectividad = 1 -- BUSCA EL MAXIMO PASO TENIDO EN CUENTA POR LA MARCA DEL ESPECIFICO&#xA;group by id_contacto, id_unidad_organizacional_detalle_contacto&#xA;&#xA;-- Setea el maximo paso de cada unidad siempre que SE TENGA EN CUENTA, SOLO PARA LOS ESPECIFICO DE CONECTIVIDAD &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_maximo_paso_unidad = 1&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempulimopasos t on h.id_contacto = t.id_contacto &#xA;and h.nro_orden_detalle_contacto = t.nro_orden&#xA;and h.id_unidad_organizacional_detalle_contacto = t.id_unidad_organizacional_detalle_contacto&#xA;&#xA;-- CALCULA PERIODO DE PRODUCTIVIDAD DE 15 A 16 DEL MES SIGUIENTE&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_productividad = case when datepart(day,fecha_ingreso_paso_contacto) &lt; 16 then id_periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when datepart(day,fecha_ingreso_paso_contacto) &gt;= 16 then dw_salud.dbo.PeriodosPosteriores(id_periodo,2) end&#xA;where id_unidad_organizacional_detalle_contacto in (188, 458) -- Impuestos, autorizacion discapacidad ambulatoria&#xA;&#xA;&#xA;-- SI SE ENCUENTRA EN LAS MARCAS 1 INGRESO VENCIDO, 2 SE VENCIO EN UNIDAD ,3 SE VENCIO FUERA DE LA UNIDAD, SE SETEA EN 1&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_finalizo_vencido_contacto = 1 &#xA;where id_clasificacion_vencimiento_contacto in (1,3,4)&#xA;&#xA;&#xA;-- SEGUN EL TIPO DE CLASIFICACION SE CALCULA LA CANTIDAD DE DIAS VENCIDOS A NIVEL DE CONTACTO GENERAL&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_dias_vencido_contacto_general = case when id_clasificacion_vencimiento_contacto = 1 then datediff(day , fecha_vencimiento_contacto,fecha_ingreso_paso_contacto)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_clasificacion_vencimiento_contacto = 3 then DATEDIFF(day, fecha_vencimiento_contacto,fecha_fin_paso_contacto)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_clasificacion_vencimiento_contacto = 4 then DATEDIFF(day, fecha_vencimiento_contacto,fecha_cierre_final_contacto)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 end&#xA;&#xA;/*&#xA;-- SEGUN LAS ESPECIFICACIONES DE IMPUESTOS  SE MARCA RESUELTO EN EL DIA&#xA;-- PARA LOS QUE TIENE EN CUENTA EL PROVEEDOR SE CUENTA COMO RESUELTO CUANDO LA FECHA ES MENOR AL DIA SIGUIENTE A LAS 16 HORAS&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where id_tipo_contacto in (7,3) and id_codigo_clasificacion in ('10.13','10.22')&#xA;&#x9;  and cast(fecha_fin_paso_contacto as date) &lt;= (select  DATEADD(hour,16,MIN(id_fecha)) &#xA;&#x9;  from D_FECHA where id_dia_habil = 1 and cast(id_fecha as date) &gt; cast(fecha_ingreso_paso_contacto as date))&#xA;&#x9;  and id_unidad_organizacional_detalle_contacto = 188  &#xA;*/&#xA;&#xA;&#xA;&#xA;-- CASO 1 CONTACTOS INGRESADOS ANTES DE LAS 16 HORAS &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where DATEpart(hh,fecha_ingreso_paso_contacto) &lt;16 and cast(fecha_ingreso_paso_contacto as date) = cast(fecha_fin_paso_contacto as date)&#xA;and DATEpart(hh,fecha_fin_paso_contacto) &lt;16 &#xA;-- Caso 2 contactos ingresados despues de las 16 horas &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where DATEpart(hh,fecha_ingreso_paso_contacto) &gt;=16 and (fecha_fin_paso_contacto) &lt;= (select  DATEADD(hour,16,MIN(id_fecha)) &#xA;&#x9;  from D_FECHA where id_dia_habil = 1 and cast(id_fecha as date) &gt; cast(fecha_ingreso_paso_contacto as date))&#xA;&#x9;  and id_unidad_organizacional_detalle_contacto = 188  &#xA;-- Caso 3 si llega sabado o domingo se resuelve el proximo dia habil antes de las 16 &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where  DATEPART(dw, fecha_ingreso_paso_contacto)  in (7,1) and (fecha_fin_paso_contacto) &lt;= (select  DATEADD(hour,16,MIN(id_fecha)) &#xA;&#x9;  from D_FECHA where id_dia_habil = 1 and cast(id_fecha as date) &gt; cast(fecha_ingreso_paso_contacto as date))&#xA;&#x9;  and id_unidad_organizacional_detalle_contacto = 188  &#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;  &#xA;-- SEGUN LAS ESPECIFICACIONES DE IMPUESTOS  SE MARCA RESUELTO EN EL DIA&#xA;-- PARA LOS QUE NO TIENE EN CUENTA EL PROVEEDOR SE CUENTA COMO RESUELTO CUANDO SE RESUELVE EN 9HORAS&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where (id_tipo_contacto not in (7,3) or id_codigo_clasificacion not in ('10.13','10.22'))&#xA;&#x9;  and tiempo_minutos_detalle &lt;= 540&#xA;&#x9;  &#x9;  and id_unidad_organizacional_detalle_contacto = 188&#xA;&#xA;--Clasifica el vencimiento para la unidad impuestos&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;SET ID_clasificacion_vencimiento_impuestos =  case when fecha_ingreso_paso_contacto &gt; fecha_vencimiento_contacto then 1 -- ingresa vencido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when fecha_fin_paso_contacto &gt; fecha_vencimiento_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt; fecha_vencimiento_contacto then 2 -- Vence en el sector &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 3 end -- normal&#xA;&#xA;--CALCULA SI EL SECTOR DETALLE ES IGUAL AL ORIGEN PARA MARCAR AQUELLOS PASOS QUE FUERON ORIGINADOS POR LA MISMA UNIDAD&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_generado_por_sector = 1&#xA;where id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_origen_contacto&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;--Calcula periodo de productividad&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_productividad = d.id_periodo_productividad&#xA;from H_CONTACTOS_INDICADORES_SS h inner join dw_salud.dbo.d_periodo_productividad_contacto d on h.id_unidad_organizacional_detalle_contacto = d.id_unidad_organizacional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where cast(fecha_ingreso_paso_contacto as date) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  between  fecha_inicio_periodo and fecha_fin_periodo &#xA;&#xA;--Calcula periodo de fin de paso de productividad&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_fin_paso_contacto_productividad = d.id_periodo_productividad&#xA;from H_CONTACTOS_INDICADORES_SS h inner join dw_salud.dbo.d_periodo_productividad_contacto d on h.id_unidad_organizacional_detalle_contacto = d.id_unidad_organizacional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where cast(fecha_fin_paso_contacto as date) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  between  fecha_inicio_periodo and fecha_fin_periodo &#xA;&#xA;&#xA;-- CALCULA LA MARCA DE FINALIZACION PARA LAS UNIDADES QUE UTILIZAN PERIODO DE PRODUCTIVIDAD&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_finalizacion_paso_contacto_productividad =  case when fecha_fin_paso_contacto ='1900-01-01 00:00:00.000' then 3 -- Pendiente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when id_periodo_productividad = id_periodo_fin_paso_contacto_productividad then 1 -- Finalizado mismo periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when id_periodo_productividad &lt; id_periodo_fin_paso_contacto_productividad then 2 end --Finalizado periodos posteriores&#xA;where id_unidad_organizacional_detalle_contacto in (188, 458,161)&#xA;&#xA;declare @max_periodo int&#xA;set @max_periodo = (select Max(id_periodo_productividad) from dw_salud.dbo.d_periodo_productividad_contacto)&#xA;&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set [id_marca_mal_clasificado] = 0,&#xA;obs_mal_clasificado = '',&#xA;[fecha_marca_mal_clasificado] = '1900-01-01 00:00:00.000',&#xA;[usuario_marca_mal_clasificado] = 'F/D'&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;where [id_marca_mal_clasificado] is null&#xA;&#xA;-- Calcula el periodo de carga&#xA;select id_contacto, min(id_periodo) as id_periodo_alta_contacto into #temp_periodo_alta from h_contactos_indicadores_Ss group by id_contacto &#xA;update h_contactos_indicadores_Ss &#xA;set id_periodo_alta_contacto = t.id_periodo_alta_contacto&#xA;from h_contactos_indicadores_Ss h inner join #temp_periodo_alta t on t.id_contacto = h.id_contacto&#xA;&#xA;&#xA;-- Busco usuario de carga seleccionando el usuario del primer paso del contacto&#xA;select id_contacto,id_usuario_detalle_contacto into #temp_usuario_carga from H_CONTACTOS_INDICADORES_SS where nro_orden_detalle_contacto = 1 &#xA;-- A todo el contacto le paso el mismo usuario&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_usuario_carga_contacto = t.id_usuario_detalle_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #temp_usuario_carga t on h.id_contacto = t.id_contacto&#xA;&#xA;&#xA;-- Calculo la cantidad de minutos total de cada contacto&#xA;select id_contacto, sum(tiempo_minutos_detalle) as tiempo_total_minutos into #temp_total_minutos from H_CONTACTOS_INDICADORES_SS  group by id_contacto&#xA;-- Setea por cada contacto el tiempo total en minutos &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set tiempo_minutos_detalle_total = tiempo_total_minutos&#xA;from H_CONTACTOS_INDICADORES_SS C inner join #temp_total_minutos t on t.id_contacto = c.id_contacto&#xA;&#xA;&#xA;&#xA;&#xA;update h_contactos_indicadores_ss&#xA;set id_usuario_cierre_contacto = A.id_usuario_detalle_contacto&#xA;from h_contactos_indicadores_ss h inner join (select h.id_contacto, h.id_usuario_detalle_contacto from H_CONTACTOS_INDICADORES_SS h &#xA;inner join #tempcontpendiente t on h.id_Contacto = t.id_contacto and h.nro_orden_detalle_contacto = t.nro_orden) A&#xA;on h.id_contacto = a.id_contacto&#xA;&#xA;&#xA;&#xA;drop table #temp_total_minutos&#xA;drop table #temp_usuario_carga &#xA;drop table #temppendientescompleto&#xA;drop table #temppendientes&#xA;drop table #tempcontpendiente&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserta en H_CONTACTOS_INDICADORES_SS 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{80c3a0a3-14ce-4721-8919-946256122e20}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserta en H_CONTACTOS_INDICADORES_SS 1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="----- Borra la H_CONTACTOS_INDICADORES_SS&#xA;&#xA;declare @periodo int = (select min(id_periodo) from AUX_H_CONTACTOS_INDICADORES_SS)&#xA;&#xA;delete from  dw_salud.dbo.H_CONTACTOS_INDICADORES_SS where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;INSERT INTO H_CONTACTOS_INDICADORES_SS&#xA;SELECT dw_salud.DBO.DevuelvePeriodo(T.fecha_ingreso), t.id_periodo, t.id_contacto, t.id_usuario_carga_contacto, isnull(t.id_usuario_carga_contacto_anterior,0), t.id_tipo_caso_contacto,&#xA; isnull(t.id_codigo_clasificacion,0),t.id_via_acceso,t.id_unidad_organizacional_contacto,T.id_unidad_organizacional_detalle,isnull(t.id_unidad_organizacional_detalle_anterior,0),&#xA;  t.id_tipo_contacto, isnull(T.fecha_ingreso,'1900-01-01 00:00:00.000'), isnull(fecha_inicio_contacto,'1900-01-01 00:00:00.000'), isnull(dw_salud.DBO.DevuelvePeriodo(fecha_fin),190001), isnull(t.fecha_fin,'1900-01-01 00:00:00.000'),  isnull(t.plazo_vencido_contacto,'1900-01-01 00:00:00.000'), isnull(t.plazo_vencido_unidad_organizacional,'1900-01-01 00:00:00.000'),&#xA;   isnull(tiempo_minutos_detalle,0),T.nro_orden_detalle,case when fecha_fin is null then 3 -- Pendiente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when dw_salud.DBO.DevuelvePeriodo(T.fecha_ingreso) = dw_salud.DBO.DevuelvePeriodo(fecha_fin) then 1 -- Finalizado mismo periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when dw_salud.DBO.DevuelvePeriodo(T.fecha_ingreso) &lt; dw_salud.DBO.DevuelvePeriodo(fecha_fin) then 2 end, -- Finalizado periodos posteriores&#xA;t.id_categoria_caso, --id_categoria_caso&#xA;1, -- Cant_paso_contacto&#xA;1, --id_marca_computo_contacto&#xA;0, -- cant_paso_contacto_nuevo&#xA;0, -- id_marca_vencimiento&#xA;0, --Cant_dias_vencidos&#xA;0, --Cant_dias_vencidos_unidad&#xA;0,    -- id_dias_reoslucion&#xA;0, --id_semana_fn_paso_contacto&#xA;0, -- cant_dias_resolucion&#xA;0, -- id_acreedor&#xA;'', --id_tipo_acreedor&#xA;0, --Cuit Acreedor&#xA;0, -- Unidad donde se vencio&#xA;0, -- Acumulado de contactos pendientes&#xA;0 as id_marca_contacto_resuelto_9hs,&#xA;null as fecha_carga_contacto,&#xA;0 as id_marca_computo_contacto_especifico_discapacidad,&#xA;0 as id_marca_resuelto_15min,&#xA;0 as id_marca_derivacion_contacto,&#xA;'1900-01-01 00:00:00.000' as fecha_cierre_fin_contacto,&#xA;0 as id_clasificacion_vencimiento_contacto,&#xA;0 as id_marca_maximo_paso_unidad,&#xA;0 as id_marca_contacto_resuelto_9hs_18hs,&#xA;0 as id_marca_computo_contacto_especifico_conectividad,&#xA;0 as id_periodo_productividad,&#xA; 0 as id_marca_finalizo_vencido_contacto,&#xA;0 as cant_dias_vencido_contacto_general,&#xA;0 as id_marca_resuelto_dia,&#xA;0 as id_marca_rango_dias_vencidos,&#xA;0 as  ID_clasificacion_vencimiento_impuestos,&#xA;0 as id_periodo_fin_paso_contacto_productividad,&#xA;0  as id_marca_finalizacion_paso_contacto_productividad,&#xA;0 as id_marca_generado_por_sector,&#xA;isnull(t.id_marca_mal_clasificado,0) as id_marca_mal_clasificado,&#xA;t.de_marca_mal_clasificado as obs_mal_clasificado,&#xA;isnull(t.fecha_marca_mal_clasificado,'1900-01-01 00:00:00.000')  as fecha_marca_mal_clasificado ,&#xA;isnull(t.usuario_marca_mal_clasificado,'F/D') as usuario_marca_mal_clasificado,&#xA;0 as id_marca_finalizacion_15_dias_discapacidad,&#xA;0 as id_usuario_carga_contacto,&#xA;0 as tiempo_minutos_detalle_total,&#xA;0 as id_marca_vencimiento_de_unidad,&#xA; id_estado_contacto,&#xA;id_estado_paso,&#xA;0 as id_marca_elimina_ultimo_paso,&#xA;0 as id_usuario_cierre_contacto,&#xA;t.id_tipo_caso,&#xA;0 as cant_minutos_planificado,&#xA;cant_informacion_incompleta,&#xA;cant_derivacion_incompleta,&#xA;cant_correspondia_resolucion_primer_contacto,&#xA;id_direccion_ss,&#xA;id_gerencia_ss,&#xA;0 as diff_min_fingreso_fcarga,&#xA;0 as diff_min_finicio_fcarga,&#xA;0 as diff_min_finicio_fingreso,&#xA;isnull(t.fecha_asignacion_paso_contacto,'1900-01-01 00:00:00.000'),&#xA;0 as diff_min_finicio_fasignacion,&#xA;id_persona,&#xA;dbo.DevuelvePeriodo(isnull(fecha_inicio_contacto,'1900-01-01')),&#xA;id_codigo_clasificacion_ampliado&#xA;FROM  AUX_H_CONTACTOS_INDICADORES_SS T &#xA;&#xA;-- Calculo el periodo de alta&#xA;select id_contacto, min(id_periodo) as id_periodo_alta_contacto into #temp_periodo_alta from h_contactos_indicadores_Ss group by id_contacto &#xA;update h_contactos_indicadores_Ss &#xA;set id_periodo_alta_contacto = t.id_periodo_alta_contacto&#xA;from h_contactos_indicadores_Ss h inner join #temp_periodo_alta t on t.id_contacto = h.id_contacto&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;--CALCULA LA UNIDAD DE ORIGEN&#xA;select id_contacto, id_unidad_organizacional_detalle_contacto  into #tempunidadcarga&#xA;from H_CONTACTOS_INDICADORES_SS where nro_orden_detalle_contacto = 1&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_unidad_organizacional_origen_contacto = t.id_unidad_organizacional_detalle_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempunidadcarga t on h.id_contacto = t.id_contacto&#xA;where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;--Almacena los contactos, la unidad de origen y la cantidad de unidades organizacionales diferente atraviesa &#xA;select id_contacto, id_unidad_organizacional_origen_contacto, COUNT(distinct id_unidad_organizacional_detalle_contacto) as cant_unidades into #tempcontactos&#xA;from H_CONTACTOS_INDICADORES_SS&#xA;group by id_contacto, id_unidad_organizacional_origen_contacto&#xA;&#xA;-- Almacena los ultimos pasos actuales de cada contacto&#xA;select id_contacto,max(nro_orden_detalle_contacto) as nro_orden into #tempcontpendiente &#xA;from H_CONTACTOS_INDICADORES_SS  &#xA;group by id_contacto&#xA;&#xA;-- Borra los ultimos pasos de cada contacto , que se genera sin objetivo alguno&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;and id_unidad_organizacional_detalle_contacto not in(304,451,392,112)&#xA;&#x9;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#x9;&#x9;and id_periodo_alta_contacto &gt;= @periodo&#xA;-- Aquellos casos que se originan en la misma unidad se eliminan salvo aquellos que no son transferidos a otra unidad en ninguna parte del proceso&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0 &#xA;where id_unidad_organizacional_origen_contacto not in(304,451,392,112)   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; and id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_origen_contacto&#xA;&#x9;&#x9;and id_categoria_caso &lt;&gt; 7 -- No tiene en cuenta los contactos automaticos (ya que estos tienen un solo paso y se generan en la misma unidad)&#xA;     &#x9;and id_contacto not in (select id_contacto from #tempcontactos where cant_unidades= 1)-- Los contactos donde se origino en la unidad pero no derivo nunca se cuenta&#xA;&#x9;&#x9;and id_periodo_alta_contacto &gt;= @periodo&#xA;-- Borra los ultimos pasos de cada contacto , que se genera sin objetivo alguno (PONE EN 1 aquellos que no hay que tener en cuenta)&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_elimina_ultimo_paso = 1&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#x9;&#x9;and id_periodo_alta_contacto &gt;= @periodo&#xA;--EXEPCIONES&#xA;--AFILIACIONES EMPRESA&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_categoria_caso not in (5,7) -- No es automatico y no essolicitud de clave&#xA;&#x9;and id_unidad_organizacional_detalle_contacto = 304 -- afilianciones empresa&#xA;&#x9;and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0 -- Pone la marca en 0&#xA;where id_unidad_organizacional_origen_contacto = 304 -- Afiliaciones empresa&#xA;and id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_origen_contacto and id_categoria_caso not in(5,7) --cuando la unidad origen es igual al detalle&#xA;and id_contacto not in (select id_contacto from #tempcontactos where cant_unidades= 1)&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;--Debitos de Auditoría Médica y Refacturación de Prestaciones&#xA;-- Elimina el ultimo paso &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_unidad_organizacional_detalle_contacto in (392,112) -- afilianciones empresa&#xA;&#x9;and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- Para la unidad Ejecutiva existen contactos que tienen un solo paso ya que no son cerrados adecuadamente y se deben tener en cuenta &#xA;select id_contacto, COUNT (*) as cant into #tempprueba&#xA;from H_CONTACTOS_INDICADORES_SS where id_unidad_organizacional_detalle_contacto = 451  &#xA; and id_unidad_organizacional_origen_contacto = 451 --Ejecutiva&#xA;group by id_contacto&#xA;having COUNT (*) = 1&#xA;order by id_contacto&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto = 1&#xA;from H_CONTACTOS_INDICADORES_SS&#xA;where id_contacto in (select id_contacto from #tempprueba) and id_marca_computo_contacto = 0 and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- Calculo cuales son los pasos nuevos por unidad en cada periodo, osea busca el minimo paso con la agrupacion correspondiente&#xA;select id_contacto, id_unidad_organizacional_detalle_contacto, min(id_periodo) id_periodo, min(nro_orden_detalle_contacto) as minimo_paso into #tempcontactosnuevos&#xA;from H_CONTACTOS_INDICADORES_SS &#xA;group by id_contacto, id_unidad_organizacional_detalle_contacto&#xA;-- Pongo en 1 la marca de los contactos nuevos segun la tabla calculada anteriormente&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_paso_contacto_nuevo = 1&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempcontactosnuevos t on t.id_contacto = h.id_contacto and t.id_periodo = h.id_periodo &#xA;and t.id_unidad_organizacional_detalle_contacto = h.id_unidad_organizacional_detalle_contacto and t.minimo_paso = h.nro_orden_detalle_contacto&#xA;where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- Para los contactos pendientes &#xA;-- Con la formula aportada por vale se calculan la horas transcurridas al dia de hoy pero se lo calcula en minutos para que haya concordancia con la columna y sea mas exacto&#xA;update H_CONTACTOS_INDICADORES_SS &#xA;set tiempo_minutos_detalle = ((Datediff(minute,fecha_ingreso_paso_contacto , GETDATE())/24 * 0.714) * 9 )&#xA;where id_marca_finalizacion_paso_contacto = 3 and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- Calcula marca de vencimiento, a los que ingresan vencidos les pone 1, a los que se vencieron en la unidad 2, a los resueltos a tiempo 3 y a los que esta pendiente 0&#xA;-- Setea la Maarca de finalizacion antes de 15 dias de discapacidad&#xA;--Calcula los dias laborales en los que se resolvio el caso&#xA;-- Calcula en que semana del mes (del 1º a la 4º o a la 5º dependiendo del mes) &#xA;-- Calcula la cantidad de dias en que demoro resolver el contacto&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_vencimiento =  case when  fecha_ingreso_paso_contacto &gt; fecha_vencimiento_contacto  then 1 --llego vencido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when  fecha_fin_paso_contacto &gt; fecha_vencimiento_contacto then 2 -- Vencio en la unidad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto &lt;= fecha_vencimiento_contacto and fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000'  then 3 -- Terminado a tiempo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and fecha_vencimiento_contacto &lt;= getdate() then 4 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and fecha_vencimiento_contacto &gt; getdate() then 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 0 end,&#xA; id_marca_finalizacion_discapacidad = case when tiempo_minutos_detalle &lt;= 3780 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 1-- Entre 0 y 7 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;      when tiempo_minutos_detalle &gt; 3780 and tiempo_minutos_detalle &lt;= 8100 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 2 -- Entre 8 y 15 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 8100 and tiempo_minutos_detalle &lt;= 10800 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 3 -- Entre 16 y 20 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 10800 and tiempo_minutos_detalle &lt;= 13500 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 4 -- Entre 21 y 25 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 13500 and tiempo_minutos_detalle &lt;= 16200 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 5 -- Entre 25 y 30 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle &gt; 13500 and tiempo_minutos_detalle &lt;= 16200 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 5 -- + de 30 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 end, -- Pendiente de resolucion&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  &#xA; id_dias_resolucion = case when tiempo_minutos_detalle / 60  &lt; 9 then 1 -- 1 dia&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 9 and 17 then 2 -- 2 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 18 and 26 then 3 --3 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 27 and 71 then 4 -- entre 4 y 8 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 72 and 98 then 5 -- entre 9 y 11 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 99 and 116 then 6 -- entre 12 y 13 dias&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 between 117 and 152 then 7 -- entre 14 y  17 dias &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when tiempo_minutos_detalle / 60 &gt;152 then 8 -- 18 dias o mas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 end,&#xA; id_semana_fin_paso_contacto = case when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' then 0 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else datepart(week,fecha_fin_paso_contacto) - datepart(week, dateadd(dd,-day(fecha_fin_paso_contacto)+1,fecha_fin_paso_contacto)) +1 end,&#xA; cant_dias_resolucion =  cast(tiempo_minutos_detalle as float) / 60 -- redondear int&#xA; where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;-- Para aquellos casos que llegan vencidos se calcula cuantos dias tarde llego&#xA;-- Para los casos que se vencieron en la unidad, se calcula cuantos casos tarda en vencerse&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_dias_vencidos = case when id_marca_vencimiento = 1 then datediff(day, fecha_vencimiento_contacto,fecha_ingreso_paso_contacto) else 0 end,&#xA;cant_dias_vencidos_unidad = case when id_marca_vencimiento = 2 then datediff(day,fecha_vencimiento_contacto,fecha_fin_paso_contacto) else 0 end&#xA;where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- Calcula el cuit del provedor &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cuit_acreedor = T.cuit_proveedor&#xA;from H_CONTACTOS_INDICADORES_SS h  inner join  AUX_H_CONTACTOS_INDICADORES_SS T  on h.id_contacto = T.id_contacto&#xA;where h.id_tipo_contacto = 3 and id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- A travez del cuit se calcula el acreedor y el tipo&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_acreedor = D.id_acreedor,&#xA;&#x9;id_tipo_prestador = D.id_tipo_prestador&#xA;from H_CONTACTOS_INDICADORES_SS h  &#x9;inner join dw_salud.dbo.D_ACREEDOR D on D.cuit = h.cuit_acreedor&#xA;where id_tipo_contacto = 3 and id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA; -- Calcula aquellos contactos que ingresaron vencidos&#xA;select id_contacto, id_unidad_organizacional_detalle_contacto&#xA;into #tempvencido&#xA;from H_CONTACTOS_INDICADORES_SS&#xA;where  id_marca_computo_contacto = 1  &#xA;and id_marca_vencimiento = 2&#x9;-- Ingreso vencido&#xA;order by id_contacto&#xA;&#xA;-- Setea la unidad donde se vencio el contacto&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_unidad_organizacional_donde_vencio = t.id_unidad_organizacional_detalle_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join #tempvencido t on h.id_contacto = t.id_contacto &#xA;where id_marca_vencimiento = 1 and id_marca_computo_contacto = 1&#xA;and id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;/*Selecciona todos los periodos de cada unidad donde hay contactos*/&#xA;select id_periodo, id_unidad_organizacional_detalle_contacto, 0 as acumuladoperiodo, 0 as acumuladoperiodoanterior&#xA;into #temppendientescompleto from H_CONTACTOS_INDICADORES_SS&#xA;&#xA;group by id_periodo, id_unidad_organizacional_detalle_contacto&#xA;order by id_unidad_organizacional_detalle_contacto,  id_periodo &#xA;&#xA;/*Selecciona los periodos de cada unidad en los que se hayan pendientes */&#xA;select id_periodo, id_unidad_organizacional_detalle_contacto, COUNT(*) cantcontactos , 0 as acumuladoperiodo, 0 as acumuladoperiodoanterior&#xA;into #temppendientes from H_CONTACTOS_INDICADORES_SS&#xA;where id_marca_computo_contacto = 1 &#xA;and id_estado_contacto &lt;&gt; 3  and id_estado_contacto_detalle = 0  ---id_marca_finalizacion_paso_contacto = 3&#xA;group by id_periodo, id_unidad_organizacional_detalle_contacto&#xA;order by id_unidad_organizacional_detalle_contacto,  id_periodo &#xA;&#xA;declare @acumulador int = 0&#xA;declare @id_unidad_organizacional_detalle_contacto int = (select min(id_unidad_organizacional_detalle_contacto) from #temppendientes)&#xA;  /* Por cada periodo le pone cuantos contactos pendiente tiene */&#xA;update #temppendientes&#xA;set  @acumulador = case when @id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_detalle_contacto then @acumulador + cantcontactos else cantcontactos end,&#xA;&#x9; @id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_detalle_contacto,&#xA;&#x9; acumuladoperiodo =  @acumulador &#xA;FROM #temppendientes H &#xA;&#xA;/* A cada periodo le actualiza para que no se tengan en cuenta los contactos pendiente de ese periodo*/&#xA;update #temppendientes&#xA;set acumuladoperiodoanterior = acumuladoperiodo-cantcontactos&#xA;&#xA;/*Se pasa lo calculado a la temporal donde estan todos los periodos*/&#xA;update #temppendientescompleto&#xA;set acumuladoperiodo = t1.acumuladoperiodo,&#xA;acumuladoperiodoanterior = t1.acumuladoperiodoanterior&#xA;from #temppendientescompleto t  inner join #temppendientes t1 &#xA;on t.id_periodo = t1.id_periodo and t.id_unidad_organizacional_detalle_contacto = t1.id_unidad_organizacional_detalle_contacto&#xA;&#xA;/*Quedan periodos en el medio sin contactos pendientes en los cuales deben tener valor hasta el proximo periodo con contactos pendientes*/&#xA;declare @unidad int = (select min(id_unidad_organizacional_detalle_contacto) from #temppendientescompleto where id_unidad_organizacional_detalle_contacto &lt;&gt; 0 )&#xA;declare @cantacumulado int = (select  top 1 acumuladoperiodo from #temppendientescompleto where id_unidad_organizacional_detalle_contacto =@unidad  )&#xA;declare  @cantacumuladoant int = 0&#xA;-- Setea el la cantidad de contactos pendientes hay hasta ese momento&#xA;update #temppendientescompleto&#xA;set acumuladoperiodoanterior = case  when  acumuladoperiodoanterior = 0 and acumuladoperiodo = 0 then @cantacumulado else acumuladoperiodoanterior end , &#xA;&#x9;@cantacumulado = case when acumuladoperiodo &lt;&gt; 0 then acumuladoperiodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_unidad_organizacional_detalle_contacto &lt;&gt; @unidad then acumuladoperiodo   &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else @cantacumulado end,&#xA;&#x9;@unidad = t.id_unidad_organizacional_detalle_contacto&#xA;from #temppendientescompleto t &#xA;&#xA;/*Se pasa la informacion a la tabla de contactos */&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set acumulado_cant_contactos_pendientes_periodo_anterior = acumuladoperiodoanterior&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #temppendientescompleto t &#xA;on t.id_periodo = h.id_periodo and&#xA; t.id_unidad_organizacional_detalle_contacto = h.id_unidad_organizacional_detalle_contacto&#xA;  where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;  -- Setea aquellos contactos que estan pendientes en 0, menor a 540 minutos (9 horas) en 1 y mayor en 2&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_contacto_resuelto_9hs = case when id_marca_finalizacion_paso_contacto = 3 then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_marca_finalizacion_paso_contacto &lt;&gt; 3 and tiempo_minutos_detalle &lt;= 540 then 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_marca_finalizacion_paso_contacto &lt;&gt; 3 and tiempo_minutos_detalle &gt; 540 then 2 end&#xA; where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;-- Calcula la minima fecha (donde se inicio el contacto) &#xA;select id_contacto, MIN(fecha_ingreso_paso_contacto) as fecha_carga_contacto into #tempMinimaFecha from H_CONTACTOS_INDICADORES_SS &#xA; group by id_contacto&#xA;&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set fecha_carga_contacto = c.fecha_carga_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempMinimaFecha c on h.id_contacto = c.id_contacto&#xA; where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;--EXISTE UN REPORTE ESPECIFICO DE DISCAPACIDAD QUE NECESITA UNA MARCA PARA PODER GENERARSE ADECUADAMENTE QUE SE CALCULA ACA&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_discapacidad = 1&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;where id_unidad_organizacional_detalle_contacto in (161)&#xA; and id_periodo_alta_contacto &gt;= @periodo&#xA;-- Calcula las marca de computo de contacto pero para el reporte especifico de discapacidad&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_discapacidad = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_unidad_organizacional_detalle_contacto in (161) -- Conectividad , Discapacidad , Recupero Sur&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#x9;and   id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;-- Calcula la marca para ver si se resolvio en 9horas (540 min) 18 horas (1080 min) o mas o si esta pendiente&#xA;-- Calcula aquellos que se resolvieron en menos de 15 min&#xA;UPDATE H_CONTACTOS_INDICADORES_SS&#xA;SET id_marca_contacto_resuelto_9hs_18hs = CASE WHEN tiempo_minutos_detalle &lt;=540 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 1 -- Resueleve en menos de 9 horas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when tiempo_minutos_detalle &gt; 540 and tiempo_minutos_detalle &lt;=1080 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 2 -- Resuelve entre 9 y 18 horas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when tiempo_minutos_detalle &gt; 1080 and id_marca_finalizacion_paso_contacto &lt;&gt; 3 then 3 -- Resuelve en mas de 18 horas&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   when  id_marca_finalizacion_paso_contacto = 3 then 0 -- No resuelto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   else 0 end,&#xA;&#x9;&#x9;id_marca_resuelto_15min = case when tiempo_minutos_detalle &lt;= 15 then 1 else 0 end&#xA;  where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- CALCULA FECHA MAXIMA PARA LOS CONTACTOS CERRADOS PARA SABER QUE DIA SE CERRO EL CONTACTO GLOBAL&#xA;select id_contacto, max(fecha_fin_paso_contacto) as fecha_maxima into #mayor_fecha&#xA;from H_CONTACTOS_INDICADORES_SS where id_marca_finalizacion_paso_contacto &lt;&gt; 3 and id_periodo_alta_contacto &gt;= @periodo &#xA;group by id_contacto&#xA;&#xA;-- setea la fecha de cierre del contacto total (a nivel cabecera)&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set fecha_cierre_final_contacto = fecha_maxima&#xA;from H_CONTACTOS_INDICADORES_SS H inner join #mayor_fecha t on H.id_contacto = t.id_contacto&#xA;where  id_periodo_alta_contacto &gt;= @periodo&#xA;-- CALCULA ESTADO DE VENCIMIENTO Y DETERMINA CLASIFICACION&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;SET id_clasificacion_vencimiento_contacto = case when fecha_ingreso_paso_contacto &gt; fecha_vencimiento_contacto then 1 --Ingresa Vencido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto &gt; fecha_vencimiento_contacto and fecha_cierre_final_contacto &gt; fecha_fin_paso_contacto then 3--Vence en el sector&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_cierre_final_contacto &gt; fecha_vencimiento_contacto and fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' then 4 -- Vence fuera del sector&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' then 5 -- No resuelto a la fecha&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 2 end -- Resuelto en tiempo y forma&#xA;where id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;&#xA;&#xA;&#xA;--CALCULA y SETEA la marca correspondiente segun si se DERIVO o no, tambien tiene en cuenta si es automatico o no&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_derivacion_contacto = case when id_categoria_caso = 7 then 3 -- automatico&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when id_categoria_caso &lt;&gt; 7 and t.cant_unidades = 1 and id_marca_resuelto_15min &lt;&gt; 1 then 1 -- abierto y cerrado unidad&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when id_categoria_caso &lt;&gt; 7 and t.cant_unidades = 1 and id_marca_resuelto_15min = 1 then 4 -- abierto y cerrado unidad en 15 min&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when id_categoria_caso &lt;&gt; 7 and t.cant_unidades &gt; 1 then 2 end-- derivado&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempcontactos t on t.id_contacto = h.id_contacto&#xA;where  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- CALCULA MARCA DE ESPECIFICO DE CONECTIVIDAD&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_conectividad = 1&#xA;where id_unidad_organizacional_detalle_contacto = 298 and   id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- SETEA LA MARCA PARA EL ESPECIFICO DE CONECTIVIDAD SEGUN LOS REQUISITOS NECESARIOS&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_computo_contacto_especifico_conectividad = 0&#xA;from H_CONTACTOS_INDICADORES_SS  h &#xA;inner join #tempcontpendiente t on t.id_contacto = h.id_contacto and t.nro_orden = h.nro_orden_detalle_contacto&#xA;where fecha_fin_paso_contacto &lt;&gt; '1900-01-01 00:00:00.000' -- el contacto esta cerrado&#xA;&#x9;and id_unidad_organizacional_detalle_contacto in (298) -- Conectividad&#xA;&#x9;and id_categoria_caso not in (7) -- no es automatico&#xA;&#x9;and nro_orden_detalle_contacto &lt;&gt;  1&#xA;&#x9;and   id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- CALCULA NUMERO MAXIMO DE PASO&#xA;select id_contacto,id_unidad_organizacional_detalle_contacto,max(nro_orden_detalle_contacto) as nro_orden into #tempulimopasos &#xA;from H_CONTACTOS_INDICADORES_SS &#xA;where id_marca_computo_contacto_especifico_conectividad = 1 -- BUSCA EL MAXIMO PASO TENIDO EN CUENTA POR LA MARCA DEL ESPECIFICO&#xA;&#xA;group by id_contacto, id_unidad_organizacional_detalle_contacto&#xA;&#xA;-- Setea el maximo paso de cada unidad siempre que SE TENGA EN CUENTA, SOLO PARA LOS ESPECIFICO DE CONECTIVIDAD &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_maximo_paso_unidad = 1&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #tempulimopasos t on h.id_contacto = t.id_contacto &#xA;and h.nro_orden_detalle_contacto = t.nro_orden&#xA;and h.id_unidad_organizacional_detalle_contacto = t.id_unidad_organizacional_detalle_contacto&#xA;&#xA;-- CALCULA PERIODO DE PRODUCTIVIDAD DE 15 A 16 DEL MES SIGUIENTE&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_productividad = case when datepart(day,fecha_ingreso_paso_contacto) &lt; 16 then id_periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;when datepart(day,fecha_ingreso_paso_contacto) &gt;= 16 then dw_salud.dbo.PeriodosPosteriores(id_periodo,2) end&#xA;where id_unidad_organizacional_detalle_contacto in (188, 458) -- Impuestos, autorizacion discapacidad ambulatoria&#xA;and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- SI SE ENCUENTRA EN LAS MARCAS 1 INGRESO VENCIDO, 2 SE VENCIO EN UNIDAD ,3 SE VENCIO FUERA DE LA UNIDAD, SE SETEA EN 1&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_finalizo_vencido_contacto = 1 &#xA;where id_clasificacion_vencimiento_contacto in (1,3,4)&#xA;and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- SEGUN EL TIPO DE CLASIFICACION SE CALCULA LA CANTIDAD DE DIAS VENCIDOS A NIVEL DE CONTACTO GENERAL&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set cant_dias_vencido_contacto_general = case when id_clasificacion_vencimiento_contacto = 1 then datediff(day , fecha_vencimiento_contacto,fecha_ingreso_paso_contacto)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_clasificacion_vencimiento_contacto = 3 then DATEDIFF(day, fecha_vencimiento_contacto,fecha_fin_paso_contacto)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when id_clasificacion_vencimiento_contacto = 4 then DATEDIFF(day, fecha_vencimiento_contacto,fecha_cierre_final_contacto)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 end&#xA;where   id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;-- CASO 1 CONTACTOS INGRESADOS ANTES DE LAS 16 HORAS &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where DATEpart(hh,fecha_ingreso_paso_contacto) &lt;16 and cast(fecha_ingreso_paso_contacto as date) = cast(fecha_fin_paso_contacto as date)&#xA;and DATEpart(hh,fecha_fin_paso_contacto) &lt;16  and  id_periodo_alta_contacto &gt;= @periodo&#xA;-- Caso 2 contactos ingresados despues de las 16 horas &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where DATEpart(hh,fecha_ingreso_paso_contacto) &gt;=16 and (fecha_fin_paso_contacto) &lt;= (select  DATEADD(hour,16,MIN(id_fecha)) &#xA;&#x9;  from D_FECHA where id_dia_habil = 1 and cast(id_fecha as date) &gt; cast(fecha_ingreso_paso_contacto as date))&#xA;&#x9;  and id_unidad_organizacional_detalle_contacto = 188  and  id_periodo_alta_contacto &gt;= @periodo &#xA;-- Caso 3 si llega sabado o domingo se resuelve el proximo dia habil antes de las 16 &#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where  DATEPART(dw, fecha_ingreso_paso_contacto)  in (7,1) and (fecha_fin_paso_contacto) &lt;= (select  DATEADD(hour,16,MIN(id_fecha)) &#xA;&#x9;  from D_FECHA where id_dia_habil = 1 and cast(id_fecha as date) &gt; cast(fecha_ingreso_paso_contacto as date))&#xA;&#x9;  and id_unidad_organizacional_detalle_contacto = 188  and  id_periodo_alta_contacto &gt;= @periodo&#xA;  &#xA;-- SEGUN LAS ESPECIFICACIONES DE IMPUESTOS  SE MARCA RESUELTO EN EL DIA&#xA;-- PARA LOS QUE NO TIENE EN CUENTA EL PROVEEDOR SE CUENTA COMO RESUELTO CUANDO SE RESUELVE EN 9HORAS&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_resuelto_dia = 1&#xA;where (id_tipo_contacto not in (7,3) or id_codigo_clasificacion not in ('10.13','10.22'))&#xA;&#x9;  and tiempo_minutos_detalle &lt;= 540&#xA;&#x9;  &#x9;  and id_unidad_organizacional_detalle_contacto = 188 and  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;--Clasifica el vencimiento para la unidad impuestos&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;SET ID_clasificacion_vencimiento_impuestos =  case when fecha_ingreso_paso_contacto &gt; fecha_vencimiento_contacto then 1 -- ingresa vencido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when fecha_fin_paso_contacto &gt; fecha_vencimiento_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt; fecha_vencimiento_contacto then 2 -- Vence en el sector &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 3 end -- normal&#xA;where id_periodo_alta_contacto &gt;= @periodo&#xA;--CALCULA SI EL SECTOR DETALLE ES IGUAL AL ORIGEN PARA MARCAR AQUELLOS PASOS QUE FUERON ORIGINADOS POR LA MISMA UNIDAD&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_marca_generado_por_sector = 1&#xA;where id_unidad_organizacional_detalle_contacto = id_unidad_organizacional_origen_contacto&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;and  id_periodo_alta_contacto &gt;= @periodo&#xA;--Calcula periodo de productividad&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_productividad = d.id_periodo_productividad&#xA;from H_CONTACTOS_INDICADORES_SS h inner join dw_salud.dbo.d_periodo_productividad_contacto d on h.id_unidad_organizacional_detalle_contacto = d.id_unidad_organizacional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where cast(fecha_ingreso_paso_contacto as date) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  between  fecha_inicio_periodo and fecha_fin_periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  and  id_periodo_alta_contacto &gt;= @periodo&#xA;--Calcula periodo de fin de paso de productividad&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_periodo_fin_paso_contacto_productividad = d.id_periodo_productividad&#xA;from H_CONTACTOS_INDICADORES_SS h inner join dw_salud.dbo.d_periodo_productividad_contacto d on h.id_unidad_organizacional_detalle_contacto = d.id_unidad_organizacional&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where cast(fecha_fin_paso_contacto as date) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  between  fecha_inicio_periodo and fecha_fin_periodo &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  and  id_periodo_alta_contacto &gt;= @periodo&#xA;-- Busco usuario de carga seleccionando el usuario del primer paso del contacto&#xA;select id_contacto,id_usuario_detalle_contacto into #temp_usuario_carga from H_CONTACTOS_INDICADORES_SS where nro_orden_detalle_contacto = 1 &#xA;-- A todo el contacto le paso el mismo usuario&#xA;update H_CONTACTOS_INDICADORES_SS&#xA;set id_usuario_carga_contacto = t.id_usuario_detalle_contacto&#xA;from H_CONTACTOS_INDICADORES_SS h inner join #temp_usuario_carga t on h.id_contacto = t.id_contacto&#xA;where  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;update h_contactos_indicadores_ss&#xA;set id_usuario_cierre_contacto = A.id_usuario_detalle_contacto&#xA;from h_contactos_indicadores_ss h inner join (select h.id_contacto, h.id_usuario_detalle_contacto from H_CONTACTOS_INDICADORES_SS h &#xA;inner join #tempcontpendiente t on h.id_Contacto = t.id_contacto and h.nro_orden_detalle_contacto = t.nro_orden) A&#xA;on h.id_contacto = a.id_contacto&#xA;where  id_periodo_alta_contacto &gt;= @periodo&#xA;&#xA;drop table #temp_usuario_carga &#xA;drop table #temppendientescompleto&#xA;drop table #temppendientes&#xA;drop table #tempcontpendiente&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\INSERTA H_CONTACTOS_PENDIENTES_INDICADORES_SS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{1F25C7E2-6349-4528-AA28-585702B249B9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="INSERTA H_CONTACTOS_PENDIENTES_INDICADORES_SS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="DECLARE @fechamin datetime&#xA;SET @fechamin = (select MIN(id_fecha) from d_fecha where id_fecha &gt; '2018-09-01 00:00:00.000' and id_fecha &lt; GETDATE() and id_fecha &#xA;not in (select fecha_stock_cantidad_pendiente from [H_CONTACTOS_PENDIENTES_INDICADORES_SS]))&#xA;--set @fechamin = '2018-10-26 00:00:0'&#xA;DECLARE @fecha datetime =@fechamin&#xA;DECLARE @fecha_max datetime&#xA;SET @fecha_max = GETDATE() - 1 &#xA;declare @cant_cont_finalizados int&#xA;declare @cant_cont_dia int&#xA;DECLARE @acumulado_ant int &#xA;&#xA;select distinct dbo.DevuelvePeriodo(@fechamin) as id_periodo ,id_unidad_organizacional_detalle_contacto &#xA;into #tempunidades  from h_contactos_pendientes_indicadores_ss  &#xA;&#xA;insert into [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;select distinct d.id_periodo,T.id_unidad_organizacional_detalle_contacto,id_fecha,  0,0,0,0  From d_fecha D&#xA;inner join #tempunidades T on D.id_periodo = T.id_periodo&#xA;where id_fecha &gt;= @fechamin and id_fecha &lt; GETDATE()-1 and id_fecha &#xA;not in (select fecha_stock_cantidad_pendiente from [H_CONTACTOS_PENDIENTES_INDICADORES_SS]) &#xA;order by id_fecha asc&#xA;&#xA;&#xA;&#xA;-- UNIDAD ORGANIZACIONAL AFILIACIONES&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;&#xA;&#xA;set @cant_cont_dia = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 49  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha + 1 --Modificar la fecha (no la hora )&#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1  -- Modificar la fecha (no la hora)&#xA;--and id_usuario_detalle_contacto not in (215,292,1584,675)&#xA;)&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] =  @cant_cont_dia &#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 49&#xA;&#xA;&#xA;&#xA;SET @fecha = @fecha + 1 &#xA;END&#xA;&#xA;&#xA;&#xA;--Reinicio la fecha&#xA;set @fecha = @fechamin&#xA;-- UNIDAD ORGANIZACIONAL RECAUDACION&#xA;-- ACUMULADO TOTAL&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;SET @acumulado_ant = (select [acumulado_cant_contactos_fecha_anterior] &#xA;from [H_CONTACTOS_PENDIENTES_INDICADORES_SS] where id_unidad_organizacional_detalle_contacto = 51 and fecha_stock_cantidad_pendiente = @fecha - 1)&#xA;&#xA;set @acumulado_ant = case when @acumulado_ant is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @acumulado_ant is not null then @acumulado_ant end&#xA;&#xA;set  @cant_cont_dia = (&#xA;select COUNT(*) from h_contactos_indicadores_ss &#xA;WHERE fecha_ingreso_paso_contacto &gt; @fecha  and fecha_ingreso_paso_contacto &lt; @fecha + 1 and id_marca_computo_contacto = 1 &#xA;and id_unidad_organizacional_detalle_contacto =51 and id_usuario_detalle_contacto not in (7,528,182,103,226,419,1213,405)   )&#xA;&#xA;set @cant_cont_dia = case when @cant_cont_dia is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @cant_cont_dia is not null then @cant_cont_dia end&#xA;&#xA;&#xA;set @cant_cont_finalizados  = (&#xA;select COUNT(*) from h_contactos_indicadores_ss &#xA;WHERE id_marca_computo_contacto = 1 &#xA;and id_unidad_organizacional_detalle_contacto = 51 and id_usuario_detalle_contacto not in (7,528,182,103,226,419,1213,405)   and  ((fecha_fin_paso_contacto &gt; @fecha  and fecha_fin_paso_contacto &lt; @fecha + 1)))--   or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'))&#xA;&#xA;set @cant_cont_finalizados = case when @cant_cont_finalizados is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @cant_cont_finalizados is not null then @cant_cont_finalizados end&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] = @acumulado_ant + @cant_cont_dia - @cant_cont_finalizados &#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 51&#xA;&#xA;SET @fecha = @fecha + 1 &#xA;END&#xA;&#xA;--ACUMULADO 7HRS&#xA;&#xA;DECLARE @fecha_indice datetime&#xA;set @fecha_indice = @fechamin&#xA;DECLARE @fecha_7hrs datetime&#xA;SET @fecha_7hrs =   DATEADD(hour,7,@fecha_indice)&#xA;DECLARE @fecha_ant datetime&#xA;SET @fecha_ant = @fecha_7hrs - 1&#xA;&#xA;WHILE (@fecha_max &gt;= @fecha_indice)&#xA;BEGIN&#xA;&#xA;SET @acumulado_ant = (select [acumulado_cant_contactos_pendientes_hasta_7hs_fecha_anterior] &#xA;from [H_CONTACTOS_PENDIENTES_INDICADORES_SS] where id_unidad_organizacional_detalle_contacto = 51 &#xA;and fecha_stock_cantidad_pendiente = @fecha_indice - 1)&#xA;/*&#xA;set @acumulado_ant = case when @acumulado_ant is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @acumulado_ant is not null then @acumulado_ant end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  */&#xA;set  @cant_cont_dia = (&#xA;select COUNT(*) from h_contactos_indicadores_ss &#xA;WHERE fecha_ingreso_paso_contacto &gt; @fecha_7hrs-1  and fecha_ingreso_paso_contacto &lt; @fecha_7hrs  and id_marca_computo_contacto = 1 &#xA;and id_unidad_organizacional_detalle_contacto =51 and id_usuario_detalle_contacto not in (7,528,182,103,226,419,1213,405)    )&#xA;&#xA;set @cant_cont_dia = case when @cant_cont_dia is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @cant_cont_dia is not null then @cant_cont_dia end&#xA;&#xA;&#xA;set @cant_cont_finalizados  = (&#xA;select COUNT(*) from h_contactos_indicadores_ss &#xA;WHERE id_marca_computo_contacto = 1 and id_usuario_detalle_contacto not in (7,528,182,103,226,419,1213,405) &#xA;and id_unidad_organizacional_detalle_contacto = 51  and  ((fecha_fin_paso_contacto &gt; @fecha_7hrs-1  and fecha_fin_paso_contacto &lt; @fecha_7hrs)))--   or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'))&#xA;&#xA;set @cant_cont_finalizados = case when @cant_cont_finalizados is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @cant_cont_finalizados is not null then @cant_cont_finalizados end&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_pendientes_hasta_7hs_fecha_anterior] = @acumulado_ant + @cant_cont_dia - @cant_cont_finalizados &#xA;where [fecha_stock_cantidad_pendiente] = @fecha_indice &#xA;and id_unidad_organizacional_detalle_contacto = 51&#xA;&#xA;&#xA;SET @fecha_7hrs = @fecha_7hrs + 1 &#xA;set @fecha_indice = @fecha_indice + 1&#xA;END&#xA;-- ACUMULADO 16 HRS&#xA;&#xA;--SET @fecha_indice = '2018-10-26 00:00:00.000'&#xA;set @fecha_indice = @fechamin&#xA;DECLARE @fecha_16hrs datetime&#xA;SET @fecha_16hrs =   DATEADD(hour,16,@fecha_indice)&#xA;SET @fecha_ant = @fecha_16hrs - 1&#xA;&#xA;&#xA;&#xA;SET @fecha_16hrs =  case when datepart(dw,@fecha_16hrs) = 6 then DATEADD(hour,-1,@fecha_16hrs) else @fecha_16hrs end&#xA;&#xA;&#xA;SET @fecha_ant = case when datepart(dw,@fecha_ant) = 6 then   DATEADD(hour,-1,@fecha_ant)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  when datepart(dw,@fecha_ant) = 7 then   DATEADD(hour,1,@fecha_ant)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  when datepart(dw,@fecha_ant) &lt; 6 then   @fecha_ant end &#xA;&#xA;&#xA;&#xA;WHILE (@fecha_max &gt;= @fecha_indice)&#xA;BEGIN&#xA;&#xA;SET @acumulado_ant = (select [acumulado_cant_contactos_pendientes_hasta_16hs_fecha_anterior] &#xA;from [H_CONTACTOS_PENDIENTES_INDICADORES_SS] where id_unidad_organizacional_detalle_contacto = 51 &#xA;and fecha_stock_cantidad_pendiente = @fecha_indice - 1)&#xA;/*&#xA;set @acumulado_ant = case when @acumulado_ant is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @acumulado_ant is not null then @acumulado_ant end&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  */&#xA;set  @cant_cont_dia = (&#xA;select COUNT(*) from h_contactos_indicadores_ss &#xA;WHERE fecha_ingreso_paso_contacto &gt; @fecha_ant  and fecha_ingreso_paso_contacto &lt; @fecha_16hrs and id_marca_computo_contacto = 1 &#xA;and id_unidad_organizacional_detalle_contacto =51 and id_usuario_detalle_contacto not in (7,528,182,103,226,419,1213,405)  )&#xA;&#xA;set @cant_cont_dia = case when @cant_cont_dia is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @cant_cont_dia is not null then @cant_cont_dia end&#xA;&#xA;&#xA;set @cant_cont_finalizados  = (&#xA;select COUNT(*) from h_contactos_indicadores_ss &#xA;WHERE id_marca_computo_contacto = 1 &#xA;and id_unidad_organizacional_detalle_contacto = 51 and&#xA; id_usuario_detalle_contacto not in (7,528,182,103,226,419,1213,405)  &#xA; and ((fecha_fin_paso_contacto &gt; @fecha_ant  and fecha_fin_paso_contacto &lt; @fecha_16hrs )))--   or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'))&#xA;&#xA;set @cant_cont_finalizados = case when @cant_cont_finalizados is null then 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  when  @cant_cont_finalizados is not null then @cant_cont_finalizados end&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_pendientes_hasta_16hs_fecha_anterior] = @acumulado_ant + @cant_cont_dia - @cant_cont_finalizados &#xA;where [fecha_stock_cantidad_pendiente] = @fecha_indice &#xA;and id_unidad_organizacional_detalle_contacto = 51&#xA;&#xA;&#xA;&#xA;&#xA;SET @fecha_16hrs  = @fecha_16hrs + 1&#xA;&#xA;SET @fecha_16hrs = case when datepart(dw,@fecha_16hrs) = 6 then   DATEADD(hour,-1,@fecha_16hrs)&#xA;&#x9;&#x9;&#x9; when datepart(dw,@fecha_16hrs) = 7 then   DATEADD(hour,1,@fecha_16hrs)&#xA;&#x9;&#x9;&#x9; when datepart(dw,@fecha_16hrs) &lt; 6 then   @fecha_16hrs end &#xA;&#xA;SET @fecha_ant  = @fecha_ant + 1&#xA;&#xA;SET @fecha_ant = case when datepart(dw,@fecha_ant) = 6 then   DATEADD(hour,-1,@fecha_ant)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  when datepart(dw,@fecha_ant) = 7 then   DATEADD(hour,1,@fecha_ant)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;  when datepart(dw,@fecha_ant) &lt; 6 then   @fecha_ant end &#xA;&#xA;&#xA;set @fecha_indice = @fecha_indice + 1&#xA;END&#xA;&#xA;&#xA;--Reinicio la fecha&#xA;set @fecha = @fechamin&#xA;-- UNIDAD ORGANIZACIONAL CARGA AFILIACIONES&#xA;-- ACUMULADO TOTAL&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;&#xA;set @cant_cont_dia = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 292  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha + 1 --Modificar la fecha (no la hora )&#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1)  -- Modificar la fecha (no la hora)&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] =  @cant_cont_dia &#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 292&#xA;&#xA;SET @fecha = @fecha + 1 &#xA;END&#xA;&#xA;--Reinicio la fecha&#xA;set @fecha = @fechamin&#xA;-- UNIDAD ORGANIZACIONAL AFILIACIONES EMPRESA&#xA;&#xA;declare @cant_cont_dia_7 int = 0&#xA;declare @cant_cont_dia_16 int = 0&#xA;DECLARE @fecha7 datetime&#xA;DECLARE @fecha16 datetime&#xA;&#xA;set @fecha7 = dateadd(hh,7,@fecha)&#xA;set @fecha16 = dateadd(hh,16,@fecha)&#xA;&#xA;-- ACUMULADO TOTAL&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;&#xA;set @cant_cont_dia = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = D.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 304  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha + 1 --Modificar la fecha (no la hora )&#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1)  -- Modificar la fecha (no la hora)&#xA;&#xA;&#xA;&#xA;set @cant_cont_dia_16 = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 304  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha16  &#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha16 &#xA;)&#xA;&#xA;-- Actualiza la cantidad de contactos antes de las 7&#xA;set @cant_cont_dia_7= (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 304  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha7 &#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha7   &#xA;)&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] =  @cant_cont_dia ,&#xA;[acumulado_cant_contactos_pendientes_hasta_16hs_fecha_anterior] =  @cant_cont_dia_16, &#xA; [acumulado_cant_contactos_pendientes_hasta_7hs_fecha_anterior] =  @cant_cont_dia_7&#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 304&#xA;&#xA;SET @fecha = @fecha + 1 &#xA;END&#xA;&#xA;&#xA;&#xA;--Reinicio la fecha&#xA;set @fecha = @fechamin&#xA;set  @cant_cont_dia_7  = 0&#xA;set  @cant_cont_dia_16  = 0&#xA;&#xA;&#xA;set @fecha7 = dateadd(hh,7,@fecha)&#xA;set @fecha16 = dateadd(hh,16,@fecha)&#xA;&#xA;&#xA;-- UNIDAD ORGANIZACIONAL LIQUIDACION&#xA;-- ACUMULADO TOTAL&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;&#xA;set @cant_cont_dia = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 311  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha + 1 --Modificar la fecha (no la hora )&#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1  -- Modificar la fecha (no la hora)&#xA;--and id_usuario_detalle_contacto not in (215,292,1584,675)&#xA;)&#xA;&#xA;-- Actualiza la cantidad de contactos antes de las 16&#xA;set @cant_cont_dia_16 = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 311  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha16  &#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha16 &#xA;)&#xA;&#xA;-- Actualiza la cantidad de contactos antes de las 7&#xA;set @cant_cont_dia_7= (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 311  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha7 &#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha7   &#xA;)&#xA;&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] =  @cant_cont_dia,&#xA; [acumulado_cant_contactos_pendientes_hasta_16hs_fecha_anterior] =  @cant_cont_dia_16, &#xA; [acumulado_cant_contactos_pendientes_hasta_7hs_fecha_anterior] =  @cant_cont_dia_7&#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 311&#xA;&#xA;&#xA;SET @fecha = @fecha + 1&#xA;SET @fecha7 = @fecha7 + 1 &#xA;SET @fecha16 = @fecha16 + 1 &#xA;&#xA;END&#xA;&#xA;&#xA;&#xA;&#xA;--Reinicio la fecha&#xA;set @fecha = @fechamin&#xA;-- UNIDAD ORGANIZACIONAL Obra Social&#xA;-- ACUMULADO TOTAL&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;set @cant_cont_dia = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 453  and &#xA; (fecha_fin_paso_contacto &gt;= @fecha + 1 --Modificar la fecha (no la hora )&#xA; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1)  -- Modificar la fecha (no la hora)&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] =  @cant_cont_dia &#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 453&#xA;SET @fecha = @fecha + 1 &#xA;END&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;--Reinicio la fecha&#xA;set @fecha = @fechamin&#xA;Declare @cant_pendiente_48 int = 0&#xA;-- UNIDAD ORGANIZACIONALReintegros Sede Central&#xA;-- ACUMULADO TOTAL&#xA;WHILE (@fecha_max &gt;= @fecha)&#xA;BEGIN&#xA;&#xA;set @cant_cont_dia = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 186  and &#xA; ((fecha_fin_paso_contacto &gt;= @fecha + 1 and id_categoria_caso &lt;&gt;7) --Modificar la fecha (no la hora )&#xA; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'  and id_categoria_caso &lt;&gt;7 )&#xA;or (id_codigo_clasificacion = '178.1' and fecha_fin_paso_contacto &gt;= @fecha + 1)) &#xA; &#xA; and id_marca_computo_contacto = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1)  -- Modificar la fecha (no la hora)&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;set @cant_pendiente_48 = (&#xA;select count(*)&#xA;from H_CONTACTOS_INDICADORES_SS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS D on id_usuario_detalle_contacto = d.id_usuario_carga_contacto&#xA; where id_unidad_organizacional_detalle_contacto = 186  and &#xA; ((fecha_fin_paso_contacto &gt;= @fecha + 1 and id_categoria_caso &lt;&gt;7) --Modificar la fecha (no la hora )&#xA; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'  and id_categoria_caso &lt;&gt;7 )&#xA;or (id_codigo_clasificacion = '178.1' and fecha_fin_paso_contacto &gt;= @fecha + 1)) &#xA; &#xA; and id_marca_computo_contacto = 1 and dbo.DiasHabiles(fecha_ingreso_paso_contacto,@fecha) &gt; 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha + 1)  -- Modificar la fecha (no la hora)&#xA;&#xA;&#xA;&#xA;update [H_CONTACTOS_PENDIENTES_INDICADORES_SS]&#xA;set [acumulado_cant_contactos_fecha_anterior] =  @cant_cont_dia ,&#xA;[acumulado_cant_contactos_pendientes_48hs]=  @cant_pendiente_48 &#xA;where [fecha_stock_cantidad_pendiente] = @fecha &#xA;and id_unidad_organizacional_detalle_contacto = 186&#xA;SET @fecha = @fecha + 1 &#xA;END&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\INSERTA H_CONTACTOS_RESUMEN_INDICADORES_SS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{c76780fb-954b-4b7b-b1ac-f654cb31b277}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="INSERTA H_CONTACTOS_RESUMEN_INDICADORES_SS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="&#x9;&#x9;declare @periodo int = (select dbo.PeriodosAnteriores(max(id_periodo),13) from H_CONTACTOS_INDICADORES_SS)&#xA;&#x9;&#x9;print @periodo&#xA;&#xA;select * into #temp_unidades from H_CONTACTOS_INDICADORES_SS  &#xA;where id_unidad_organizacional_detalle_contacto in(49,51,292,304,311,453,186,6,423,449,573,586,632,633,400,669)&#xA;and id_periodo &gt;= @periodo&#xA;&#xA;Create table #temp_diario&#xA;(fecha datetime not null,&#xA;id_unidad_organizacional_detalle_contacto int,&#xA;id_tipo_caso_contacto int,&#xA;id_codigo_clasificacion char(10),&#xA;[id_usuario_detalle_contacto] int,&#xA;tipo nvarchar(20),&#xA;stock int,&#xA;ingresados int,&#xA;cerrados int,&#xA;pendiente_48 int,&#xA;pendiente_5d int,&#xA;pendiente_16hs int,&#xA;pendiente_7hs int)&#xA;&#xA;&#xA;&#xA;&#x9;DECLARE @fecha7 datetime&#xA;&#x9;DECLARE @fecha16 datetime&#xA;&#x9;DECLARE @fecha datetime = (select MIN(id_fecha) from d_fecha where id_fecha &gt; '2018-08-01 00:00:00.000' and id_fecha &lt; GETDATE() and id_fecha &#xA;not in (select fecha_contactos_resumen from H_CONTACTOS_RESUMEN_INDICADORES_SS))&#xA;&#x9;DECLARE @fecha_max datetime = getdate()-1&#xA;&#xA;&#x9;WHILE (@fecha_max &gt;= @fecha)&#xA;&#x9;BEGIN&#xA;&#xA;&#x9;set @fecha7 = dateadd(hh,7,@fecha)&#xA;&#x9;set @fecha16 = dateadd(hh,16,@fecha)&#xA;&#x9;SET @fecha16 =  case when datepart(dw,@fecha16) = 6 then DATEADD(hour,-1,@fecha16) else @fecha16 end&#xA;&#xA;&#x9;      &#x9;insert into #temp_diario&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto],'Pendiente',count(*),0,0,0,0,0,0&#xA;&#x9;from #temp_unidades h &#xA;&#x9; where    ((fecha_fin_paso_contacto &gt;= @fecha + 1 and id_categoria_caso &lt;&gt;7)&#xA;&#x9; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and id_categoria_caso &lt;&gt;7 ) )&#xA;&#x9; and id_marca_computo_contacto = 1 &#xA;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt; @fecha + 1  &#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;union &#xA;&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto],'Ingresado',0, count(*),0,0,0,0,0&#xA;&#x9;from #temp_unidades&#xA;&#x9;where   cast(fecha_ingreso_paso_contacto as date) = @fecha&#xA;&#x9;and id_marca_computo_contacto = 1&#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;union &#xA;&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto],'Cerrados', 0,0,count(*),0,0,0,0&#xA;&#x9;from #temp_unidades&#xA;&#x9;where  cast(fecha_fin_paso_contacto as date) = @fecha&#xA;&#x9;and id_marca_computo_contacto = 1&#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA; &#xA;&#x9; union&#xA;&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,&#xA;&#x9;[id_usuario_detalle_contacto],'Pendientes_48hs',0,0,0,count(*),0,0,0&#xA;&#x9;from #temp_unidades h &#xA;&#x9; where  &#xA;&#x9; ((fecha_fin_paso_contacto &gt;= @fecha + 1 and id_categoria_caso &lt;&gt;7) --Modificar la fecha (no la hora )&#xA;&#x9; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'  and id_categoria_caso &lt;&gt;7 ))&#xA;&#x9; and id_marca_computo_contacto = 1 and dbo.DiasHabiles(fecha_ingreso_paso_contacto,@fecha) &gt; 2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt; @fecha + 1&#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;union&#xA;&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,&#xA;&#x9;[id_usuario_detalle_contacto],'Pendientes_5d',0,0,0,0,count(*),0,0&#xA;&#x9;from #temp_unidades h &#xA;&#x9; where  &#xA;&#x9; ((fecha_fin_paso_contacto &gt;= @fecha + 1 and id_categoria_caso &lt;&gt;7) --Modificar la fecha (no la hora )&#xA;&#x9; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000'  and id_categoria_caso &lt;&gt;7 ))&#xA;&#x9; and id_marca_computo_contacto = 1 and dbo.DiasHabiles(fecha_ingreso_paso_contacto,@fecha) &gt; 5&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt; @fecha + 1&#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;union&#xA;&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,&#xA;&#x9;[id_usuario_detalle_contacto],'Pendientes_16hs',0,0,0,0,0, count(*),0&#xA;&#x9;from #temp_unidades h &#xA;     where &#xA;&#x9; ((fecha_fin_paso_contacto &gt;= @fecha16  and id_categoria_caso &lt;&gt;7)&#xA;&#x9; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and id_categoria_caso &lt;&gt;7 ) )&#xA;&#x9; and id_marca_computo_contacto = 1&#xA;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha16 &#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;UNION&#xA;&#x9;-- Actualiza la cantidad de contactos antes de las 7&#xA;&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,&#xA;&#x9;[id_usuario_detalle_contacto],'Pendientes_7hs',0,0,0,0,0,0,count(*)&#xA;&#x9;from #temp_unidades h &#xA;&#x9; where&#x9; (fecha_fin_paso_contacto &gt;= @fecha7 &#xA;&#x9; or fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' ) &#xA;&#x9; and id_marca_computo_contacto = 1&#xA;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt;= @fecha7  &#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;insert into H_CONTACTOS_RESUMEN_INDICADORES_SS&#xA;&#x9;select dbo.DevuelvePeriodo(fecha) ,id_unidad_organizacional_detalle_contacto,fecha, sum(ingresados),sum(cerrados),&#xA;&#x9;sum(stock),sum(pendiente_7hs),sum(pendiente_16hs),sum(pendiente_48),id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto],sum(pendiente_5d),0,0,DATEPART(dw,@fecha)&#xA;&#x9;from #temp_diario&#xA;&#x9;group by  id_unidad_organizacional_detalle_contacto,fecha, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;&#x9;update H_CONTACTOS_RESUMEN_INDICADORES_SS&#xA;&#x9;set id_gerencia_ss = h.id_gerencia_ss,&#xA;&#x9;&#x9;id_direccion_ss = h.id_direccion_ss&#xA;&#x9;&#x9;from H_CONTACTOS_RESUMEN_INDICADORES_SS r inner join H_CONTACTOS_INDICADORES_SS h&#xA;&#x9;&#x9;on h.id_unidad_organizacional_detalle_contacto = r.id_unidad_organizacional_detalle_contacto&#xA;&#x9;&#x9;where fecha_contactos_resumen = @fecha&#xA;&#xA;&#x9;Truncate table #temp_diario&#xA;&#x9;set @fecha = @fecha + 1&#xA;&#x9;END&#xA;&#xA;&#xA;if DATEPART(dw,getdate()) = 2&#xA;begin&#xA;set @fecha = (select max(id_fecha) from d_fecha where DATEPART(dw,id_fecha) = 1)&#xA;&#xA;select * into #temp_unidades_viernes from H_CONTACTOS_INDICADORES_SS  &#xA;where id_unidad_organizacional_detalle_contacto not in(49,51,292,304,311,453,186,6,423,449,573,586,632,633,400,669)&#xA;and id_periodo &gt;= @periodo&#xA;&#xA;truncate table #temp_diario&#xA;/*Create table #temp_diario_viernes&#xA;(fecha datetime not null,&#xA;id_unidad_organizacional_detalle_contacto int,&#xA;id_tipo_caso_contacto int,&#xA;id_codigo_clasificacion char(10),&#xA;[id_usuario_detalle_contacto] int,&#xA;tipo nvarchar(20),&#xA;stock int,&#xA;ingresados int,&#xA;cerrados int,&#xA;pendiente_48 int,&#xA;pendiente_5d int,&#xA;pendiente_16hs int,&#xA;pendiente_7hs int)&#xA;*/&#xA;&#xA;&#xA;&#x9;insert into #temp_diario&#xA;&#x9;select @fecha,id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto],'Pendiente',count(*),0,0,0,0,0,0&#xA;&#x9;from #temp_unidades_viernes h &#xA;&#x9; where    ((fecha_fin_paso_contacto &gt;= @fecha + 1 and id_categoria_caso &lt;&gt;7)&#xA;&#x9; or (fecha_fin_paso_contacto = '1900-01-01 00:00:00.000' and id_categoria_caso &lt;&gt;7 ) )&#xA;&#x9; &#x9; and id_marca_elimina_ultimo_paso = 0 &#xA;&#x9;&#x9;and fecha_ingreso_paso_contacto &lt; @fecha + 1  &#xA;&#x9;group by id_unidad_organizacional_detalle_contacto, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;insert into H_CONTACTOS_RESUMEN_INDICADORES_SS&#xA;&#x9;select dbo.DevuelvePeriodo(fecha) ,id_unidad_organizacional_detalle_contacto,fecha, 0,0,&#xA;&#x9;sum(stock),0,0,0,0,0,0,0,0,0,DATEPART(dw,fecha)&#xA;&#x9;from #temp_diario&#xA;&#x9;group by  id_unidad_organizacional_detalle_contacto,fecha, id_tipo_caso_contacto,id_codigo_clasificacion,[id_usuario_detalle_contacto]&#xA;&#xA;&#x9;update H_CONTACTOS_RESUMEN_INDICADORES_SS&#xA;&#x9;set id_gerencia_ss = h.id_gerencia_ss,&#xA;&#x9;&#x9;id_direccion_ss = h.id_direccion_ss&#xA;&#x9;&#x9;from H_CONTACTOS_RESUMEN_INDICADORES_SS r inner join H_CONTACTOS_INDICADORES_SS h&#xA;&#x9;&#x9;on h.id_unidad_organizacional_detalle_contacto = r.id_unidad_organizacional_detalle_contacto&#xA;&#x9;&#x9;where fecha_contactos_resumen = @fecha&#xA;&#xA;end" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F07EA274-E0C0-43FE-A7E3-0F5761634EB8}"
      DTS:From="Package\Borra tablas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{84069188-76CF-4CB0-B096-C82D53FB8818}"
      DTS:From="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Inserta en H_CONTACTOS_INDICADORES_SS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{DC96688F-403A-46D3-9967-B91026FB2243}"
      DTS:From="Package\Inserta en H_CONTACTOS_INDICADORES_SS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Actualiza H_CONTACTOS_INDICADORES_SS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{B34FA1C7-CCE3-4154-AEE7-F0C78EFA84ED}"
      DTS:From="Package\Actualiza H_CONTACTOS_INDICADORES_SS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\INSERTA H_CONTACTOS_PENDIENTES_INDICADORES_SS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{DC4EAA1E-2E17-494D-9483-ABD6456CE829}"
      DTS:From="Package\INSERTA H_CONTACTOS_PENDIENTES_INDICADORES_SS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\INSERTA H_CONTACTOS_RESUMEN_INDICADORES_SS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{466E0EAE-2C39-4E0B-9D73-4856318ECB9A}"
      DTS:From="Package\INSERTA H_CONTACTOS_RESUMEN_INDICADORES_SS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\Actualiza D_PERIODO y D_MES" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{B19351AE-024A-4AFB-ACAF-CD0F1767070F}"
      DTS:From="Package\Inserta en H_CONTACTOS_INDICADORES_SS 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Actualiza H_CONTACTOS_INDICADORES_SS 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 3]"
      DTS:CreationName=""
      DTS:DTSID="{77A6AEB2-5F90-43EA-B7BC-A8EB167D2CB3}"
      DTS:From="Package\Actualiza H_CONTACTOS_INDICADORES_SS 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 3"
      DTS:To="Package\INSERTA H_CONTACTOS_RESUMEN_INDICADORES_SS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 4]"
      DTS:CreationName=""
      DTS:DTSID="{7A92F2FD-22CE-4B74-B164-40A711E5594B}"
      DTS:From="Package\Borra tablas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 4"
      DTS:To="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE 1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 5]"
      DTS:CreationName=""
      DTS:DTSID="{BE0E6AF1-9222-482B-BA69-6FE8CED61165}"
      DTS:From="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE 1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 5"
      DTS:To="Package\Inserta en H_CONTACTOS_INDICADORES_SS 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="376,42"
          Id="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE"
          TopLeft="159.793650793651,92.4150943396227" />
        <NodeLayout
          Size="376,42"
          Id="Package\Actualiza AUX_H_CONTACTOS_INDICADORES_DETALLE 1"
          TopLeft="569,95" />
        <NodeLayout
          Size="241,42"
          Id="Package\Actualiza D_PERIODO y D_MES"
          TopLeft="221.293650793651,512.444444444444" />
        <NodeLayout
          Size="313,42"
          Id="Package\Actualiza H_CONTACTOS_INDICADORES_SS"
          TopLeft="191.293650793651,254.245283018868" />
        <NodeLayout
          Size="322,42"
          Id="Package\Actualiza H_CONTACTOS_INDICADORES_SS 1"
          TopLeft="561,255" />
        <NodeLayout
          Size="138,42"
          Id="Package\Borra tablas"
          TopLeft="278.793650793651,11.5" />
        <NodeLayout
          Size="317,42"
          Id="Package\Inserta en H_CONTACTOS_INDICADORES_SS"
          TopLeft="188.293650793651,173.330188679245" />
        <NodeLayout
          Size="317,42"
          Id="Package\Inserta en H_CONTACTOS_INDICADORES_SS 1"
          TopLeft="555.793650793651,181.444444444444" />
        <NodeLayout
          Size="392,42"
          Id="Package\INSERTA H_CONTACTOS_PENDIENTES_INDICADORES_SS"
          TopLeft="151.793650793651,335.160377358491" />
        <NodeLayout
          Size="377,42"
          Id="Package\INSERTA H_CONTACTOS_RESUMEN_INDICADORES_SS"
          TopLeft="159.293650793651,437.160377358491" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="347.793650793651,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9150943396227"
              Start="0,0"
              End="0,31.4150943396227">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4150943396227" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="347.293650793651,134.415094339623">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9150943396223"
              Start="0,0"
              End="0,31.4150943396223">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4150943396223" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="347.293650793651,215.330188679245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.915094339623"
              Start="0,0"
              End="0,31.415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="347.793650793651,296.245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.915094339623"
              Start="0,0"
              End="0,31.415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="347.793650793651,377.160377358491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.5,60"
              Start="0,0"
              End="-61.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.8478605388273" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.8478605388273"
                    Point2="0,35.8478605388273"
                    Point3="-4,35.8478605388273" />
                  <mssgle:LineSegment
                    End="-57.5,35.8478605388273" />
                  <mssgle:CubicBezierSegment
                    Point1="-57.5,35.8478605388273"
                    Point2="-61.5,35.8478605388273"
                    Point3="-61.5,39.8478605388273" />
                  <mssgle:LineSegment
                    End="-61.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="344.793650793651,479.160377358491">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.284067085953"
              Start="0,0"
              End="0,25.784067085953">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.784067085953" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="718.146825396826,223.444444444444">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.555555555556"
              Start="0,0"
              End="0,24.055555555556">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.055555555556" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 3]"
          TopLeft="722,297">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-312.706349206349,140.160377358491"
              Start="0,0"
              End="-312.706349206349,132.660377358491">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.7408276769431" />
                  <mssgle:CubicBezierSegment
                    Point1="0,79.7408276769431"
                    Point2="0,83.7408276769431"
                    Point3="-4,83.7408276769431" />
                  <mssgle:LineSegment
                    End="-308.706349206349,83.7408276769431" />
                  <mssgle:CubicBezierSegment
                    Point1="-308.706349206349,83.7408276769431"
                    Point2="-312.706349206349,83.7408276769431"
                    Point3="-312.706349206349,87.7408276769431" />
                  <mssgle:LineSegment
                    End="-312.706349206349,132.660377358491" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 4]"
          TopLeft="369.460317460318,53.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="387.539682539682,41.5"
              Start="0,0"
              End="387.539682539682,34">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.8853868194842" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.8853868194842"
                    Point2="0,16.8853868194842"
                    Point3="4,16.8853868194842" />
                  <mssgle:LineSegment
                    End="383.539682539682,16.8853868194842" />
                  <mssgle:CubicBezierSegment
                    Point1="383.539682539682,16.8853868194842"
                    Point2="387.539682539682,16.8853868194842"
                    Point3="387.539682539682,20.8853868194842" />
                  <mssgle:LineSegment
                    End="387.539682539682,34" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 5]"
          TopLeft="757,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-42.7063492063489,44.444444444444"
              Start="0,0"
              End="-42.7063492063489,36.944444444444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.222222222222" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.222222222222"
                    Point2="0,22.222222222222"
                    Point3="-4,22.222222222222" />
                  <mssgle:LineSegment
                    End="-38.7063492063489,22.222222222222" />
                  <mssgle:CubicBezierSegment
                    Point1="-38.7063492063489,22.222222222222"
                    Point2="-42.7063492063489,22.222222222222"
                    Point3="-42.7063492063489,26.222222222222" />
                  <mssgle:LineSegment
                    End="-42.7063492063489,36.944444444444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>