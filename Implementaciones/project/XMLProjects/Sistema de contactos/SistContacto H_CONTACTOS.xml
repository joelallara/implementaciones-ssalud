<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/3/2017 8:43:13 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\nborio"
  DTS:DTSID="{77B24D1B-72FA-443F-8ACD-315FE00F9014}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="SistContacto H_CONTACTOS"
  DTS:PackageType="5"
  DTS:VersionBuild="189"
  DTS:VersionGUID="{5A3A7F27-AF95-4669-A8C9-524693B3277F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{DB377F72-37F0-472B-8BE5-51CA6331015D}"
      DTS:ObjectName="SSIS log provider for SQL Server1">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{11B3D15F-1CBA-4EB5-B4C8-3D9A98280E3D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Fecha">
      <DTS:VariableValue
        DTS:DataType="7">8/3/2017 9:26:19 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0C4F2042-3C06-4F8F-8B77-CF6F97C17752}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Periodo">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{DB377F72-37F0-472B-8BE5-51CA6331015D}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza cascada y marcas en H_CONTACTOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5676D1E1-DC8F-4806-876D-5618CE96C0AB}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza cascada y marcas en H_CONTACTOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="declare @periodo int = (select dbo.PeriodosAnteriores(dbo.DevuelvePeriodo(GETDATE()),09) as id_periodo)&#xA;declare @periodomax  int = (select max(id_periodo) from h_contactos)&#xA;&#xA;---- Actualizacion a la   H_ENCUESTAS_ATENCION_PERSONAL  por id_empresa_legajo_supervisor_zonal e id_legajo_supervisor_zonal&#xA;UPDATE H_CONTACTOS&#xA;SET id_empresa_legajo_gerente = p.id_empresa_legajo_gerente,&#xA;id_legajo_gerente =  p.id_legajo_gerente,&#xA; id_empresa_legajo_jefe_regional = p.id_empresa_legajo_jefe_regional,&#xA;id_legajo_jefe_regional = p.id_legajo_jefe_regional,&#xA;id_empresa_legajo_supervisor_zonal =  p.id_empresa_legajo_supervisor_zonal,&#xA;id_legajo_supervisor_zonal = p.id_legajo_supervisor_zonal,&#xA;id_empresa_legajo_responsable_car = 'F/D',&#xA;id_legajo_responsable_car = 0,&#xA;id_empresa_legajo_oficial_atencion = 'F/D',&#xA;id_legajo_oficial_atencion =  0&#xA;from H_CONTACTOS h inner join D_USUARIOS_CARGA_CONTACTOS d  on h.id_usuario_carga_contacto = d.id_usuario_carga_contacto&#xA;inner join D_PERSONAS_CASCADA_ATENCION c on d.de_usuario_carga_contacto = c.id_usuario_red&#xA;inner join H_CASCADA_ATENCION p on p.id_empresa_legajo_supervisor_zonal = c.id_empresa_legajo &#xA;&#x9;and p.id_legajo_supervisor_zonal = c.id_legajo and h.id_periodo = p.id_periodo&#xA;&#xA;&#xA;--- Actualizacion a la   H_ENCUESTAS_ATENCION_PERSONAL  por id_empresa_legajo_responsable_car e id_legajo_responsable_car&#xA;UPDATE H_CONTACTOS&#xA;SET id_empresa_legajo_gerente = p.id_empresa_legajo_gerente,&#xA;id_legajo_gerente =  p.id_legajo_gerente,&#xA; id_empresa_legajo_jefe_regional = p.id_empresa_legajo_jefe_regional,&#xA;id_legajo_jefe_regional = p.id_legajo_jefe_regional,&#xA;id_empresa_legajo_supervisor_zonal =  p.id_empresa_legajo_supervisor_zonal,&#xA;id_legajo_supervisor_zonal = p.id_legajo_supervisor_zonal,&#xA;id_empresa_legajo_responsable_car = p.id_empresa_legajo_responsable_car,&#xA;id_legajo_responsable_car = p.id_legajo_responsable_car,&#xA;id_empresa_legajo_oficial_atencion = 'F/D',&#xA;id_legajo_oficial_atencion =  0&#xA;from H_CONTACTOS h &#xA;inner join D_USUARIOS_CARGA_CONTACTOS d  on h.id_usuario_carga_contacto = d.id_usuario_carga_contacto&#xA;inner join D_PERSONAS_CASCADA_ATENCION c on d.de_usuario_carga_contacto = c.id_usuario_red&#xA;inner join H_CASCADA_ATENCION p on p.id_empresa_legajo_responsable_car = c.id_empresa_legajo &#xA;&#x9;and p.id_legajo_responsable_car = c.id_legajo and h.id_periodo = p.id_periodo&#xA;&#xA;&#xA;&#xA;---- Actualizacion a la   H_ENCUESTAS_ATENCION_PERSONAL  por id_empresa_legajo_oficial_atencion e id_legajo_oficial_atencion&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_empresa_legajo_gerente = p.id_empresa_legajo_gerente,&#xA;id_legajo_gerente =  p.id_legajo_gerente,&#xA; id_empresa_legajo_jefe_regional = p.id_empresa_legajo_jefe_regional,&#xA;id_legajo_jefe_regional = p.id_legajo_jefe_regional,&#xA;id_empresa_legajo_supervisor_zonal =  p.id_empresa_legajo_supervisor_zonal,&#xA;id_legajo_supervisor_zonal = p.id_legajo_supervisor_zonal,&#xA;id_empresa_legajo_responsable_car = p.id_empresa_legajo_responsable_car,&#xA;id_legajo_responsable_car = p.id_legajo_responsable_car,&#xA;id_empresa_legajo_oficial_atencion = p.id_empresa_legajo_oficial_atencion,&#xA;id_legajo_oficial_atencion =  p.id_legajo_oficial_atencion&#xA;from H_CONTACTOS h inner join D_USUARIOS_CARGA_CONTACTOS d  on h.id_usuario_carga_contacto = d.id_usuario_carga_contacto&#xA;inner join D_PERSONAS_CASCADA_ATENCION c on d.de_usuario_carga_contacto = c.id_usuario_red&#xA;inner join H_CASCADA_ATENCION p on p.id_empresa_legajo_oficial_atencion = c.id_empresa_legajo &#xA;&#x9;and p.id_legajo_oficial_atencion = c.id_legajo and h.id_periodo = p.id_periodo&#xA;&#xA;&#xA;/* Los contactos que quedan on campos en null los pone por defecto */ &#xA;update H_CONTACTOS&#xA;SET id_empresa_legajo_gerente = 'F/D',&#xA;id_legajo_gerente =  0&#xA;where id_empresa_legajo_gerente is null&#xA;&#xA;update H_CONTACTOS&#xA; set id_empresa_legajo_jefe_regional = 'F/D',&#xA;id_legajo_jefe_regional = 0&#xA;where id_empresa_legajo_jefe_regional is null&#xA;&#xA;update H_CONTACTOS&#xA; set id_empresa_legajo_supervisor_zonal =  'F/D',&#xA;id_legajo_supervisor_zonal = 0&#xA;where id_empresa_legajo_supervisor_zonal is null&#xA;&#xA;update H_CONTACTOS&#xA; set id_empresa_legajo_responsable_car = 'F/D',&#xA;id_legajo_responsable_car = 0&#xA;where id_empresa_legajo_responsable_car is null&#xA;&#xA;update H_CONTACTOS&#xA; set id_empresa_legajo_oficial_atencion = 'F/D',&#xA;id_legajo_oficial_atencion =  0&#xA;where id_empresa_legajo_oficial_atencion is null&#xA;&#xA;&#xA;&#xA;-- MARCAS DE REFERIDOS&#xA;--Seteo la marca a aquellos que cumpen las condiciones confirmadas para la primer metrica &#xA;update H_CONTACTOS&#xA;set id_marca_cant_asociados_potenciales = 1&#xA;from H_CONTACTOS&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'&#xA;and id_categoria_contacto in (1,6,3)&#xA;and id_tipo_caso_contacto &lt;&gt; 162&#xA;&#xA;--Seteo la marca a aquellos que cumpen las condiciones confirmadas para la segunda metrica &#xA;update H_CONTACTOS&#xA;set id_marca_cant_referidos = 1&#xA;from H_CONTACTOS&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'&#xA;and id_categoria_contacto in (1,6,3)&#xA;and id_tipo_caso_contacto &lt;&gt; 162&#xA;and id_codigo_clasificacion = '185.1'&#xA;&#xA;&#xA;--Seteo la marcas de baja para los periodos que ya fueron congelados y no cambia mas&#xA;update h_contactos&#xA;set id_marca_baja_referido  = t.id_marca_baja_referido &#xA;from h_contactos h inner join TEMP_H_CONTACTOS_BAJAS t on h.id_periodo = t.id_periodo and h.id_persona = t.id_persona&#xA;where h.id_periodo &gt;= @periodo  and h.id_periodo &lt; @periodomax  &#xA;&#xA;-- CARGA LAS PERSONAS QUE ESTAN ACTIVAS, el resto son bajas&#xA;select *  into #persona_fecha from openquery(host03, 'SELECT distinct w06npe as id_persona&#xA;&#x9;FROM SMPLIBD.M06fafi&#xA;&#x9;inner join SMPLIBD.m07fdat on w06naf= w07naf and w06saf = w07saf&#xA;&#x9;inner join SMPDATD.t13fpro on w07pro = w13pro&#xA;&#x9;where   w07PRO NOT IN (18)&#xA;&#x9;and w13cpr = ''S'' &#xA;&#x9;and w06FBF = 0 ')&#xA;&#x9;-- parte dos &#xA;-- PARA EL PERIODO ACTUAL CAMBIO LA MARCA DE BAJA TODOS LOS DIAS HASTA QUE TERMINE EL MES&#xA;update H_CONTACTOS&#xA;set id_marca_baja_referido = 1&#xA;where id_persona &lt;&gt; 0 and id_persona not in (select id_persona from #persona_fecha)&#xA;and id_periodo = @periodomax  &#xA;&#xA;&#xA;-- Actualiza marcas de referidos&#xA;update H_CONTACTOS&#xA;set id_marca_cant_asociados_potenciales = 1&#xA;from H_CONTACTOS&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'&#xA;and id_categoria_contacto in (1,6,3)&#xA;and id_tipo_caso_contacto &lt;&gt; 162&#xA;and id_marca_baja_referido = 0&#xA;&#xA;&#xA;update H_CONTACTOS&#xA;set id_marca_cant_referidos = 1&#xA;from H_CONTACTOS&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'&#xA;and id_categoria_contacto in (1,6,3)&#xA;and id_tipo_caso_contacto &lt;&gt; 162&#xA;and id_codigo_clasificacion = '185.1'&#xA;and id_marca_baja_referido = 0&#xA;&#xA;update H_CONTACTOS&#xA;set [id_marca_potenciales_captados] = 1&#xA;from H_CONTACTOS&#xA;where id_tipo_contacto = 6  and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'&#xA;&#xA;&#xA;-- SEGUN LOS METADATOS PONGO EN 0 A AQUELLOS QUE NO CUMPLEN LAS CONDICIONES&#xA;update H_CONTACTOS&#xA;set [id_marca_potenciales_captados] = 0&#xA;from H_CONTACTOS h&#xA;inner join H_METADATOS_CONTACTOS m on h.id_contacto = m.id_contacto&#xA;where id_tipo_contacto = 6  and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'&#xA;and id_codigo_clasificacion = '50.5'&#xA;and (id_metadato_contactos = 1894 and marca_metadato = 0) -- METADATO REFERIDO = SI = 0 (QUE NO ESTE MARCADO SI)&#xA;-- CARGO EL TIPO DE VENTA&#xA; update  h_contactos&#xA; set id_tipo_venta = 0&#xA;where id_periodo &gt;=@periodo &#xA;&#xA;&#xA; update  h_contactos&#xA; set id_tipo_venta = sv.id_tipo_venta&#xA; from H_CONTACTOS h inner join  H_COMER_STOCK_AFILIA  s on h.id_periodo = s.id_periodo and h.id_persona = s.id_persona&#xA;&#x9;inner join H_CONVENIOS_EMPRESAS c on s.id_periodo = c.id_periodo and s.id_convenio = c.id_convenio and c.id_tipo_entidad_convenio = s.id_tipo_entidad_convenio&#xA;&#x9;inner join D_SUBTIPOS_VENTA sv on sv.id_subtipo_venta = c.id_subtipo_venta&#xA;where h.id_periodo &gt;=@periodo &#xA;&#xA;&#xA;&#xA;&#xA;--- MARCAS CAMBIO FORMA DE PAGO&#xA;&#xA;&#xA;&#xA; ---PAGO FACIl TOMO TODAS LAS PERSONAS QUE TINENEN PAGO FACIL COMO METODO DE PAGO&#xA;select id_persona, id_forma_pago, s.id_periodo , s.id_tipo_entidad_convenio&#xA;into #temp_pagofacil&#xA;from H_COMER_STOCK_AFILIA  s&#xA;where id_forma_pago = 'PGF'&#xA;and s.id_periodo &gt;= @periodo  &#xA; &#xA; -- SETEO EL DEFECTO DE LA MARCA&#xA; update h_contactos&#xA; set cant_asoc_unicos_PF = 9&#xA; where id_periodo &gt;= @periodo &#xA;&#xA; -- A PARTIR DE LAS CONDICIONES DEFINIDAS POR EL USUARIO SE PONE LA PRIMER MARCA&#xA;update H_CONTACTOS&#xA;set cant_asoc_unicos_PF = 1&#xA;from H_CONTACTOS h inner join #temp_pagofacil t&#xA;&#x9;on h.id_persona = t.id_persona and t.id_periodo = dbo.periodosanteriores(h.id_periodo,2)&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'-- hasta aca ok&#xA;and id_categoria_contacto not in (7,8)&#xA;and id_marca_baja_referido = 0&#xA;and id_plan_producto &lt;&gt; 'OS'&#xA;and h.id_periodo &gt;= @periodo &#xA;&#xA;&#xA;-- METRICA 3 &#xA;-- Paso todos los contactos que corresponden a los metadatos para poder armar las combinaciones correctas&#xA;-- PONGO TODOS LOS CONTACTOS CON CADA METADATO EN UNA SOLA FILA&#xA;&#x9;select h.*,h1.id_metadato_contactos as con_bonificacion,h1.marca_metadato as con_bonificacion_valor,&#xA;&#x9;&#x9;&#x9;   h2.id_metadato_contactos as no_acepta,h2.marca_metadato as no_acepta_valor,&#xA;&#x9;&#x9;&#x9;   h3.id_metadato_contactos as sin_bonificacion,h3.marca_metadato as sin_bonificacion_valor&#xA;    into #metadato_forma_pago&#xA;&#x9;from H_METADATOS_CONTACTOS   h&#xA;&#x9;inner join H_METADATOS_CONTACTOS h1  on h.id_contacto = h1.id_contacto and h.id_metadato_contactos = 1965 and h1.id_metadato_contactos = 2042&#x9;&#x9;&#xA;&#x9;inner join H_METADATOS_CONTACTOS h2  on h.id_contacto = h2.id_contacto and h2.id_metadato_contactos = 1966 &#xA;&#x9;inner join H_METADATOS_CONTACTOS h3  on h.id_contacto = h3.id_contacto and h3.id_metadato_contactos = 2041 &#xA;&#xA;&#xA;&#xA;-- Paso 1 de metadato carga todos los si en 1&#xA;update H_CONTACTOS&#xA;set cant_asoc_si_cambio_forma_pago =  1&#xA;from H_CONTACTOS h&#xA;inner join #metadato_forma_pago m on h.id_contacto = m.id_contacto&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and fecha_inicio_contacto &gt;= '2019-06-01 00:00:0.0'-- hasta aca ok&#xA;and cant_asoc_unicos_PF = 1&#xA;and id_codigo_clasificacion = '136.11'&#xA;and (m.marca_metadato = 1 and m.con_bonificacion_valor = 1 and m.no_acepta_valor = 0 and m.sin_bonificacion_valor = 0) -- METADATO REFERIDO = SI = 0 (QUE NO ESTE MARCADO SI)&#xA;and  h.id_periodo &gt;= @periodo&#xA;&#xA;&#xA;&#xA;&#xA;--- Aplico filtro de las personas con alto costo de salud&#xA;select distinct h.id_periodo, id_persona into #temp_costo  &#xA;from INTRANET.IntranetX.dbo.INDICADORES_COSTOSALUD I &#xA;inner join h_contactos h on h.id_periodo = i.periodo_costo and h.id_persona = i.nropersona_costo&#xA;where h.id_periodo &gt;= 201906 &#xA;and consumo/recaudado &gt;= 0.75 and  recaudado &gt; 0 and  h.id_periodo &gt;= @periodo&#xA;&#xA;&#xA;update H_CONTACTOS&#xA;set cant_asoc_si_cambio_forma_pago =  0,&#xA;cant_asoc_unicos_PF = 0&#xA;from H_CONTACTOS h inner join #temp_costo t on h.id_persona = t.id_persona and h.id_periodo = t.id_periodo&#xA;where h.id_periodo &gt;= @periodo&#xA;&#xA;--BAJA POR DISCONFORMIDAD&#x9;&#xA;--seteo en 0 las marcas&#xA;&#xA;&#xA;--seteo en 0 las marcas&#xA;update H_CONTACTOS&#xA;set id_marca_baja_x_disconformidad&#x9;= 0,&#xA;id_marca_retencion_efectiva&#x9; = 0,&#xA;id_marca_alto_consumidor= 0,&#xA;id_marca_di = 0,&#xA;id_marca_60_anios = 0&#xA;where id_periodo &gt;= @periodo&#xA;&#xA;&#xA;drop table #metadato_forma_pago&#xA;-- Guardo los metadatos que se van a usar&#xA;select h.*,h1.id_metadato_contactos as instatisfaccion_con_profesionales,h1.marca_metadato as instatisfaccion_con_profesionales_valor,&#xA;&#x9;&#x9;   h2.id_metadato_contactos as Insatisfacción_reconocimeinto_del_plan,h2.marca_metadato as Insatisfacción_reconocimeinto_del_plan_valor,&#xA;&#x9;&#x9;   h3.id_metadato_contactos as Insatisfacción_at_brindada,h3.marca_metadato as Insatisfacción_at_brindada_valor&#xA;into #metadato_baja_disconformidad &#xA;from H_METADATOS_CONTACTOS   h&#xA;inner join H_METADATOS_CONTACTOS h1  on h.id_contacto = h1.id_contacto and h.id_metadato_contactos = 1496 &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   and h1.id_metadato_contactos = 1225&#x9;&#x9;&#xA;inner join H_METADATOS_CONTACTOS h2  on h.id_contacto = h2.id_contacto and h2.id_metadato_contactos = 1220 &#xA;inner join H_METADATOS_CONTACTOS h3  on h.id_contacto = h3.id_contacto and h3.id_metadato_contactos = 1226 &#xA;&#xA;-- Indicador 1 y 3 pone en 1 la marca cuando es baja por dincoformidad&#xA;update H_CONTACTOS&#xA;set id_marca_baja_x_disconformidad&#x9;= 1--,&#xA;--id_marca_retencion_efectiva&#x9; = 1&#xA;from H_CONTACTOS h &#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and id_codigo_clasificacion = '157.2' --Baja por Disconformidades&#xA;and h.id_periodo &gt;= @periodo&#xA;&#xA;&#xA;-- Marca el indicador 1 segun la combinacion de metadatos&#xA;&#xA;update H_CONTACTOS&#xA;set id_marca_baja_x_disconformidad&#x9;= 1&#xA;from H_CONTACTOS h inner join #metadato_baja_disconformidad m on h.id_contacto = m.id_contacto&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;and id_codigo_clasificacion = '157.1' --Retención Asociados&#xA;and( m.marca_metadato_char &lt;&gt; ''&#xA;or m.Insatisfacción_at_brindada_valor = 1&#xA;or m.Insatisfacción_reconocimeinto_del_plan_valor = 1&#xA;or m.instatisfaccion_con_profesionales_valor = 1) and &#xA;h.id_periodo &gt;= @periodo&#xA;&#xA;-- Marca el indicador 3 &#xA;update H_CONTACTOS&#xA;set id_marca_retencion_efectiva&#x9;= 1&#xA;from H_CONTACTOS h inner join H_METADATOS_CONTACTOS m on h.id_contacto = m.id_contacto and m.id_metadato_contactos = 1985&#xA;where id_tipo_contacto in(1,10) and id_via_acceso = 5 &#xA;and id_unidad_organizacional_contacto in (SELECT id_unidad_organizacional_contacto &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where id_agrupador_unidad_organizacional_contacto = 1)&#xA;&#x9;and id_codigo_clasificacion = '157.2' -- Baja por disconformidad&#xA;&#x9;and m.marca_metadato = 1 and h.id_periodo &gt;= @periodo&#xA;&#xA;&#xA;&#xA;&#xA;-- Si la perspona es discapacitada se toma asi en el contacto&#xA;update h_contactos &#x9;&#xA;set id_marca_di&#x9;=1&#xA;from h_contactos h inner join D_PERSONAS c on h.id_persona = c.id_persona &#xA;where Discapacitado = 'S'&#xA;and h.id_periodo &gt;= @periodo&#xA;-- se compara persona por persona con el stock anteriorcuantos años tenia &#xA;update h_contactos &#x9;&#xA;set id_marca_60_anios&#x9;=1&#xA;from h_contactos h inner join h_comer_stock_afilia c on h.id_persona = c.id_persona and h.id_periodo = dbo.PeriodosAnteriores(c.id_periodo,2)&#xA;where c.edad_periodo &gt;= 60 and &#xA;h.id_periodo &gt;= @periodo&#xA;&#xA;--- Aplico filtro de las personas con alto costo de salud&#xA;select distinct  cuenta_costo, max(consumo) consumo  into #temp_consumo&#xA;from INTRANET.IntranetX.dbo.INDICADORES_COSTOSALUD I &#xA;group by cuenta_costo&#xA;having  max(consumo) &gt;= 200000 -- Se tomo 200000 en enero 2020 diferenciandose de los parametros de salud por pedido del cliente&#xA;&#xA;&#xA;update h_contactos &#x9;&#xA;set id_marca_alto_consumidor= 1&#xA;from h_contactos h inner join #temp_consumo c on h.afiliado = c.cuenta_costo &#xA;where h.id_periodo &gt;= @periodo&#xA;&#xA;update H_CONTACTOS&#xA;set id_marca_cuenta_interes_comercial =  a.id_marca_cuenta_interes_comercial&#xA;from H_CONTACTOS c inner join H_ASOCIADO_INTERES_COMERCIAL  a &#xA;on a.id_persona = c.id_persona and a.afiliado = c.afiliado and dbo.PeriodosAnteriores(c.id_periodo,2) = a.id_periodo&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza supervisores en H_CONTACTOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8B2845E6-FDAD-478C-A55D-FF0F6BC126C0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza supervisores en H_CONTACTOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="Declare @Periodo INT&#xA;SET @Periodo = (select dbo.PeriodosAnteriores(dbo.DevuelvePeriodo(GETDATE()),9) as id_periodo)&#xA;&#xA;&#xA;----- Setea los supervisores cuando la fecha y el agente es igual a la tabla H_ATENCION_TELEFONICA &#xA;UPDATE H_CONTACTOS&#xA;SET id_usuario_supervisor = t.id_usuario_supervisor&#xA;FROM h_contactos h&#xA;&#x9;inner join D_CC_VIAS_ACCESO d &#xA;&#x9;on d.id_via_acceso = h.id_via_acceso&#xA;&#x9;inner join D_AGRUPADOR_VIA_ACCESO a &#xA;&#x9;on a.id_agrupador_via_acceso = d.id_agrupador_via_acceso&#xA;&#x9;inner join D_AGENTES_ATENCION_TELEFONICA aa &#xA;&#x9;on aa.id_usuario_carga_contacto = h.id_usuario_carga_contacto&#xA;&#x9;inner join H_ATENCION_TELEFONICA t &#xA;&#x9;on t.id_agente_atencion_telefonica = aa.id_agente_atencion_telefonica &#xA;&#x9;&#x9;and cast(h.fecha_inicio_contacto as date) = cast(t.fecha_llamada as date )&#xA;WHERE t.id_periodo &gt;= @Periodo and a.id_agrupador_via_acceso in (1,2)&#xA;&#xA;&#xA;&#xA;----- Actualiza los supervisores para los agentes que no encontro y tienen uno solo a lo largo de la historia&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_usuario_supervisor = ss.id_usuario_supervisor&#xA;FROM h_contactos h&#xA;&#x9;inner join D_CC_VIAS_ACCESO d &#xA;&#x9;on d.id_via_acceso = h.id_via_acceso&#xA;&#x9;inner join D_AGENTES_ATENCION_TELEFONICA aa &#xA;&#x9;on aa.id_usuario_carga_contacto = h.id_usuario_carga_contacto&#xA;&#x9;inner join H_SUPERVISORES_SSALUD ss&#xA;&#x9;on ss.id_login_dalpad = aa.id_agente_atencion_telefonica and ss.id_periodo = h.id_periodo&#xA;WHERE h.id_periodo &gt;=  @Periodo &#xA;    and h.id_periodo &gt;= (select min(id_periodo) from H_SUPERVISORES_SSALUD)&#xA;    and d.id_agrupador_via_acceso in (1,2) &#xA;&#xA;&#xA;---- Guarda en una temporal aquellos supervisores que tienen mas de un agente en un mismo periodo&#xA;SELECT id_periodo, id_agente_atencion_telefonica, count (distinct id_usuario_supervisor) as cantidad&#xA;INTO #tempdoblesupervisor&#xA;FROM H_ATENCION_TELEFONICA &#xA;WHERE id_usuario_supervisor &lt;&gt;0&#xA;GROUP BY  id_periodo, id_agente_atencion_telefonica&#xA;HAVING count (distinct id_usuario_supervisor) &gt; 1&#xA;&#xA;&#xA;---- Guarda las llamadas que hay que excluir en la actualizacion&#xA;SELECT id_llamada &#xA;into #nollamadas &#xA;FROM #tempdoblesupervisor t inner join  H_ATENCION_TELEFONICA  h &#xA; on  t.id_agente_atencion_telefonica = h.id_agente_atencion_telefonica and&#xA;&#x9; t.id_periodo = h.id_periodo&#xA;&#xA;----- Actualiza los supervisores para los agentes que no encontro y tienen uno solo a lo largo de la historia&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_usuario_supervisor = t.id_usuario_supervisor&#xA;FROM h_contactos h&#xA;&#x9;inner join D_CC_VIAS_ACCESO d &#xA;&#x9;on d.id_via_acceso = h.id_via_acceso&#xA;&#x9;inner join D_AGENTES_ATENCION_TELEFONICA aa &#xA;&#x9;on aa.id_usuario_carga_contacto = h.id_usuario_carga_contacto&#xA;&#x9;inner join H_ATENCION_TELEFONICA t &#xA;&#x9;on t.id_agente_atencion_telefonica = aa.id_agente_atencion_telefonica &#xA;&#x9;and t.id_periodo = h.id_periodo&#xA;WHERE t.id_periodo &gt;=  @Periodo &#xA;&#x9;and t.id_periodo &lt; (select min(id_periodo) from H_SUPERVISORES_SSALUD)&#xA;&#x9;and d.id_agrupador_via_acceso in (1,2)&#xA;      and t.id_llamada not in (SELECT id_llamada from #nollamadas)&#xA;&#xA;---- Actualiza supervisor de Atento en contactos.&#xA;&#xA;UPDATE H_CONTACTOS &#xA;SET id_usuario_supervisor = S.nro_documento_supervisor&#xA;FROM H_CONTACTOS H&#xA;INNER JOIN D_USUARIOS_CARGA_CONTACTOS A&#xA; ON (A.id_usuario_carga_contacto = H.id_usuario_carga_contacto)&#xA;INNER JOIN H_SUPERVISORES_ATENTO S&#xA; ON (S.de_usuario_carga_contacto= A.de_usuario_carga_contacto and H.id_periodo=S.id_periodo)&#xA;WHERE H.id_unidad_organizacional_contacto in ( 449, 586 )&#xA; AND H.id_periodo &gt;= (@Periodo)&#xA; and id_usuario_supervisor = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza tablas de dimensión"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{5DBA1722-AEA6-4595-96F7-75E5BB7BD690}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza tablas de dimensión"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="---ACTUALIZA NUEVOS USUARIOS CARGADOS.&#xA;INSERT INTO D_USUARIOS_CARGA_CONTACTOS&#xA;(id_usuario_carga_contacto, de_usuario_carga_contacto, nombre_usuario_carga_contacto,id_unidad_organizacional_contacto,estado_usuario_carga_contacto)&#xA;SELECT id, usuario, nombre, id_unidad_organizacional, estado FROM CONTACTOS.CALLCENTER_GESTION.DBO.USUARIO &#xA;WHERE id NOT IN (SELECT id_usuario_carga_contacto FROM D_USUARIOS_CARGA_CONTACTOS)&#xA;&#xA;---ACTUALIZA NUEVAS UNIDADES ORGANIZACIONALES CARGADAS. ENVIA MAIL PARA DEFINIR AGRUPADOR&#xA;if (SELECT COUNT(*) FROM CONTACTOS.CALLCENTER_GESTION.DBO.UNIDAD_ORGANIZACIONAL &#xA;WHERE id NOT IN (SELECT id_unidad_organizacional_contacto FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS)) &gt; 0&#xA;begin &#xA;&#x9;EXEC msdb.dbo.sp_send_dbmail&#xA;&#x9;&#x9;&#x9;&#x9;@profile_name = 'Soporte Microstrategy',&#xA;&#x9;&#x9;&#x9;&#x9;@recipients = 'nicolas.borio@sancorsalud.com.ar; juanfrancisco.trinchieri@sancorsalud.com.ar',&#xA;&#x9;&#x9;&#x9;&#x9;@subject = 'Nueva unidad organizacional - Sistema de contactos',&#xA;&#x9;&#x9;&#x9;&#x9;@body = 'Si la unidad agregada fue un CAR, el agrupado debe ser 1. En caso de que pertenezca a Contact Center, 2.&#xA;&#x9;&#x9;&#x9;&#x9;De lo contrario 0. Establecer agrupado para las unidades organizacionales con el siguiente script:&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;UPDATE D_UNIDADES_ORGANIZACIONALES_CONTACTOS&#xA;&#x9;&#x9;&#x9;&#x9;SET id_agrupador_unidad_organizacional_contacto = ?&#xA;&#x9;&#x9;&#x9;&#x9;WHERE id_unidad_organizacional_contacto = ?&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;',&#xA;&#x9;&#x9;&#x9;&#x9;@query = 'SELECT id, nombre, id_posicion, estado, NULL as id_agrupador&#xA;&#x9;&#x9;&#x9;&#x9;FROM CONTACTOS.CALLCENTER_GESTION.DBO.UNIDAD_ORGANIZACIONAL &#xA;&#x9;&#x9;&#x9;&#x9;WHERE id NOT IN (SELECT id_unidad_organizacional_contacto FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS)',&#xA;&#x9;&#x9;&#x9;&#x9;@query_result_separator = '|',&#xA;&#x9;&#x9;&#x9;&#x9;@execute_query_database = 'DW_SALUD';&#xA;end&#xA;&#xA;INSERT INTO D_UNIDADES_ORGANIZACIONALES_CONTACTOS&#xA;(id_unidad_organizacional_contacto, de_unidad_organizacional_contacto, id_posicion, estado_unidad_organizacional_contacto,&#xA;id_agrupador_unidad_organizacional_contacto, id_entidad, id_sector_ss)&#xA;SELECT id, nombre, id_posicion, estado, NULL, NULL, 0  FROM CONTACTOS.CALLCENTER_GESTION.DBO.UNIDAD_ORGANIZACIONAL &#xA;WHERE id NOT IN (SELECT id_unidad_organizacional_contacto FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS)&#xA;&#xA;&#xA;/* Actualiza la posicion en D_UNIDADES_ORGANIZACIONALES_CONTACTOS solo si en nuestra tabla es 999  */&#xA;&#xA;---- Existen casos como chilecito donde la posicion en contactos esta mal. En nuestra base esta correcta&#xA;---- Por dicho motivo solo se modifica si es 999&#xA;&#xA;UPDATE D_UNIDADES_ORGANIZACIONALES_CONTACTOS SET id_posicion = U.id_posicion&#xA;FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS D&#xA;inner join CONTACTOS.CALLCENTER_GESTION.DBO.UNIDAD_ORGANIZACIONAL  U ON U.id = D.id_unidad_organizacional_contacto&#xA;where D.id_posicion = 999 and U.id_posicion &lt;&gt; 999&#xA;&#xA;&#xA;--ACTUALIZA NUEVAS SUBTIPOS DE CASOS&#xA;--INSERT INTO D_SUBTIPOS_CASOS_CONTACTOS&#xA;--SELECT&#x9;T.id,&#xA;--&#x9;&#x9;T.nombre,&#xA;--&#x9;&#x9;C.codigo&#xA;--FROM CONTACTOS.callcenter_gestion.dbo.TIPO_CASO_CATEGORIA T &#xA;--INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO C ON (T.id_tipo_caso=C.id)&#xA;--WHERE T.id NOT IN (SELECT id_subtipo_caso_contacto FROM D_SUBTIPOS_CASOS_CONTACTOS)&#xA;&#xA;--ACTUALIZA NUEVOS TIPOS DE CASOS&#xA;DELETE D_TIPOS_CASOS_CONTACTOS&#xA;INSERT INTO D_TIPOS_CASOS_CONTACTOS&#xA;(id_tipo_caso_contacto, id_tipo_caso_contacto_ampliado, de_tipo_caso_contacto)&#xA;SELECT&#x9;&#x9;codigo,&#xA;&#x9;&#x9;&#x9;id,&#xA;&#x9;&#x9;&#x9;nombre &#xA;FROM CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T&#xA;WHERE version = (SELECT MAX(version) FROM CONTACTOS.callcenter_gestion.dbo.TIPO_CASO C WHERE T.codigo=C.codigo)&#xA;&#xA;--ACTUALIZA NUEVOS CODIGOS DE CLASIFICACIONES.&#xA;DELETE D_CODIGOS_CLASIFICACIONES&#xA;INSERT INTO D_CODIGOS_CLASIFICACIONES&#xA;(id_codigo_clasificacion, de_codigo_clasificacion, id_etiqueta_clasificacion)&#xA;SELECT&#x9;&#x9;codigo,&#xA;&#x9;&#x9;&#x9;nombre,&#xA;&#x9;&#x9;&#x9;0 as id_etiqueta_clasificacion&#xA;FROM CONTACTOS.callcenter_gestion.dbo.TIPO_CASO_CATEGORIA T&#xA;WHERE id_tipo_caso = (SELECT MAX(id_tipo_caso) FROM CONTACTOS.callcenter_gestion.dbo.TIPO_CASO_CATEGORIA C WHERE T.codigo=C.codigo)&#xA;&#xA;&#xA;--ACTUALIZA NUEVAS VIAS DE ACCESO CARGADAS. ENVIA MAIL PARA DEFINIR AGRUPADOR&#xA;if (SELECT COUNT(*) FROM CONTACTOS.CALLCENTER_GESTION.DBO.CASO_VIA_ACCESO &#xA;WHERE id NOT IN (SELECT id_via_acceso FROM D_CC_VIAS_ACCESO)) &gt; 0&#xA;begin &#xA;&#x9;EXEC msdb.dbo.sp_send_dbmail&#xA;&#x9;&#x9;&#x9;&#x9;@profile_name = 'Soporte Microstrategy',&#xA;&#x9;&#x9;&#x9;&#x9;@recipients = 'nicolas.borio@sancorsalud.com.ar; juanfrancisco.trinchieri@sancorsalud.com.ar',&#xA;&#x9;&#x9;&#x9;&#x9;@subject = 'Nueva via de acceso - Sistema de contactos',&#xA;&#x9;&#x9;&#x9;&#x9;@body = 'Establecer agrupado para las siguientes vias de acceso:&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;',&#xA;&#x9;&#x9;&#x9;&#x9;@query = 'SELECT id, nombre, orden, NULL as id_agrupador&#xA;&#x9;&#x9;&#x9;&#x9;FROM CONTACTOS.CALLCENTER_GESTION.DBO.CASO_VIA_ACCESO &#xA;&#x9;&#x9;&#x9;&#x9;WHERE id NOT IN (SELECT id_via_acceso FROM D_CC_VIAS_ACCESO)',&#xA;&#x9;&#x9;&#x9;&#x9;@query_result_separator = '|',&#xA;&#x9;&#x9;&#x9;&#x9;@execute_query_database = 'DW_SALUD';&#xA;end&#xA;&#xA;INSERT INTO D_CC_VIAS_ACCESO&#xA;(id_via_acceso, de_via_acceso,orden_via, id_agrupador_via_acceso)&#xA;SELECT id, nombre, orden,  0  FROM CONTACTOS.CALLCENTER_GESTION.DBO.CASO_VIA_ACCESO  &#xA;WHERE id NOT IN (SELECT id_via_acceso FROM D_CC_VIAS_ACCESO)&#xA;&#xA;&#xA;-- INSERTA TIPOS DE CONTACTOS QUE NO ESTABAN EN LA TABLA&#xA;INSERT INTO D_TIPOS_CONTACTOS&#xA;(id_tipo_contacto, de_tipo_contacto)&#xA;SELECT id, nombre FROM CONTACTOS.CALLCENTER_GESTION.DBO.caso_tipo_contacto&#xA;WHERE id NOT IN (SELECT id_tipo_contacto FROM D_TIPOS_CONTACTOS)&#xA;&#xA;&#xA;-- INSERTA Y ACTUALIZA USUARIOS NUEVOS&#xA;INSERT INTO D_USUARIOS_SUPERVISORES&#xA;(id_usuario_supervisor, de_usuario_supervisor, nombre, apellido)&#xA;SELECT id, usuario, nombre, apellido FROM RRHH.RRHH.DBO.EMPLEADO&#xA;WHERE id NOT IN (SELECT id_usuario_supervisor FROM D_USUARIOS_SUPERVISORES)&#xA;AND ESTADO = 0&#xA;AND usuario &lt;&gt; ''&#xA;&#xA;UPDATE D_USUARIOS_SUPERVISORES&#xA;SET de_usuario_supervisor = usuario&#xA;FROM D_USUARIOS_SUPERVISORES S INNER JOIN RRHH.RRHH.DBO.EMPLEADO E ON (E.id=S.id_usuario_supervisor)&#xA;where de_usuario_supervisor COLLATE SQL_Latin1_General_CP1_CI_AI&lt;&gt;usuario&#xA;AND usuario &lt;&gt; ''&#xA;&#xA;----- Actualiza en la tabla D_USUARIOS_CARGA_CONTACTOS la id_uniddad_organizacional del usuario por la id que tiene en la tabla base de USUARIO&#xA;&#xA;UPDATE D_USUARIOS_CARGA_CONTACTOS SET id_unidad_organizacional_contacto = id_unidad_organizacional&#xA;from contactos.callcenter_gestion.dbo.USUARIO U&#xA;inner join  D_USUARIOS_CARGA_CONTACTOS D ON U.id = D.id_usuario_carga_contacto&#xA;where id_unidad_organizacional_contacto &lt;&gt; id_unidad_organizacional&#xA;&#xA;&#xA;INSERT INTO D_CC_DIA_NO_LABORAL&#xA;(Id_unidad_organizacional, Id_fecha)&#xA;SELECT Id_unidad_organizacional, Fecha&#xA;FROM Contactos.CallCenter_Gestion.dbo.DIA_NO_LABORAL&#xA;WHERE fecha not in (select Id_Fecha from D_CC_DIA_NO_LABORAL)&#xA;&#xA;UPDATE D_UNIDADES_ORGANIZACIONALES_CONTACTOS&#xA;SET de_unidad_organizacional_contacto = U.nombre&#xA;FROM D_UNIDADES_ORGANIZACIONALES_CONTACTOS C INNER JOIN CONTACTOS.CALLCENTER_GESTION.DBO.UNIDAD_ORGANIZACIONAL U ON (C.id_unidad_organizacional_contacto=U.id)&#xA;WHERE C.de_unidad_organizacional_contacto COLLATE SQL_Latin1_General_CP850_CI_AI &lt;&gt; U.nombre" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza variable Fecha"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{8729DB7C-BFD4-40CF-A988-BD38F706A979}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza variable Fecha"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="SELECT TOP 1 CAST(CAST(dbo.Devuelve_Fecha(dbo.PeriodosPosteriores(id_periodo, 2)) AS VARCHAR(10)) AS DATETIME) fecha &#xA;FROM H_CONTACTOS&#xA;ORDER BY id_periodo DESC"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="fecha"
            SQLTask:DtsVariableName="User::Fecha" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza variable Periodo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{48ACF693-6106-43D1-BE90-C17B5FEB179F}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza variable Periodo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="select dbo.PeriodosAnteriores(dbo.DevuelvePeriodo(GETDATE()),09) as id_periodo"
          SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ResultBinding
            SQLTask:ResultName="id_periodo"
            SQLTask:DtsVariableName="User::Periodo" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga h_metadatos_contactos"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0e538600-4ddd-4194-8a83-5ce6bc1bb7cc}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga h_metadatos_contactos"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="delete from h_metadatos_contactos&#xA;&#xA;insert into h_metadatos_contactos&#xA;SELECT id_caso,codigo as id_tipo_caso , MAX(t.id_tipo_caso) id_tipo_caso_ampliado, isnull(max(MG.id),0),T.id_metadato_campo,MAX(valor_tinyint) valor_tinyint, null,max(valor_varchar)&#xA;FROM CONTACTOS.CALLCENTER_GESTION.DBO.CASO_CAMPO_METADATO C&#xA;INNER JOIN CONTACTOS.CALLCENTER_GESTION.DBO.TIPO_CASO_METADATO_CAMPO T on T.id_metadato_campo = C.id_campo&#xA;left JOIN CONTACTOS.CALLCENTER_ADMIN.dbo.metadato_grupo MG on MG.id = T.id_metadato_grupo&#xA;INNER JOIN CONTACTOS.CALLCENTER_GESTION.DBO.tipo_caso TC on TC.id=T.id_tipo_caso&#xA;WHERE codigo in(157,50,136)&#xA;GROUP BY id_caso, codigo, T.id_metadato_campo--, MG.id&#xA;ORDER BY id_caso&#xA; &#xA; &#xA;&#xA; update H_METADATOS_CONTACTOS&#xA;set fecha_carga_contacto = h.fecha_carga_contacto&#xA; from H_CONTACTOS_INDICADORES_SS h inner join H_METADATOS_CONTACTOS m&#xA;&#x9;on h.id_contacto = m.id_contacto&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Elimina periodo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F5643BD2-E548-4E5E-BF98-331E77134F99}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Elimina periodo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="-- Guarda la info de contactos para guardar la foto de las bajas segun pedido de comercial para indicadores de referidos &#xA;&#xA;declare @periodo int = ?&#xA;&#xA;Drop table TEMP_H_CONTACTOS_BAJAS  &#xA;&#xA;select id_periodo, id_persona,id_marca_baja_referido into TEMP_H_CONTACTOS_BAJAS  from H_CONTACTOS WHERE id_periodo &gt;= @periodo &#xA;&#xA;DELETE H_CONTACTOS WHERE id_periodo &gt;= @periodo &#xA;DELETE H &#xA;FROM H_CONTACTOS_DETALLE H&#xA;WHERE id_contacto NOT IN (SELECT id_contacto FROM H_CONTACTOS)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Inserta en H_CONTACTOS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{198D22BA-5E18-44D6-A638-2D3DE3A10627}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Inserta en H_CONTACTOS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{2B3D9C48-6BD9-470E-88CA-5E0A19CF7159}"
          SQLTask:SqlStatementSource="--- Declara la variable tomando como referencia la maxima fecha de la tabla.&#xA;declare @Fechadesde datetime&#xA;set @Fechadesde = (select MAX(fecha_inicio_contacto) from H_CONTACTOS)&#xA;&#xA;SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;&#xA;&#xA;DECLARE @FECHA DATETIME&#xA;SET @FECHA = ?&#xA;&#xA;DECLARE @Periodo INT&#xA;SET @Periodo = ?&#xA;&#xA;&#xA;--INSERTA LOS REGISTROS QUE CORRESPONDEN A CONTACT CENTER&#xA;&#xA;INSERT INTO H_CONTACTOS&#xA;&#xA;(id_periodo,&#xA;id_contacto,&#xA;id_tipo_caso_contacto,&#xA;id_tipo_caso_contacto_ampliado,&#xA;id_codigo_clasificacion_ampliado,&#xA;id_codigo_clasificacion,&#xA;id_via_acceso,&#xA;id_unidad_organizacional_contacto,&#xA;id_usuario_carga_contacto,&#xA;id_usuario_supervisor,&#xA;id_tipo_contacto,&#xA;fecha_inicio_contacto,&#xA;fecha_fin_contacto,&#xA;fecha_vencimiento_contacto,&#xA;id_persona,&#xA;afiliado,&#xA;subnumero,&#xA;secuencia,&#xA;id_producto,&#xA;id_subproducto,&#xA;id_plan_producto,&#xA;meses_permanencia_contacto,&#xA;edad_actual_contacto,&#xA;id_estado_contacto,&#xA;id_marca_cerrado_vencido,&#xA;id_marca_cerrado_primer_contacto,&#xA;cant_reiteraciones,&#xA;cant_contactos,&#xA;cant_unidades_organizacionales,&#xA;tiempo_total,&#xA;cant_pasos,&#xA;id_rango_reiteracion_contacto,&#xA;objetivo_cierre_primer_contacto,&#xA;id_marca_atencion_posicion,&#xA;id_jefe_contact_center,&#xA;id_marca_debe_cerrarse_primer_contacto,&#xA;id_marca_baja_referido,&#xA;id_marca_cant_asociados_potenciales,&#xA;id_marca_cant_referidos,&#xA;id_marca_potenciales_captados,&#xA;id_categoria_contacto,&#xA;id_marca_cuenta_interes_comercial,&#xA;id_categoria_caso)&#xA;&#xA;SELECT&#x9;dbo.DevuelvePeriodo(P.fecha_ingreso),&#xA;&#x9;&#x9;C.id,&#xA;&#x9;&#x9;T.codigo,&#xA;&#x9;&#x9;T.id,&#xA;&#x9;&#x9;C.id_tipo_caso_categoria,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;C.id_caso_via_acceso,&#xA;&#x9;&#x9;P.id_unidad_organizacional ,&#x9;&#x9;&#xA;&#x9;&#x9;P.id_usuario ,&#xA;&#x9;&#x9;0,  &#xA;&#x9;&#x9;C.tipo_cuenta,&#xA;&#x9;&#x9;MIN(P.fecha_ingreso), &#xA;&#x9;&#x9;NULL, &#xA;&#x9;&#x9;C.plazo_vencido, &#xA;&#x9;&#x9;C.id_cuenta,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;C.estado,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;C.cant_reiteraciones,&#xA;&#x9;&#x9;1,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;Null as cant_repeticion_igual_caso,&#xA;                                0,&#xA;                                0 as id_jefe_contact_center,&#xA;&#x9;&#x9;0 as id_marca_debe_cerrarse_primer_contacto,&#xA;&#x9;&#x9;0 as id_marca_baja_referido,&#xA;&#x9;&#x9;9 as id_marca_cant_asociados_potenciales,&#xA;&#x9;&#x9;9 as id_marca_cant_referidos,&#xA;&#x9;&#x9;9 as id_marca_potenciales_captados,&#xA;&#x9;&#x9;c.id_caso_categoria,&#xA;&#x9;&#x9;9 as id_marca_cuenta_interes_comercial,&#xA;&#x9;&#x9;id_caso_categoria&#xA;FROM CONTACTOS.callcenter_gestion.dbo.CASO C WITH (NOLOCK)&#xA;INNER JOIN CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK) ON (C.id=P.id_caso and C.id_paso_inicial=P.id)&#xA;INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T WITH (NOLOCK) ON (C.id_tipo_caso=T.id)&#xA;WHERE fecha_ingreso &gt;= @FECHA&#xA;AND P.id_unidad_organizacional in (select distinct id_unidad_organizacional_contacto &#xA;                                   from D_UNIDADES_ORGANIZACIONALES_CONTACTOS where id_agrupador_unidad_organizacional_contacto = 2)&#xA;AND C.id_caso_via_acceso IN (1, 2, 4, 6, 7, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 27)&#xA;GROUP BY &#x9;dbo.DevuelvePeriodo(P.fecha_ingreso),&#xA;&#x9;&#x9;&#x9;C.id,&#xA;&#x9;&#x9;&#x9;T.codigo,&#xA;&#x9;&#x9;&#x9;C.id_tipo_caso_categoria,&#xA;&#x9;&#x9;&#x9;T.id,&#xA;&#x9;&#x9;&#x9;C.id_caso_via_acceso,&#xA;&#x9;&#x9;&#x9;P.id_unidad_organizacional,&#xA;&#x9;&#x9;&#x9;P.id_usuario,&#xA;&#x9;&#x9;&#x9;C.tipo_cuenta,&#xA;&#x9;&#x9;&#x9;C.plazo_vencido,&#xA;&#x9;&#x9;&#x9;C.id_cuenta,&#xA;&#x9;&#x9;&#x9;C.estado,&#xA;&#x9;&#x9;&#x9;C.cant_reiteraciones,&#xA;&#x9;&#x9;&#x9;c.id_caso_categoria&#xA;&#xA;&#xA;--INSERTA LOS REGISTROS QUE CORRESPONDEN A CAR&#xA;&#xA;INSERT INTO H_CONTACTOS&#xA;&#xA;(id_periodo,&#xA;id_contacto,&#xA;id_tipo_caso_contacto,&#xA;id_tipo_caso_contacto_ampliado,&#xA;id_codigo_clasificacion_ampliado,&#xA;id_codigo_clasificacion,&#xA;id_via_acceso,&#xA;id_unidad_organizacional_contacto,&#xA;id_usuario_carga_contacto,&#xA;id_usuario_supervisor,&#xA;id_tipo_contacto,&#xA;fecha_inicio_contacto,&#xA;fecha_fin_contacto,&#xA;fecha_vencimiento_contacto,&#xA;id_persona,&#xA;afiliado,&#xA;subnumero,&#xA;secuencia,&#xA;id_producto,&#xA;id_subproducto,&#xA;id_plan_producto,&#xA;meses_permanencia_contacto,&#xA;edad_actual_contacto,&#xA;id_estado_contacto,&#xA;id_marca_cerrado_vencido,&#xA;id_marca_cerrado_primer_contacto,&#xA;cant_reiteraciones,&#xA;cant_contactos,&#xA;cant_unidades_organizacionales,&#xA;tiempo_total,&#xA;cant_pasos,&#xA;id_rango_reiteracion_contacto,&#xA;objetivo_cierre_primer_contacto,&#xA;id_marca_atencion_posicion,&#xA;id_jefe_contact_center,&#xA;id_marca_baja_referido,&#xA;id_marca_cant_asociados_potenciales,&#xA;id_marca_cant_referidos,&#xA;id_marca_potenciales_captados,&#xA;id_categoria_contacto,&#xA;id_marca_cuenta_interes_comercial,&#xA;id_categoria_caso)&#xA;&#xA;SELECT&#x9;dbo.DevuelvePeriodo(P.fecha_ingreso),&#xA;&#x9;&#x9;C.id,&#xA;&#x9;&#x9;T.codigo,&#xA;&#x9;&#x9;T.id,&#xA;&#x9;&#x9;C.id_tipo_caso_categoria,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;C.id_caso_via_acceso,&#xA;&#x9;&#x9;P.id_unidad_organizacional ,&#x9;&#x9;&#xA;&#x9;&#x9;P.id_usuario,&#xA;&#x9;&#x9;NULL, &#xA;&#x9;&#x9;C.tipo_cuenta, &#xA;&#x9;&#x9;MIN(P.fecha_ingreso), &#xA;&#x9;&#x9;NULL, &#xA;&#x9;&#x9;C.plazo_vencido, &#xA;&#x9;&#x9;C.id_cuenta,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;C.estado,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;C.cant_reiteraciones,&#xA;&#x9;&#x9;1,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;Null as cant_repeticion_igual_caso,&#xA;                                0,&#xA;                                0 as id_jefe_contact_center,&#xA;&#x9;&#x9;0 as id_marca_baja_referido,&#xA;&#x9;&#x9;9 as id_marca_cant_asociados_potenciales,&#xA;&#x9;&#x9;9 as id_marca_cant_referidos,&#xA;&#x9;&#x9;9 as id_marca_potenciales_captados,&#xA;&#x9;&#x9;c.id_caso_categoria,&#xA;&#x9;&#x9;9 as id_marca_cuenta_interes_comercial,&#xA;&#x9;&#x9;id_caso_categoria&#xA;FROM CONTACTOS.callcenter_gestion.dbo.CASO C WITH (NOLOCK)&#xA;LEFT JOIN CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK) ON (C.id=P.id_caso and C.id_paso_inicial=P.id)&#xA;LEFT JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T WITH (NOLOCK) ON (C.id_tipo_caso=T.id)&#xA;WHERE fecha_ingreso &gt;= @FECHA&#xA;AND P.id_unidad_organizacional in (select distinct id_unidad_organizacional_contacto from D_UNIDADES_ORGANIZACIONALES_CONTACTOS where id_agrupador_unidad_organizacional_contacto = 1)&#xA;AND C.id_caso_via_acceso IN (5)&#xA;GROUP BY &#x9;dbo.DevuelvePeriodo(P.fecha_ingreso),&#xA;&#x9;&#x9;&#x9;C.id,&#xA;&#x9;&#x9;&#x9;T.codigo,&#xA;&#x9;&#x9;&#x9;C.id_tipo_caso_categoria,&#xA;&#x9;&#x9;&#x9;T.id,&#xA;&#x9;&#x9;&#x9;C.id_caso_via_acceso,&#xA;&#x9;&#x9;&#x9;P.id_unidad_organizacional,&#xA;&#x9;&#x9;&#x9;P.id_usuario,&#xA;&#x9;&#x9;&#x9;C.tipo_cuenta,&#xA;&#x9;&#x9;&#x9;C.plazo_vencido,&#xA;&#x9;&#x9;&#x9;C.id_cuenta,&#xA;&#x9;&#x9;&#x9;C.estado,&#xA;&#x9;&#x9;&#x9;C.cant_reiteraciones,&#xA;&#x9;&#x9;&#x9;c.id_caso_categoria&#x9;&#x9;&#x9;&#xA;&#xA;&#xA;--INSERTA LOS REGISTROS QUE CORRESPONDEN A Entidades de Valor y Canales Virtuales&#xA;&#xA;INSERT INTO H_CONTACTOS&#xA;&#xA;(id_periodo, id_contacto, id_tipo_caso_contacto, id_tipo_caso_contacto_ampliado, id_codigo_clasificacion_ampliado, id_codigo_clasificacion, id_via_acceso,&#xA;id_unidad_organizacional_contacto,&#xA;id_usuario_carga_contacto,&#xA;id_usuario_supervisor,&#xA;id_tipo_contacto,&#xA;fecha_inicio_contacto,&#xA;fecha_fin_contacto,&#xA;fecha_vencimiento_contacto,&#xA;id_persona,&#xA;afiliado,&#xA;subnumero,&#xA;secuencia,&#xA;id_producto,&#xA;id_subproducto,&#xA;id_plan_producto,&#xA;meses_permanencia_contacto,&#xA;edad_actual_contacto,&#xA;id_estado_contacto,&#xA;id_marca_cerrado_vencido,&#xA;id_marca_cerrado_primer_contacto,&#xA;cant_reiteraciones,&#xA;cant_contactos,&#xA;cant_unidades_organizacionales,&#xA;tiempo_total,&#xA;cant_pasos,&#xA;id_rango_reiteracion_contacto,&#xA;objetivo_cierre_primer_contacto,&#xA;id_marca_atencion_posicion,&#xA;id_jefe_contact_center,&#xA;id_marca_baja_referido,&#xA;id_marca_cant_asociados_potenciales,&#xA;id_marca_cant_referidos,&#xA;id_marca_potenciales_captados,&#xA;id_categoria_contacto,&#xA;id_marca_cuenta_interes_comercial,&#xA;id_categoria_caso)&#xA;&#xA;SELECT&#x9;dbo.DevuelvePeriodo(P.fecha_ingreso),&#xA;&#x9;&#x9;C.id,&#xA;&#x9;&#x9;T.codigo,&#xA;&#x9;&#x9;T.id,&#xA;&#x9;&#x9;C.id_tipo_caso_categoria,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;C.id_caso_via_acceso,&#xA;&#x9;&#x9;P.id_unidad_organizacional ,&#x9;&#x9;&#xA;&#x9;&#x9;P.id_usuario,&#xA;&#x9;&#x9;NULL, &#xA;&#x9;&#x9;C.tipo_cuenta, &#xA;&#x9;&#x9;MIN(P.fecha_ingreso), &#xA;&#x9;&#x9;NULL, &#xA;&#x9;&#x9;C.plazo_vencido, &#xA;&#x9;&#x9;C.id_cuenta,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;NULL,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;C.estado,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;C.cant_reiteraciones,&#xA;&#x9;&#x9;1,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;0,&#xA;&#x9;&#x9;Null as cant_repeticion_igual_caso,&#xA;                                0,&#xA;                                0 as id_jefe_contact_center,&#xA;&#x9;&#x9;0 as id_marca_baja_referido,&#xA;&#x9;&#x9;9 as id_marca_cant_asociados_potenciales,&#xA;&#x9;&#x9;9 as id_marca_cant_referidos,&#xA;&#x9;&#x9;9 as id_marca_potenciales_captados,&#xA;&#x9;&#x9;c.id_caso_categoria,&#xA;&#x9;&#x9;9 as id_marca_cuenta_interes_comercial,&#xA;&#x9;&#x9;id_caso_categoria&#xA;FROM CONTACTOS.callcenter_gestion.dbo.CASO C WITH (NOLOCK)&#xA;LEFT JOIN CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK) ON (C.id=P.id_caso and C.id_paso_inicial=P.id)&#xA;LEFT JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO T WITH (NOLOCK) ON (C.id_tipo_caso=T.id)&#xA;WHERE fecha_ingreso &gt;= @FECHA&#xA;AND P.id_unidad_organizacional in&#xA; (select distinct id_unidad_organizacional_contacto from D_UNIDADES_ORGANIZACIONALES_CONTACTOS where id_agrupador_unidad_organizacional_contacto in ( 3,4))&#xA;GROUP BY &#x9;dbo.DevuelvePeriodo(P.fecha_ingreso),&#xA;&#x9;&#x9;&#x9;C.id,&#xA;&#x9;&#x9;&#x9;T.codigo,&#xA;&#x9;&#x9;&#x9;C.id_tipo_caso_categoria,&#xA;&#x9;&#x9;&#x9;T.id,&#xA;&#x9;&#x9;&#x9;C.id_caso_via_acceso,&#xA;&#x9;&#x9;&#x9;P.id_unidad_organizacional,&#xA;&#x9;&#x9;&#x9;P.id_usuario,&#xA;&#x9;&#x9;&#x9;C.tipo_cuenta,&#xA;&#x9;&#x9;&#x9;C.plazo_vencido,&#xA;&#x9;&#x9;&#x9;C.id_cuenta,&#xA;&#x9;&#x9;&#x9;C.estado,&#xA;&#x9;&#x9;&#x9;C.cant_reiteraciones,&#xA;&#x9;&#x9;&#x9;c.id_caso_categoria&#x9;&#x9;&#xA;&#xA;---- Actualiza fecha_fin&#xA;&#xA;SELECT C.id, C.id_paso_actual, P.fecha_fin AS fecha_fin &#xA;into #TEMP_fecha_fin&#xA;FROM CONTACTOS.callcenter_gestion.dbo.CASO C WITH (NOLOCK)&#xA;LEFT JOIN CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK)&#xA;ON (C.id=P.id_caso and C.id_paso_actual=P.id)&#xA;where fecha_ingreso &gt;=  @FECHA&#xA;&#xA;UPDATE H_CONTACTOS&#xA;set fecha_fin_contacto = fecha_fin&#xA;FROM H_CONTACTOS C &#xA;INNER JOIN #TEMP_fecha_fin P&#xA;ON (P.id=C.id_contacto)&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;drop table #TEMP_fecha_fin&#xA;&#xA;---- Actualiza cant_reiteraciones&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET cant_reiteraciones = 0&#xA;WHERE cant_reiteraciones IS NULL&#xA;&#xA;----  Actualiza id_marca_cerrado_primer_contacto para los periodos anteriores a 201808&#xA;SELECT id_caso,  id_usuario, fecha_ingreso, fecha_fin&#xA;INTO #CONTACTOS &#xA;FROM CONTACTOS.callcenter_gestion.dbo.PASO P  WITH (NOLOCK)&#xA;where fecha_ingreso  &gt;=  @FECHA&#xA;and fecha_ingreso  &lt; '2018-08-01 00:00:00.000'&#xA;&#xA;&#xA;&#xA;SELECT id_caso, COUNT(DISTINCT id_usuario) Cant_Usuarios, DATEDIFF(MI,MIN(fecha_ingreso), MAX(fecha_fin)) Minutos, id_agrupador_via_acceso&#xA;INTO #CONTACTOS2 FROM #CONTACTOS P  &#xA;INNER JOIN H_CONTACTOS C ON (P.id_caso=C.id_contacto)&#xA;INNER JOIN D_CC_VIAS_ACCESO V ON (C.id_via_acceso=V.id_via_acceso)&#xA;WHERE id_periodo &gt;= @Periodo AND id_estado_contacto = 3 and id_periodo &lt; 201808&#xA;GROUP BY id_caso, id_agrupador_via_acceso&#xA;&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_marca_cerrado_primer_contacto = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN Minutos &lt;= 1 and Cant_Usuarios = 1 and id_agrupador_via_acceso IN (1, 3) THEN 1&#xA;&#x9;&#x9;WHEN Cant_Usuarios = 1 and id_agrupador_via_acceso = 2 THEN 1&#xA;&#x9;ELSE 0&#xA;&#x9;END&#xA;FROM H_CONTACTOS H INNER JOIN #CONTACTOS2 T ON (H.id_contacto=T.id_caso)&#xA;where id_periodo &lt; 201808&#xA;&#xA;DROP TABLE #CONTACTOS2&#xA;&#xA;----  Actualiza id_marca_cerrado_primer_contacto para los periodos igual o posteriores a 201808&#xA;&#xA;insert into #CONTACTOS&#xA;SELECT id_caso,  id_usuario, fecha_ingreso, fecha_fin&#xA;FROM CONTACTOS.callcenter_gestion.dbo.PASO P  WITH (NOLOCK)&#xA;where fecha_ingreso  &gt;= '2018-08-01 00:00:00.000'&#xA;&#xA;&#xA;&#xA;SELECT id_caso, COUNT(DISTINCT id_usuario) Cant_Usuarios, DATEDIFF(S,MIN(fecha_ingreso), MAX(fecha_fin)) segundos, id_agrupador_via_acceso&#xA;INTO #CONTACTOS1 FROM #CONTACTOS P &#xA;INNER JOIN H_CONTACTOS C ON (P.id_caso=C.id_contacto)&#xA;INNER JOIN D_CC_VIAS_ACCESO V ON (C.id_via_acceso=V.id_via_acceso)&#xA;WHERE id_periodo &gt;= @Periodo AND id_estado_contacto = 3&#xA;GROUP BY id_caso, id_agrupador_via_acceso&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_marca_cerrado_primer_contacto = &#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN segundos &lt;= 60 and Cant_Usuarios = 1 and id_agrupador_via_acceso IN (1, 3) THEN 1&#xA;&#x9;&#x9;WHEN Cant_Usuarios = 1 and id_agrupador_via_acceso = 2 THEN 1&#xA;&#x9;ELSE 0&#xA;&#x9;END&#xA;FROM H_CONTACTOS H INNER JOIN #CONTACTOS1 T ON (H.id_contacto=T.id_caso)&#xA;where id_periodo &gt;=201808&#xA;&#xA;DROP TABLE #CONTACTOS&#xA;DROP TABLE #CONTACTOS1&#xA;&#xA;---- Actualiza id_marca_cerrado_vencido&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_marca_cerrado_vencido = 1&#xA;WHERE (fecha_fin_contacto &gt; fecha_vencimiento_contacto)&#xA;and id_periodo &gt;= @PERIODO&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_marca_cerrado_vencido = 1&#xA;WHERE (fecha_vencimiento_contacto &lt; GETDATE() AND fecha_fin_contacto IS NULL)&#xA;and id_periodo &gt;= @PERIODO&#xA;&#xA;---- Actualiza campos de asociados como ( afiliado, secuencia, subnumero, etc)&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET afiliado = S.afiliado,&#xA;&#x9;secuencia = S.secuencia,&#xA;&#x9;subnumero = S.subnumero,&#xA;&#x9;id_producto = S.id_producto,&#xA;&#x9;id_subproducto = S.id_subproducto,&#xA;&#x9;id_plan_producto = S.id_plan_producto,&#xA;&#x9;meses_permanencia_contacto = S.meses_permanencia_stock,&#xA;&#x9;edad_actual_contacto = S.edad_periodo&#xA;FROM H_CONTACTOS C &#xA;INNER JOIN H_COMER_STOCK_AFILIA S ON (S.id_periodo=C.id_periodo AND S.id_persona=C.id_persona)&#xA;WHERE C.id_periodo &gt;= @Periodo&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET afiliado = S.afiliado,&#xA;&#x9;secuencia = S.secuencia,&#xA;&#x9;subnumero = S.subnumero,&#xA;&#x9;id_producto = S.id_producto,&#xA;&#x9;id_subproducto = S.id_subproducto,&#xA;&#x9;id_plan_producto = S.id_plan_producto,&#xA;&#x9;meses_permanencia_contacto = S.meses_permanencia_stock&#xA;FROM H_CONTACTOS C INNER JOIN H_COMER_STOCK_AFILIA S  ON (S.id_persona=C.id_persona)&#xA;WHERE S.id_periodo = (SELECT MAX(id_periodo) FROM H_COMER_STOCK_AFILIA X WHERE X.id_persona=S.id_persona)&#xA;AND C.afiliado IS NULL AND C.id_periodo &gt;= @Periodo&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET afiliado = 0,&#xA;&#x9;secuencia = 0,&#xA;&#x9;subnumero = 0,&#xA;&#x9;id_producto = 0,&#xA;&#x9;id_subproducto = 0,&#xA;&#x9;id_plan_producto = '99999'&#xA;FROM H_CONTACTOS WHERE afiliado IS NULL AND id_periodo &gt;= @Periodo&#xA;&#xA;--- Actualiza meses_permanencia_contacto en 0 si el mismo es null&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET meses_permanencia_contacto = 0&#xA;WHERE meses_permanencia_contacto IS NULL&#xA;&#xA;&#xA;-- LA FUNCION DATEDIFF SE HIZO ASI YA QUE CON LA PERSONA 680083 CALCULABA MAL LA EDAD&#xA;-- PORQUE ESA FUNCION SOLO RESTA AÑOS SIN TENER EN CUENTA DIAS Y MESES. LA UTILIZADA ACTUALMENTE SE ENCONTRO EN INTERNET Y FUNCIONA BIEN.&#xA;&#xA;---- Actualiza edad_actual_contacto&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET edad_actual_contacto = Edad&#xA;FROM H_CONTACTOS C INNER JOIN (&#xA;SELECT P.id_persona, Fecha_Nacimiento, cast(datediff(dd,Fecha_Nacimiento,CAST(CAST(dbo.Devuelve_Fecha(C.id_periodo) AS VARCHAR(10)) AS DATE)) / 365.25 as int) AS Edad&#xA;FROM D_PERSONAS P INNER JOIN H_CONTACTOS C ON (P.id_persona=C.id_persona)&#xA;WHERE Fecha_Nacimiento &lt;&gt; 00000000) X&#xA;ON (X.id_persona=C.id_persona)&#xA;WHERE LEFT(X.Fecha_Nacimiento, 6)&lt;=C.id_periodo &#xA;AND C.id_persona &lt;&gt; 0&#xA;AND C.id_periodo &gt;= @Periodo&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET edad_actual_contacto = 0&#xA;WHERE edad_actual_contacto IS NULL&#xA;&#xA;---- Actualiza Cantidad Unidades Organizacionales&#xA;&#xA;SELECT P.id_caso, COUNT(DISTINCT P.id_unidad_organizacional) AS CantidadUnidades&#xA;into  #Temp_CantidadUnidades&#xA;FROM CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK)&#xA;where fecha_ingreso  &gt;=  @FECHA&#xA;GROUP BY P.id_caso&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET cant_unidades_organizacionales = CantidadUnidades&#xA;FROM H_CONTACTOS C &#xA;INNER JOIN #Temp_CantidadUnidades P ON (P.id_caso=C.id_contacto)&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;---- Actualiza Cantidad Pasos&#xA;&#xA;SELECT P.id_caso, COUNT(DISTINCT P.id) AS CantidadPasos&#xA;into  #Temp_CantidadPasos&#xA;FROM CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK)&#xA;where fecha_ingreso  &gt;=  @FECHA and P.resultado &lt;&gt; ''&#xA;GROUP BY P.id_caso&#xA;&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET cant_pasos = CantidadPasos&#xA;FROM H_CONTACTOS C &#xA;INNER JOIN #Temp_CantidadPasos P ON (P.id_caso=C.id_contacto)&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;---- Actualiza Tiempo Total&#xA;&#xA;SELECT P.id_caso, SUM(P.tiempo_total) AS TiempoTotal&#xA;into  #Temp_TiempoTotal&#xA;FROM CONTACTOS.callcenter_gestion.dbo.PASO P WITH (NOLOCK)&#xA;where fecha_ingreso  &gt;=  @FECHA&#xA;GROUP BY P.id_caso&#xA;&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET tiempo_total = TiempoTotal&#xA;FROM H_CONTACTOS C &#xA;INNER JOIN #Temp_TiempoTotal P ON (P.id_caso=C.id_contacto)&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;---- Actualiza id_usuario_supervisor&#xA;&#xA;SELECT EP.id_empleado, P.id id_perfil, P.id_parent, C.id_usuario_carga_contacto INTO #TEMP&#xA;FROM RRHH.RRHH.DBO.EMPLEADO E &#xA;INNER JOIN RRHH.RRHH.DBO.EMPLEADO_PERFIL EP ON (E.id=EP.id_empleado)&#xA;INNER JOIN RRHH.RRHH.DBO.PERFIL P ON (EP.id_perfil=P.id)&#xA;INNER JOIN D_USUARIOS_CARGA_CONTACTOS C ON (C.de_usuario_carga_contacto=E.usuario COLLATE SQL_Latin1_General_CP850_CI_AI)&#xA;WHERE E.fecha_egreso IS NULL AND P.fecha_baja IS NULL&#xA;&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_usuario_supervisor = C.id_usuario_supervisor&#xA;FROM RRHH.RRHH.DBO.EMPLEADO E &#xA;INNER JOIN RRHH.RRHH.DBO.EMPLEADO_PERFIL EP ON (E.id=EP.id_empleado)&#xA;INNER JOIN #TEMP T ON (T.id_parent=EP.id_perfil)&#xA;INNER JOIN D_USUARIOS_SUPERVISORES C ON (C.de_usuario_supervisor=E.usuario COLLATE SQL_Latin1_General_CP850_CI_AI)&#xA;INNER JOIN H_CONTACTOS H ON (T.id_usuario_carga_contacto=H.id_usuario_carga_contacto)&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;&#xA;DROP TABLE #TEMP&#xA;&#xA;-- Actualiza supervisor ATENTO y V/N&#xA;-- Setea los supervisores de los contactos segun los periodos &#xA;&#xA;UPDATE H_CONTACTOS &#xA;SET id_usuario_supervisor = S.nro_documento_supervisor&#xA;FROM H_CONTACTOS H&#xA;INNER JOIN D_USUARIOS_CARGA_CONTACTOS A ON (A.id_usuario_carga_contacto = H.id_usuario_carga_contacto)&#xA;INNER JOIN H_SUPERVISORES_ATENTO S ON (S.de_usuario_carga_contacto= A.de_usuario_carga_contacto and H.id_periodo=S.id_periodo)&#xA;WHERE H.id_unidad_organizacional_contacto IN (449, 454,586)&#xA;&#xA;---- Setea en 0 los que no encuentra&#xA;&#xA;update  H_CONTACTOS &#xA;SET id_usuario_supervisor = 0&#xA;where id_usuario_supervisor is null&#xA;&#xA;----INSERTA en H_CONTACTOS_DETALLE.&#xA;&#xA;SELECT id_caso, id_unidad_organizacional,  P.tiempo_total&#xA;into  #Temp_H_CONTACTOS_DETALLE&#xA;FROM CONTACTOS.CALLCENTER_GESTION.DBO.PASO P WITH (NOLOCK)&#xA;where fecha_ingreso  &gt;=  @FECHA &#xA;GROUP BY P.id_caso, id_unidad_organizacional,  P.tiempo_total&#xA;&#xA;&#xA;INSERT INTO H_CONTACTOS_DETALLE&#xA;SELECT C.id_periodo, id_caso, id_unidad_organizacional, COUNT(id_unidad_organizacional), SUM(P.tiempo_total)&#xA;FROM #Temp_H_CONTACTOS_DETALLE P &#xA;INNER JOIN H_CONTACTOS C ON (P.id_caso=C.id_contacto)&#xA;WHERE C.id_periodo &gt;= @Periodo&#xA;GROUP BY C.id_periodo, id_caso, id_unidad_organizacional&#xA;&#xA;---- ACTUALIZA RANGO DE ACUERDO A LA CANTIDAD DE REITERACIONES&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_rango_reiteracion_contacto =&#xA;&#x9;CASE&#xA;&#x9;&#x9;WHEN cant_reiteraciones IN (0) THEN 0&#xA;&#x9;&#x9;WHEN cant_reiteraciones IN (1) THEN 1&#xA;&#x9;&#x9;WHEN cant_reiteraciones IN (2, 3) THEN 2&#xA;&#x9;&#x9;WHEN cant_reiteraciones IN (4, 5, 6) THEN 3&#xA;&#x9;&#x9;WHEN cant_reiteraciones IN (7, 8, 9, 10) THEN 4&#xA;&#x9;&#x9;WHEN cant_reiteraciones &gt; 10 THEN 5&#xA;&#x9;END&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;&#xA;---- Actualiza id_codigo_clasificacion&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_codigo_clasificacion = D.codigo&#xA;FROM H_CONTACTOS C INNER JOIN CONTACTOS.callcenter_gestion.dbo.TIPO_CASO_CATEGORIA D WITH (NOLOCK) ON (C.id_codigo_clasificacion_ampliado= D.id)&#xA;WHERE id_periodo &gt;= @Periodo&#xA;&#xA;&#xA;-- Para las unidades organizacionales telefonicas se setea el objetivo en 0.95&#xA;-- Se setea el objetivo en 0,95 para todos hasta abril&#xA;&#xA;UPDATE H_CONTACTOS &#xA;SET objetivo_cierre_primer_contacto = 0.95&#xA;from H_CONTACTOS C&#xA;inner join D_UNIDADES_ORGANIZACIONALES_CONTACTOS U  on C.id_unidad_organizacional_contacto = U.id_unidad_organizacional_contacto&#xA;WHERE id_periodo &lt; 201804 OR U.id_agrupador_unidad_organizacional_contacto = 2&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET objetivo_cierre_primer_contacto = &#xA;CASE &#xA;&#x9;WHEN id_periodo &lt;= 201803 THEN 0.95&#xA;&#x9;WHEN id_periodo BETWEEN 201804 AND 201902 THEN 0.75&#xA;&#x9;WHEN id_periodo &gt;= 201903 THEN 0.95&#xA;&#x9;ELSE 0&#xA;END&#xA;FROM H_CONTACTOS C&#xA;INNER JOIN D_UNIDADES_ORGANIZACIONALES_CONTACTOS U  on C.id_unidad_organizacional_contacto = U.id_unidad_organizacional_contacto&#xA;WHERE U.id_agrupador_unidad_organizacional_contacto = 1&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_marca_atencion_posicion = 1&#xA;FROM H_CONTACTOS C &#xA;INNER JOIN H_COMER_STOCK_AFILIA S ON (C.id_periodo=S.id_periodo AND C.id_persona=S.id_persona)&#xA;INNER JOIN D_UNIDADES_ORGANIZACIONALES_CONTACTOS U ON (U.id_unidad_organizacional_contacto=C.id_unidad_organizacional_contacto and U.id_posicion=S.id_posicion_atencion_personal)&#xA;WHERE id_posicion_atencion_personal &lt;&gt; 0 AND C.id_periodo &gt;= @Periodo&#xA;&#xA;------- Script Actualización id_jefe_contact_center. &#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_jefe_contact_center = 1&#xA;WHERE id_unidad_organizacional_contacto = 6 and id_periodo &gt;= @Periodo&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_jefe_contact_center = 2&#xA;WHERE id_unidad_organizacional_contacto IN (449, 454) and id_periodo &gt;= @Periodo&#xA;&#xA;UPDATE H_CONTACTOS&#xA;SET id_jefe_contact_center = 3&#xA;WHERE id_unidad_organizacional_contacto IN (586) and id_periodo &gt;= @Periodo&#xA;&#xA;/* Desde el periodo Mayo 2019 es Ana Julia Luques (jefe contact = 4 ) */&#xA;&#xA;UPDATE H_CONTACTOS SET id_jefe_contact_center = 4&#xA;from H_CONTACTOS&#xA;where id_jefe_contact_center = 1 and id_periodo &gt;= 201905&#xA;and id_periodo &gt;= @Periodo&#xA;&#xA;-- Pone en 1 a aquellos contactos que deben cerrarse en primer contacto&#xA;&#xA;update h_contactos &#xA;set id_marca_debe_cerrarse_primer_contacto = 1&#xA;from h_contactos h  inner join  contactos.callcenter_gestion.dbo.rel_tipo_Caso_categoria_etiqueta c WITH (NOLOCK) on h.id_tipo_caso_contacto_ampliado = c.id_tipo_caso &#xA;and h.id_codigo_clasificacion_ampliado = c.id_tipo_caso_categoria&#xA;where c.id_etiqueta = '11'&#xA;&#xA;/* Actualización id_compania en H_Contactos */&#xA;&#xA;UPDATE H_CONTACTOS&#xA;set id_compania = RL.id_compania&#xA;FROM H_CONTACTOS C&#xA;INNER JOIN D_PLANES PL ON (C.id_producto = PL.id_producto AND C.id_plan_producto = PL.id_plan_producto)&#xA;INNER JOIN D_SUBRUBRO_LEY SL ON (SL.Id_SubRubro_Ley = PL.id_SubRubro_ley)&#xA;INNER JOIN D_RUBRO_LEY RL ON (RL.Id_Rubro_ley = SL.id_Rubro_Ley)&#xA;where C.id_periodo &gt;= @Periodo&#xA;&#xA;---- Si en el paso anterior no la encuentra inicializar con compañia = F/D.&#xA;---- Para todos los casos donde no se pueda deducir la misma porque no tiene persona o la misma no esta en stock.&#xA;&#xA;UPDATE H_CONTACTOS&#xA;set id_compania = 9&#xA;where id_compania is null&#xA;and id_periodo &gt;= @Periodo&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="User::Fecha"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="1"
            SQLTask:DtsVariableName="User::Periodo"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{298D5967-48A4-4123-A370-370DA13B5B99}"
      DTS:From="Package\Elimina periodo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Actualiza variable Fecha" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{6ED71183-53B1-4310-8CBA-ABCBF895021D}"
      DTS:From="Package\Actualiza variable Periodo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Elimina periodo" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{CB20B145-B6C6-43F0-A234-7A62836D32BE}"
      DTS:From="Package\Actualiza variable Fecha"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Actualiza tablas de dimensión" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{B60DC8B7-84B5-4F12-854B-0B6153FB772E}"
      DTS:From="Package\Actualiza tablas de dimensión"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Inserta en H_CONTACTOS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{54B4FEB1-D194-4645-8CE2-265E0B1A633E}"
      DTS:From="Package\Actualiza cascada y marcas en H_CONTACTOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Actualiza supervisores en H_CONTACTOS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{51D8E409-3230-48BC-B9E7-C7A7EDF0D569}"
      DTS:From="Package\Inserta en H_CONTACTOS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\Carga h_metadatos_contactos" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{8F17F6BA-D71A-4E88-823B-DB8A88EC229D}"
      DTS:From="Package\Carga h_metadatos_contactos"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\Actualiza cascada y marcas en H_CONTACTOS" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="316,42"
          Id="Package\Actualiza cascada y marcas en H_CONTACTOS"
          TopLeft="0.653133423180606,491.483827493262" />
        <NodeLayout
          Size="290,42"
          Id="Package\Actualiza supervisores en H_CONTACTOS"
          TopLeft="13.6531334231806,572.481132075472" />
        <NodeLayout
          Size="224,42"
          Id="Package\Actualiza tablas de dimensión"
          TopLeft="46.6531334231806,248.491913746631" />
        <NodeLayout
          Size="199,42"
          Id="Package\Actualiza variable Fecha"
          TopLeft="59.1531334231806,167.494609164421" />
        <NodeLayout
          Size="206,42"
          Id="Package\Actualiza variable Periodo"
          TopLeft="55.6531334231806,5.49999999999999" />
        <NodeLayout
          Size="229,42"
          Id="Package\Carga h_metadatos_contactos"
          TopLeft="44.1531334231806,410.486522911051" />
        <NodeLayout
          Size="155,42"
          Id="Package\Elimina periodo"
          TopLeft="81.1531334231806,86.4973045822103" />
        <NodeLayout
          Size="214,42"
          Id="Package\Inserta en H_CONTACTOS"
          TopLeft="51.6531334231806,329.489218328841" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="158.653133423181,128.49730458221">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9973045822103"
              Start="0,0"
              End="0,31.4973045822103">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4973045822103" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="158.653133423181,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9973045822103"
              Start="0,0"
              End="0,31.4973045822103">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4973045822103" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="158.653133423181,209.494609164421">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.99730458221"
              Start="0,0"
              End="0,31.49730458221">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.49730458221" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="158.653133423181,290.491913746631">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.99730458221"
              Start="0,0"
              End="0,31.49730458221">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.49730458221" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="158.653133423181,533.483827493262">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9973045822101"
              Start="0,0"
              End="0,31.4973045822101">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4973045822101" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="158.653133423181,371.489218328841">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.99730458221"
              Start="0,0"
              End="0,31.49730458221">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.49730458221" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="158.653133423181,452.486522911051">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.9973045822103"
              Start="0,0"
              End="0,31.4973045822103">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.4973045822103" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>