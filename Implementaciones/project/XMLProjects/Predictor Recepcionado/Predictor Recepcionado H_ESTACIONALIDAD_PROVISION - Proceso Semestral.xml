<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/10/2020 11:05:50 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DA21465-XXXXX"
  DTS:CreatorName="AMS\aquaglia"
  DTS:DTSID="{F2DB879F-048E-4A76-8A5C-A1ECC599C3E9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.94"
  DTS:LocaleID="11274"
  DTS:ObjectName="Predictor Recepcionado H_ESTACIONALIDAD_PROVISION - Proceso Semestral"
  DTS:PackageType="5"
  DTS:VersionBuild="8"
  DTS:VersionGUID="{F7C4062B-11FF-4515-8E41-B1E62E44B588}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{12B6153A-944F-4B06-9D8E-149A140AFEE5}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{12B6153A-944F-4B06-9D8E-149A140AFEE5}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Completa AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{ef214b41-1ac5-4524-b594-f35a7dc2ff53}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Completa AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{11A66A51-2EA4-48C1-B72A-809D361D18A4}"
          SQLTask:SqlStatementSource="&#xA;--********************************************************************************************************--&#xA;--********************************************************************************************************--&#xA;-- RECORDAR QUE REINTEGROS, ACUMULA TODAS LAS PROVISIONES POR PERIODO &#xA;-- REINTEGROS ES EL PROVEEDOR 0&#xA;-- no puedo asignarle 'varios' proque no existe como provision, VER 10 B &#xA;-- se le asigna provision 0 y luego se utiliza umbral para mostrar 'Provisión Reintegro'&#xA;--********************************************************************************************************--&#xA;--********************************************************************************************************--&#xA;&#xA;&#x9;&#xA;-- 00 -- Declaración de variables&#xA;-- se requiere diferenciar ultimos 12 periodos, ultimos 13-24 periodos y ultimos 25-36 periodos&#xA;-- para ponderar 60,30 y 10% respectivamente, sumando luego para obtener ponderación período actual&#xA;DECLARE @PERIODO_ACTUAL INT    -- se define foto cada 6 meses asi que periodo actual es cada 6 meses&#xA;DECLARE @PERIODO_PESO_60_Desde INT&#xA;DECLARE @PERIODO_PESO_60_Hasta INT&#xA;DECLARE @PERIODO_PESO_30_Desde INT&#xA;DECLARE @PERIODO_PESO_30_Hasta INT&#xA;DECLARE @PERIODO_PESO_10_Desde INT&#xA;DECLARE @PERIODO_PESO_10_Hasta INT&#xA;&#xA;&#xA;--SET @PERIODO_ACTUAL = (SELECT MAX(ID_PERIODO-1) FROM D_PERIODO WHERE vigente = 1) --BUSCO EL ANTERIOR QUE ESTÁ CERRADO Y COMPLETO&#xA;SET @PERIODO_ACTUAL = (SELECT MAX(ID_PERIODO) FROM D_PERIODO WHERE vigente = 1 &#x9;and id_mes in (6, 12)) &#xA;set @PERIODO_PESO_60_Desde = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,12)) &#xA;set @PERIODO_PESO_60_Hasta = @PERIODO_ACTUAL&#xA;set @PERIODO_PESO_30_Desde = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,24)) &#xA;set @PERIODO_PESO_30_Hasta = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,13)) &#xA;set @PERIODO_PESO_10_Desde = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,36)) &#xA;set @PERIODO_PESO_10_Hasta = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,25)) &#xA;&#xA;&#xA;--SELECT &#xA;--@PERIODO_ACTUAL as PERIODO_ACTUAL , &#xA;--@PERIODO_PESO_60_Desde as PeriodoDesde60,&#xA;--@PERIODO_PESO_60_Hasta as PeriodoHasta60,&#xA;--@PERIODO_PESO_30_Desde as PeriodoDesde30,&#xA;--@PERIODO_PESO_30_Hasta as PeriodoHasta30,&#xA;--@PERIODO_PESO_10_Desde as PeriodoDesde10,&#xA;--@PERIODO_PESO_10_Hasta as PeriodoHasta10&#xA;&#xA;&#xA;-- 10 -- Toma de H_RECEPCIONADO_NUEVO. DETALLE POR ACREEDOR&#xA;-- agrupado por rn.id_compania,&#x9;rn.id_periodo, rn.id_acreedor, rn.id_tipo_prestador, pr.id_provision, ac.id_posicion_acreedor &#xA;-- para los últimos 36 meses a partir de mes actual menos 1&#xA;-- 10 a -- Para lo que es Facturación, desglosado por Provision&#xA;INSERT INTO AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#x9;&#xA;SELECT&#xA;&#x9;rn.id_compania  id_compania,&#xA;&#x9;max(co.de_compania)  de_compania,&#xA;&#x9;rn.id_periodo  ID_Periodo,&#xA;&#x9;rn.id_acreedor  id_acreedor,&#xA;&#x9;rn.id_tipo_prestador  id_tipo_prestador,&#xA;&#x9;max(ac.de_acreedor)  de_acreedor,&#xA;&#x9;pr.id_provision  id_provision_acreedor,&#xA;&#x9;max(pr.de_provision)  de_provision_acreedor,&#xA;&#x9;ac.id_posicion_acreedor  id_posicion_acreedor,&#xA;&#x9;max(pa.de_posicion_acreedor)  de_posicion_acreedor,&#xA;&#x9;0 Total_Periodo,&#xA;&#x9;0 Total_Periodo_Provision,&#xA;&#x9;sum(rn.Importe_Recepcionado) Total_Periodo_Acreedor_Provision,&#xA;&#x9;0  Porcentaje_Periodo_Provision,&#xA;&#x9;0 Periodo_Peso&#xA;from&#x9;H_RECEPCIONADO_NUEVO&#x9;rn&#xA;&#x9;join&#x9;D_ACREEDOR&#x9;ac&#xA;&#x9;  on &#x9;(rn.id_acreedor = ac.id_acreedor and &#xA;&#x9;rn.id_tipo_prestador = ac.id_tipo_prestador)&#xA;&#x9;join&#x9;D_COMPANIA&#x9;co&#xA;&#x9;  on &#x9;(rn.id_compania = co.id_compania)&#xA;&#x9;join&#x9;D_PROVISION&#x9;pr&#xA;--&#x9;  on &#x9;(rn.id_provision = pr.id_provision) --------------------------------------------------------&#xA;&#x9;  on &#x9;(ac.id_provision_acreedor = pr.id_provision) &#xA;&#x9;join&#x9;D_POSICION_ACREEDOR&#x9;pa&#xA;&#x9;  on &#x9;(ac.id_posicion_acreedor = pa.id_posicion_acreedor)&#xA;where&#x9;&#xA; (rn.id_periodo &gt;= @PERIODO_PESO_10_Desde and rn.id_periodo &lt;= @PERIODO_ACTUAL&#xA; and rn.id_compania in (1, 2)&#xA; and rn.id_tipo_facturacion in ('F')&#xA; and rn.Importe_Recepcionado &lt;&gt; 0&#xA; )&#xA;group by&#x9;&#xA;&#x9;rn.id_compania,&#xA;&#x9;rn.id_periodo,&#xA;&#x9;rn.id_acreedor,&#xA;&#x9;rn.id_tipo_prestador,&#xA;&#x9;pr.id_provision,&#xA;&#x9;ac.id_posicion_acreedor&#xA;&#xA;&#xA;-- 10 b -- Para lo que es Reintegros, agrupando por período en Provisión 'Varios', por el momento en 0-FALTAN DATOS &#xA;-- no se discrimina por provisión dentro de Reintegros&#xA;INSERT INTO AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#x9;&#xA;SELECT&#xA;&#x9;rn.id_compania  id_compania,&#xA;&#x9;max(co.de_compania)  de_compania,&#xA;&#x9;rn.id_periodo  ID_Periodo,&#xA;&#x9;rn.id_acreedor  id_acreedor,&#xA;&#x9;rn.id_tipo_prestador  id_tipo_prestador,&#xA;&#x9;max(ac.de_acreedor)  de_acreedor,&#xA;&#x9;0 id_provision_acreedor,&#xA;&#x9;max(pr.de_provision)  de_provision_acreedor,&#xA;&#x9;ac.id_posicion_acreedor  id_posicion_acreedor,&#xA;&#x9;max(pa.de_posicion_acreedor)  de_posicion_acreedor,&#xA;&#x9;0 Total_Periodo,&#xA;&#x9;0 Total_Periodo_Provision,&#xA;&#x9;sum(rn.Importe_Recepcionado) Total_Periodo_Acreedor_Provision,&#xA;&#x9;0  Porcentaje_Periodo_Provision,&#xA;&#x9;0 Periodo_Peso&#xA;from&#x9;H_RECEPCIONADO_NUEVO&#x9;rn&#xA;&#x9;join&#x9;D_ACREEDOR&#x9;ac&#xA;&#x9;  on &#x9;(rn.id_acreedor = ac.id_acreedor and &#xA;&#x9;rn.id_tipo_prestador = ac.id_tipo_prestador)&#xA;&#x9;join&#x9;D_COMPANIA&#x9;co&#xA;&#x9;  on &#x9;(rn.id_compania = co.id_compania)&#xA;&#x9;join&#x9;D_PROVISION&#x9;pr&#xA;--&#x9;  on &#x9;(rn.id_provision = pr.id_provision) ---------------------------------------------------------&#xA;&#x9;  on &#x9;(ac.id_provision_acreedor = pr.id_provision) &#xA;&#x9;join&#x9;D_POSICION_ACREEDOR&#x9;pa&#xA;&#x9;  on &#x9;(ac.id_posicion_acreedor = pa.id_posicion_acreedor)&#xA;where&#x9;&#xA; (rn.id_periodo &gt;= @PERIODO_PESO_10_Desde and rn.id_periodo &lt;= @PERIODO_ACTUAL&#xA; and rn.id_compania in (1, 2)&#xA; and rn.id_tipo_facturacion in ('R')&#xA; and rn.Importe_Recepcionado &lt;&gt; 0&#xA; )&#xA;group by&#x9;&#xA;&#x9;rn.id_compania,&#xA;&#x9;rn.id_periodo,&#xA;&#x9;rn.id_acreedor,&#xA;&#x9;rn.id_tipo_prestador,&#xA;&#x9;ac.id_posicion_acreedor&#xA;&#xA;&#xA;&#xA;-- 20 -- Según periodo, se actualiza porcentaje Participación &#xA;update AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO set Periodo_Peso = '0.60' where id_periodo &gt;= @PERIODO_PESO_60_Desde  and id_periodo &lt;= @PERIODO_PESO_60_Hasta &#xA;update AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO set Periodo_Peso = '0.30' where id_periodo &gt;= @PERIODO_PESO_30_Desde  and id_periodo &lt;= @PERIODO_PESO_30_Hasta &#xA;update AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO set Periodo_Peso = '0.10' where id_periodo &gt;= @PERIODO_PESO_10_Desde  and id_periodo &lt;= @PERIODO_PESO_10_Hasta &#xA;&#xA;&#xA;-- 30 -- Se calcula total periodo provision, acumulando por compania, periodo, provision_acreedor&#x9;&#xA;-- TOTAL PERIODO PROVISION&#xA;select id_compania, id_periodo, id_provision_acreedor, sum(Total_Periodo_Acreedor_Provision) as Total_Periodo_Provision&#xA;Into #AgrupadoProvision&#xA;from AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#xA;&#x9;group by id_compania, id_periodo, id_provision_acreedor&#xA;    ORDER BY id_compania, id_periodo, id_provision_acreedor&#xA;&#xA;--select * from #AgrupadoProvision&#xA;update AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO  set Total_Periodo_Provision = ap.Total_Periodo_Provision &#xA;from #AgrupadoProvision ap&#xA;INNER JOIN  AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO pr ON pr.id_compania=ap.id_compania and pr.ID_Periodo=ap.ID_Periodo and pr.id_provision_acreedor=ap.id_provision_acreedor&#xA;&#xA;&#xA;-- 40 -- Se calcula total período, acumulando por compania y período&#xA;-- TOTAL PERIODO &#xA;select id_compania, id_periodo, sum(Total_Periodo_Acreedor_Provision) as Total_Periodo&#xA;Into #AgrupadoPeriodo&#xA;from AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#xA;&#x9;group by id_compania, id_periodo&#xA;    ORDER BY id_compania, id_periodo&#xA;&#xA;update AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO  set Total_Periodo = ap.Total_Periodo&#xA;from #AgrupadoPeriodo ap&#xA;INNER JOIN  AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO pr ON pr.id_compania=ap.id_compania and pr.ID_Periodo=ap.ID_Periodo&#xA;&#xA;&#xA;-- 50 -- Se actualiza porcentaje de cada provision respecto al total periodo&#xA;-- PORCENTAJE PERIODO PROVISION&#xA;UPDATE AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO &#xA;SET Porcentaje_Periodo_Provision = (total_periodo_provision*100)/Total_Periodo --round(((total_periodo_provision*100)/Total_Periodo),2)&#xA;&#xA;&#xA;-- 100 -- borra tablas temporales&#xA;drop table #AgrupadoProvision&#xA;drop table #AgrupadoPeriodo&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Completa H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{b479f4ed-70a4-4f31-927f-51f02b577c3c}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Completa H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{11A66A51-2EA4-48C1-B72A-809D361D18A4}"
          SQLTask:SqlStatementSource="&#xA;--********************************************************************************************************--&#xA;--********************************************************************************************************--&#xA;-- RECORDAR QUE REINTEGROS, ACUMULA TODAS LAS PROVISIONES POR PERIODO &#xA;-- REINTEGROS ES EL PROVEEDOR 0&#xA;-- no puedo asignarle 'varios' proque no existe como provision, VER 10 B &#xA;-- se le asigna provision 0 y luego se utiliza umbral para mostrar 'Provisión Reintegro'&#xA;--********************************************************************************************************--&#xA;--********************************************************************************************************--&#xA;&#xA;&#x9;&#xA;-- 00 -- Declaración de variables&#xA;-- se requiere diferenciar ultimos 12 periodos, ultimos 13-24 periodos y ultimos 25-36 periodos&#xA;-- para ponderar 60,30 y 10% respectivamente, sumando luego para obtener ponderación período actual&#xA;DECLARE @PERIODO_ACTUAL INT    -- se define foto cada 6 meses asi que periodo actual es cada 6 meses&#xA;DECLARE @PERIODO_PESO_60_Desde INT&#xA;DECLARE @PERIODO_PESO_60_Hasta INT&#xA;DECLARE @PERIODO_PESO_30_Desde INT&#xA;DECLARE @PERIODO_PESO_30_Hasta INT&#xA;DECLARE @PERIODO_PESO_10_Desde INT&#xA;DECLARE @PERIODO_PESO_10_Hasta INT&#xA;&#xA;&#xA;--SET @PERIODO_ACTUAL = (SELECT MAX(ID_PERIODO-1) FROM D_PERIODO WHERE vigente = 1) --BUSCO EL ANTERIOR QUE ESTÁ CERRADO Y COMPLETO&#xA;SET @PERIODO_ACTUAL = (SELECT MAX(ID_PERIODO) FROM D_PERIODO WHERE vigente = 1 &#x9;and id_mes in (6, 12)) &#xA;set @PERIODO_PESO_60_Desde = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,12)) &#xA;set @PERIODO_PESO_60_Hasta = @PERIODO_ACTUAL&#xA;set @PERIODO_PESO_30_Desde = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,24)) &#xA;set @PERIODO_PESO_30_Hasta = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,13)) &#xA;set @PERIODO_PESO_10_Desde = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,36)) &#xA;set @PERIODO_PESO_10_Hasta = (select dbo.PeriodosAnteriores(@PERIODO_ACTUAL,25)) &#xA;&#xA;&#xA;--SELECT &#xA;--@PERIODO_ACTUAL as PERIODO_ACTUAL , &#xA;--@PERIODO_PESO_60_Desde as PeriodoDesde60,&#xA;--@PERIODO_PESO_60_Hasta as PeriodoHasta60,&#xA;--@PERIODO_PESO_30_Desde as PeriodoDesde30,&#xA;--@PERIODO_PESO_30_Hasta as PeriodoHasta30,&#xA;--@PERIODO_PESO_10_Desde as PeriodoDesde10,&#xA;--@PERIODO_PESO_10_Hasta as PeriodoHasta10&#xA;&#xA;&#xA;&#xA;-- 200 - RESUMEN PORCENTAJE PERIODO PROVISION&#xA;-- inserta en tabla auxiliar, para agrupar por compania, periodo y privision_acreedor&#xA;INSERT into H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#xA;select  &#xA;id_compania, id_provision_acreedor, id_periodo, &#xA;max(Porcentaje_Periodo_Provision) as Porcentaje_Periodo_Provision,&#xA;max(Periodo_Peso) as Periodo_Peso,&#xA;0 Porcentaje_Periodo_Peso,&#xA;0 Suma_Porentaje_Periodo_Peso&#xA;from AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#xA;group by id_compania, id_periodo,  id_provision_acreedor&#xA;order by id_compania, id_periodo,  id_provision_acreedor&#xA;&#xA;&#xA;-- 210 -- actualiza  Porcentaje_Periodo_Peso = Porcentaje_Periodo_Provision * Periodo_Peso&#xA;update H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO &#xA;set Porcentaje_Periodo_Peso = Porcentaje_Periodo_Provision * Periodo_Peso&#xA;&#xA;&#xA;-- 220 -- obtiene Suma_Porentaje_Periodo_Peso agrupando por compania, provision_acreedor, mes (tomando los 36 periodos desde periodo actual - 1)&#xA;-- puntapié inicial para ponderar para mes en curso, cada provisión acrueedor, mes a mes&#xA;-- luego se calcula el peso de cada acreedor en su provisión&#xA;select id_compania, id_provision_acreedor, SubString(CAST(id_periodo as CHAR(6)),5,2) as id_mes, &#xA;sum(Porcentaje_Periodo_Peso) as Suma_Porentaje_Periodo_Peso&#xA;into #ResumenPeriodoProvision&#xA;from H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO&#xA;group by id_compania, id_provision_acreedor, SubString(CAST(id_periodo as CHAR(6)),5,2)&#xA;&#xA;update H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO  set Suma_Porentaje_Periodo_Peso = rpp.Suma_Porentaje_Periodo_Peso&#xA;from #ResumenPeriodoProvision rpp&#xA;INNER JOIN  H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO ep &#xA;ON rpp.id_compania=ep.id_compania and rpp.id_provision_acreedor=ep.id_provision_acreedor &#xA;and rpp.ID_MES=SubString(CAST(ep.id_periodo as CHAR(6)),5,2)&#xA;where ep.Porcentaje_Periodo_Provision = 0.6 &#xA;&#xA;&#xA;-- 230 -- borra tablas temporales&#xA;drop table #ResumenPeriodoProvision&#xA;&#xA;&#xA;-- 300 --  actualiza id_periodo_anual_predictor_recepcionado en D_PERIODO, primero seteo todas en 0 y luego actualizo&#xA;update D_PERIODO set id_periodo_anual_predictor_recepcionado = 0&#xA;update D_PERIODO set id_periodo_anual_predictor_recepcionado = 3 where id_periodo &gt;= @PERIODO_PESO_60_Desde  and id_periodo &lt;= @PERIODO_PESO_60_Hasta &#xA;update D_PERIODO set id_periodo_anual_predictor_recepcionado = 2 where id_periodo &gt;= @PERIODO_PESO_30_Desde  and id_periodo &lt;= @PERIODO_PESO_30_Hasta &#xA;update D_PERIODO set id_periodo_anual_predictor_recepcionado = 1 where id_periodo &gt;= @PERIODO_PESO_10_Desde  and id_periodo &lt;= @PERIODO_PESO_10_Hasta &#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Limpia AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{D9F4DACD-343F-4E3B-9CA5-254DB5FE1B89}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Limpia AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{11A66A51-2EA4-48C1-B72A-809D361D18A4}"
          SQLTask:SqlStatementSource="delete from AUX_H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Limpia H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar SQL"
      DTS:DTSID="{6e592754-b52f-4c65-9ebf-c10d21ff4688}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Limpia H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{11A66A51-2EA4-48C1-B72A-809D361D18A4}"
          SQLTask:SqlStatementSource="delete from H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{3B2A7075-52DA-475B-8897-7B3D1033F8DA}"
      DTS:From="Package\Limpia AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Limpia H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{4CADC365-2DA1-4256-9441-F735E082D0C7}"
      DTS:From="Package\Limpia H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Completa AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{930588DF-2DAC-4837-A598-C83A508A69CC}"
      DTS:From="Package\Completa AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Completa H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="498.4,44"
          Id="Package\Completa AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
          TopLeft="143.99999666214,263.2" />
        <NodeLayout
          Size="457.6,42.4"
          Id="Package\Completa H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
          TopLeft="164.666662507587,367.2" />
        <NodeLayout
          Size="498.4,44"
          Id="Package\Limpia AUX_H_ESTACIONALIDAD_PROVISION_ PREDICTOR_RECEPCIONADO"
          TopLeft="143.99999666214,69.7066667438083" />
        <NodeLayout
          Size="436.8,41.6"
          Id="Package\Limpia H_ESTACIONALIDAD_PROVISION_PREDICTOR_RECEPCIONADO"
          TopLeft="174.666662110223,161.6" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="393.133329386181,113.706666743808">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47.8933332561917"
              Start="0,0"
              End="0,40.3933332561917">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.3933332561917" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="393.133329386181,203.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="393.333329584864,307.2">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>