<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="1/23/2019 8:09:06 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AMS06X"
  DTS:CreatorName="AMS\mpaludi"
  DTS:DTSID="{14BE9201-2256-4C2B-9345-AB0CDAFEFB4E}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="11274"
  DTS:ObjectName="Cursogramas H_CURSOGRAMAS"
  DTS:PackageType="5"
  DTS:VersionBuild="136"
  DTS:VersionGUID="{8B242971-E71E-4A0E-9C2A-D672F597EDA3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="DS_MSDB"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{88D8FCBA-8A92-413C-A56C-60312A4BBDD6}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables />
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">1,7,OnError</DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{88D8FCBA-8A92-413C-A56C-60312A4BBDD6}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_CURSOGRAMAS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{41F3A9B4-B7D0-433D-83DF-E2A82FAC7475}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_CURSOGRAMAS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4CDEDF1B-2D4F-438C-AE1C-573E513BD1BD}"
          SQLTask:SqlStatementSource="declare @periodo_a int  = (select min(dbo.devuelveperiodo(cast(fecha_recepcion as datetime ))) from aux_h_cursogramas )&#xA;&#xA;delete from h_cursogramas where id_periodo &gt;= @periodo_a&#xA;&#xA;-- Inserta en la H desde la aux con todos los campos calculados&#xA;INSERT INTO H_CURSOGRAMAS&#xA;select nro_cursograma, cast(fecha_recepcion as datetime ), dbo.devuelveperiodo(cast(fecha_recepcion as datetime )),id_acreedor,'P',cast(fecha_vencimiento as datetime),&#xA;0 as id_semana, case when fecha_cierre &lt;&gt; '00000000' then cast(isnull(fecha_cierre,'1900-01-01') as datetime) else '1900-01-01'  end,dbo.devuelveperiodo(case when fecha_cierre &lt;&gt; '00000000' then cast(isnull(fecha_cierre,'1900-01-01') as datetime) else '1900-01-01'  end), isnull(facturado_total,0),&#xA;cast(fecha_alta as datetime), case when sistema in (43,44,46) then 2 else 1 end as id_compañia, cant_ordenes, items_ordenes, cant_ordenes_amb,cant_ordenes_int, items_ordenes_amb, items_ordenes_int,items_archivo,items_preliq,&#xA;fact_total_internacion,0 as id_posicion_trazabilidad_cursograma, 0 as id_departamento_trazabilidad_cursograma, 0 as id_amrca_vencimiento,&#xA;getdate()-1 as fecha_actualizacion_cursograma, 0 as id_marca_recepcion_vencida,0 as id_marca_cerrado,1, 'F/D' as id_supervisor,0 as cant_cursograma_internacion, dbo.DevuelvePeriodo(cast(fecha_alta as datetime)),0 as nro_id_fecha_laboral_ingreso, 0 as nro_id_fecha_laboral_cierre,'' as id_sector_cursograma,&#xA;0 as cant_dias_vencido,0 as cant_dias_ingresa_vencido,0 as cant_dias_cierre,0 as id_agrupador_sector_cursograma,0 as id_periodo_laboral,'1900-01-01' as fecha_pago_cursograma, dbo.DevuelvePeriodo('1900-01-01') as id_periodo_pago_cursograma,0 as id_marca_cursograma_pagado,&#xA;9 as id_forma_pago_cursograma ,0 as cant_dias_pago_cursograma, 0 as cant_dias_plazo_pago_convenio,0 as id_usuario_sector_prestaciones,0 as id_producto , 0 as cant_dias_pago_cursograma_cerrado, 0 as cant_dias_pago_cursograma_vencido, id_estado_cursograma_trazabilidad, 0 as cant_dias_plazo_vencido, factura_proveedor&#x9;&#xA; from aux_h_cursogramas &#xA;where nro_cursograma &lt;&gt; 3890126&#xA;&#xA; -- Calcula Los campos restantes ya desde la h&#xA;update H_CURSOGRAMAS&#xA;set id_departamento_trazabilidad_cursograma = b.W00dac,&#xA;&#x9;id_posicion_trazabilidad_cursograma = b.W00pac&#xA;&#x9;from H_CURSOGRAMAS C inner join AS400.HOST03.SMPDATD.M101FCCO T on c.nro_cursograma = t.W01CUR&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; inner join AS400.HOST03.SMPDATD.M100FELE B on T.W01NRO = b.W00nro and b.W00sbn = t.W01SBN&#xA;&#xA;-- Setea la fecha de actualizacion &#xA;update H_CURSOGRAMAS &#xA;set fecha_actualizacion_cursograma = cast(getdate()-1 as date)&#xA;&#xA;update H_CURSOGRAMAS&#xA;set id_usuario_sector_prestaciones = d.id_usuario_sector_prestaciones&#xA;from as400.host03.dwhsmpd.qcursog h &#xA;inner join h_cursogramas C on h.cuc_num = c.nro_cursograma&#xA;INNER JOIN [dbo].[D_USUARIO_SECTOR_PRESTACIONES] d &#xA;on h.cuc_cie collate Modern_Spanish_CI_AI  = d.de_usuario_sector_prestaciones&#xA;&#xA;&#xA;update h_cursogramas &#xA;set id_producto = SRV_COD &#xA;from h_cursogramas h  inner join as400.host03.dwhsmpd.qcursog A &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;on a.cuc_num = h.nro_cursograma&#xA;&#xA;&#xA;-- Calcula los campos restantes&#xA;-- Calculas las marcas para filtros&#xA;update H_CURSOGRAMAS&#xA;set id_marca_recepcion_vencido = case when fecha_alta_cursograma &gt;= dateadd(dd,-4,fecha_vencimiento_cursograma)  then 1 else 2 end, -- pone 1 cuando ingresa vencido, es cuando ingresa 5 dias antes de que se venza o posterior&#xA;    id_marca_vencido_cursograma = case when fecha_cierre_cursograma &gt; fecha_vencimiento_cursograma then 1 else 2 end, -- Si la fecha de hoy es mayor a la de vencimiento esta vencido&#xA;&#x9;id_marca_cerrado_cursograma = case when fecha_cierre_cursograma &lt;&gt; '1900-01-01' then 1 else 2 end -- Si la fecha de cierre es distinta a la de defecto esta cerrado&#xA; &#xA;-- Pone en uno la marca de vencido si esta abierto pero la fecha de actualizacion (la de la ultima carga) es mayor que la de vencimiento, osea que ya se va a cerrar vencido&#xA; update H_CURSOGRAMAS&#xA; set id_marca_vencido_cursograma = 1  &#xA; where  fecha_actualizacion_cursograma &gt;= fecha_vencimiento_cursograma and fecha_cierre_cursograma = '1900-01-01' &#xA;&#xA;&#xA; -- A que numero de semana del año corresponde el cursograma&#xA;update H_CURSOGRAMAS&#xA;set id_semana = d.id_semana&#xA;from H_CURSOGRAMAS h inner join d_semanas d on h.fecha_vencimiento_cursograma between fecha_desde_semana and fecha_hasta_semana&#xA;&#x9;&#xA;&#x9;-- Setea el supervisor&#xA;update h_cursogramas&#xA;set id_supervisor = d.id_supervisor &#xA;from h_cursogramas h inner join  D_ACREEDOR A on a.id_acreedor = h.id_acreedor and a.id_tipo_prestador = h.id_tipo_prestador&#xA;inner join [D_SUPERVISORES_PROV_ESTRATEGICO] d on d.id_prestador_estrategico_acreedor = a.id_prestador_estrategico_acreedor and d.id_provision_acreedor = a.id_provision_acreedor&#xA;-- Setea cant_cursograma internacion&#xA;update h_cursogramas &#xA;set cant_cursograma_internacion = 1&#xA;where imp_facturacion_internacion &lt;&gt; 0&#xA;&#xA;-- Coloca el nro de la fecha laboral del mes&#xA;update H_CURSOGRAMAS&#xA;set nro_id_fecha_laboral_ingreso = id_dia_trabajado_nro&#xA;from H_CURSOGRAMAS h inner join D_FECHAS_LABORALES_CURSOGRAMAS d on h.fecha_recepcion_cursograma = d.id_fecha_cursogramas&#xA;&#xA;-- Setea la cantidad de dias vencidos para aquellos cursogramas cerrados vencidos&#xA;update h_cursogramas&#xA;set cant_dias_vencido = datediff(dd,fecha_vencimiento_cursograma,fecha_cierre_cursograma)&#xA;where fecha_vencimiento_cursograma &lt; fecha_cierre_cursograma &#xA;-- Setea la cantidad de dias vencidos para aquellos cursogramas abiertos y vencidos&#xA;update h_cursogramas&#xA;set cant_dias_vencido =  datediff(dd,fecha_vencimiento_cursograma,fecha_actualizacion_cursograma)&#xA;where (fecha_actualizacion_cursograma &gt; fecha_vencimiento_cursograma and fecha_cierre_cursograma = '1900-01-01' )&#xA;&#xA;&#xA;-- Setea la cantidad de dias que llego despues de vencer&#xA;-- Se toma como vencido 4 dias antes de la fecha de vencimiento (contando la de vencimiento 5 dias)&#xA;update h_cursogramas&#xA;set cant_dias_ingresa_vencido =  datediff(dd,(dateadd(dd,-4,fecha_vencimiento_cursograma)),fecha_alta_cursograma )&#xA;where id_marca_recepcion_vencido = 1&#xA;&#xA;&#xA;-- Setea cuanto tardo un cursograma en cerrar&#xA;update h_cursogramas&#xA;set cant_dias_cierre =  datediff(dd,fecha_recepcion_cursograma,fecha_cierre_cursograma)&#xA;where id_marca_cerrado_cursograma = 1&#xA;&#xA;update h_cursogramas &#xA;set id_sector_cursograma =  d.id_prestador_estrategico_acreedor+ cast(d.id_provision_acreedor as varchar(2))+ case when id_compania = 1 then 'SS' else 'SM' end&#xA;from H_CURSOGRAMAS h inner join D_ACREEDOR d on h.id_acreedor = d.id_acreedor and h.id_tipo_prestador = d.id_tipo_prestador&#xA;where id_provision_acreedor is not null and id_compania in (1,2)&#xA;&#xA;&#xA; update H_CURSOGRAMAS&#xA; set id_agrupador_sector_cursograma =  d.id_agrupador_sector_cursograma&#xA; from H_CURSOGRAMAS h  inner join D_SECTORES_CURSOGRAMAS d  on h.id_sector_cursograma = d.id_sector_cursograma&#xA;&#xA;--- setea fecha pago y forma desde query desarrollada por llli en el AS&#xA;update h_cursogramas &#xA;set fecha_pago_cursograma =  cast(cast(w_c411_fcom as varchar(8)) as datetime),&#xA;&#x9;id_forma_pago_cursograma = W_C411_MPAG&#xA;from H_CURSOGRAMAS H inner join as400.host03.dwhsmpd.qcursogp A  on h.nro_cursograma = a.CUC_NUM&#xA;&#xA;update h_cursogramas&#xA;set id_periodo_pago_cursograma = dbo.devuelveperiodo(fecha_pago_cursograma),&#xA;&#x9;id_marca_cursograma_pagado = case when fecha_pago_cursograma &lt;&gt; '1900-01-01' then 1 --Pagado&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  else 0 -- No pagado&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  end,&#xA;&#x9;cant_dias_pago_cursograma = case when fecha_pago_cursograma &lt;&gt; '1900-01-01' then datediff(day,fecha_recepcion_cursograma,fecha_pago_cursograma) else 0 end,&#xA;&#x9;cant_dias_pago_cursograma_cerrado =  case when id_periodo_cierre_cursograma &lt;&gt; 190001 and fecha_pago_cursograma &lt;&gt; '1900-01-01' then datediff(day,fecha_cierre_cursograma,fecha_pago_cursograma) else 0 end,&#xA;&#x9;cant_dias_pago_cursograma_vencido = case when fecha_pago_cursograma &lt;&gt; '1900-01-01' then datediff(day,fecha_vencimiento_cursograma,fecha_pago_cursograma)else 0 end,&#xA;&#x9;cant_dias_plazo_vencimiento = case when  datediff(day,fecha_recepcion_cursograma,fecha_vencimiento_cursograma) &lt; 0 then 0 &#xA;&#x9;&#x9;&#x9;&#x9;else  datediff(day,fecha_recepcion_cursograma,fecha_vencimiento_cursograma)  end&#xA;&#xA;&#xA;&#xA;update h_cursogramas &#xA;set cant_dias_pago_cursograma = 0&#xA;where cant_dias_pago_cursograma &lt; 0&#xA;&#xA;&#xA;&#xA;update h_cursogramas &#xA;set cant_dias_pago_cursograma_cerrado = 0&#xA;where cant_dias_pago_cursograma_cerrado &lt; 0&#xA;&#xA;&#xA;&#xA;-- Calculo de dias convenido prestador&#xA;&#xA;--- TEMPORAL Para fecha vigencia maxima&#xA;SELECT W_M182_NPRO as Nro_Proveedor, W_M182_PRBC as Tipo_Proveedor, &#xA;W_M182_PRdu AS Producto, MAX(W_M182_FVIG) as Fecha_Vigencia -- recordar colocar alias&#xA;into #TempFechaVigencia &#xA;FROM AS400.HOST03.SMPDATD.M182FCPRO &#xA;where W_M182_ESTA = 0&#xA;GROUP BY  W_M182_NPRO, W_M182_PRBC, W_M182_PRdu&#xA;&#xA;-- TEMPORAL PARA OBTENER PARA CADA PRODUCTO, PROVEEDOR LOS DIAS CONVENIDOS&#xA;select  W_M182_NPRO as Proveedor,&#xA;&#x9;&#x9;&#x9;&#x9;W_M182_PRBC as Tipo_Proveedor,&#xA;&#x9;&#x9;&#x9;&#x9;W_M182_PRdu as Producto, &#xA;&#x9;&#x9;&#x9;&#x9;W_M182_FVIG as FechaVigencia, &#xA;&#x9;&#x9;&#x9;&#x9;W_M507_DNETO as DiasConvenidos &#xA;&#x9;&#x9;&#x9;into #tempfinal&#xA;&#x9;&#x9;&#x9;from AS400.HOST03.SMPDATD.M182FCPRO C&#xA;inner join #TempFechaVigencia T on &#xA;&#x9;&#x9;&#x9;&#x9;C.W_M182_NPRO = T.Nro_Proveedor and &#xA;&#x9;&#x9;&#x9;&#x9;C.W_M182_PRBC = T.Tipo_Proveedor and&#xA;&#x9;&#x9;&#x9;&#x9;C.W_M182_PRdu = T.Producto and&#xA;&#x9;&#x9;&#x9;&#x9;C.W_M182_FVIG = T.Fecha_Vigencia&#xA;inner join AS400.HOST03.SMPDATD.M507FCPAG DC -- DiasConvenidos&#xA;&#x9;&#x9;&#x9;&#x9;on C.W_M182_CPAG = DC.W_M507_CPAG&#xA;where W_M182_ESTA = 0 -- Estado 0-Activo, 1-Inactivo&#xA;&#xA;declare @periodo int &#xA;set @periodo = (select dbo.PeriodosAnteriores(dbo.devuelveperiodo(GETDATE()),5))&#xA;&#xA;&#xA;-- Actualiza dias de pago convenido segun temporales anteriores&#xA;update H_CURSOGRAMAS&#xA;set cant_dias_plazo_pago_convenio = T.DiasConvenidos&#xA;FROM H_CURSOGRAMAS H &#xA;INNER JOIN #tempfinal T&#xA;on  H.id_acreedor = T.Proveedor and  &#xA;&#x9;H.id_tipo_prestador = T.Tipo_Proveedor collate Modern_Spanish_CI_AS and&#xA;&#x9;H.id_producto = T.Producto&#xA;&#x9;where id_periodo &gt;= @periodo &#xA;&#xA;drop table #tempfinal&#xA;drop table #TempFechaVigencia&#xA;&#xA;&#xA;update h_cursogramas &#xA;set id_compania = 1&#xA;where id_compania not in (1,2)&#x9;&#xA;&#xA;&#x9;&#xA;&#xA;-- Corrige preliquidados&#xA;select * into #cuc_preliquida from openquery (host03,'&#xA;SELECT &#xA;&#x9;T01.CUC_NUM , &#xA;&#x9;T01.CUC_ACC ,&#xA;&#x9;T01.CUC_FRE, &#xA;&#x9;T01.CUC_ITF,&#xA;&#x9;T01.CUC_FCI,&#xA;&#x9;T01.CUC_FVE ,&#xA;&#x9;T01.CUC_CIE ,&#xA;&#x9;T01.CUC_FAA ,&#xA;&#x9;SUM(CASE WHEN (AUDI.TRNMAR=''O'' OR T01.CUCPRL&lt;&gt;''N'' AND Rtrim(LTRIM(LOT.LOT_RAL)) =''PRELIQUIDA'')  THEN 1 ELSE 0 END) AS ITEMS_PRELIQ&#xA;FROM DESARROLLO.CUP004 T01 &#xA;&#x9;JOIN DESARROLLO.CUP007 LOT ON LOT.CUC_NUM=T01.CUC_NUM AND LOT.BCP_COD=T01.BCP_COD&#xA;&#x9;JOIN DESARROLLO.CUP008 O ON T01.CUC_NUM=O.CUC_NUM AND LOT.LOT_NUM=O.LOT_NUM&#xA;&#x9;LEFT JOIN DESARROLLO.CUP009 AUDI ON &#xA;&#x9;&#x9;O.CUC_NUM=AUDI.TRN_CUC AND&#xA;&#x9;&#x9;O.BCP_COD=AUDI.TRN_BCP AND&#xA;&#x9;&#x9;O.LOT_POS=AUDI.TRN_POS AND&#xA;&#x9;&#x9;O.LOT_NUM=AUDI.TRN_LOT AND&#xA;&#x9;&#x9;O.CUP_SEC=AUDI.TRN_SEC AND&#xA;&#x9;&#x9;AUDI.TRN_COD=0 AND AUDI.TRNMAR IN (''O'', ''A'')&#xA;where T01.CUC_BJA&lt;&gt;''B''&#xA;&#x9;and T01.CUCREI&lt;&gt;''R''&#xA;&#x9;and T01.ECA_COD&lt;&gt;''A''&#xA;&#x9;AND O.CUP_TNO&lt;&gt;''NC''&#xA;&#x9;and T01.CUC_FCI&gt;=''20181001''&#xA;&#x9;and T01.CUC_FCI &lt;=''20181031''&#xA;&#x9;group by &#xA;&#x9;&#x9;T01.CUC_NUM , &#xA;&#x9;T01.CUC_ACC ,&#xA;&#x9;T01.CUC_FRE, &#xA;&#x9;T01.CUC_ITF,&#xA;&#x9;T01.CUC_FCI,&#xA;&#x9;T01.CUC_FVE ,&#xA;&#x9;T01.CUC_CIE ,&#xA;&#x9;T01.CUC_FAA&#xA;&#x9;')&#xA;&#xA;&#xA;update h_cursogramas&#xA;set items_preliquidacion_cursogramas = items_preliq&#xA;from h_cursogramas h inner join #cuc_preliquida c on h.nro_cursograma = c.cuc_num&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza H_CURSOGRAMAS_RESUMEN_3M"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{57d651ce-a7f2-4a35-86b8-81e3f02df30b}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza H_CURSOGRAMAS_RESUMEN_3M"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4CDEDF1B-2D4F-438C-AE1C-573E513BD1BD}"
          SQLTask:SqlStatementSource="&#xA;-- Calcula dia laboral, no calcula fin de semana (solo desde lunes a viernes sin feriados)&#xA;update D_FECHAS_LABORALES_CURSOGRAMAS&#xA;set nro_dia_laboral =  t.orden&#xA;from D_FECHAS_LABORALES_CURSOGRAMAS d inner join &#xA;(select d.* , row_number() over( partition by d.id_periodo order by id_fecha_cursogramas ) as orden from d_fechas_laborales_cursogramas  d inner join D_FECHA f on d.id_fecha_cursogramas = f.id_fecha&#xA;where id_dia_habil = 1) T on d.id_fecha_cursogramas = t.id_fecha_cursogramas&#xA;-- Calcula el periodo laboral, para aquellos que no son fin de semana&#xA;update D_FECHAS_LABORALES_CURSOGRAMAS&#xA;set id_periodo_laboral = id_periodo&#xA;where nro_dia_laboral is not null&#xA;&#xA;-- A los dias que son fin de semana o feriado le pone la siguiente fecha habil &#xA;select id_fecha_cursogramas , (select min(id_fecha_cursogramas) from D_FECHAS_LABORALES_CURSOGRAMAS c where c.id_fecha_cursogramas &gt; d.id_fecha_cursogramas and nro_dia_laboral is not null) as fecha_siguiente &#xA;,0 as id_dia_trabajado_nro,0 as id_periodo_laboral&#xA;into #temp_fecha_siguiente  from D_FECHAS_LABORALES_CURSOGRAMAS D where nro_dia_laboral is null&#xA;group by id_fecha_cursogramas&#xA;-- Actualiza el numero de dia trabajado y el periodo laboral para las fechas que no fueron dia de semaana&#xA;update #temp_fecha_siguiente&#xA;set id_dia_trabajado_nro = d.nro_dia_laboral,&#xA;id_periodo_laboral = d.id_periodo_laboral&#xA;from #temp_fecha_siguiente t inner join D_FECHAS_LABORALES_CURSOGRAMAS d on t.fecha_siguiente = d.id_fecha_cursogramas&#xA;&#xA;-- Calcula dia laboral, calcula solo findesamana&#xA;update D_FECHAS_LABORALES_CURSOGRAMAS&#xA;set nro_dia_laboral = t.id_dia_trabajado_nro ,&#xA;&#x9;id_periodo_laboral = t.id_periodo_laboral&#xA;from D_FECHAS_LABORALES_CURSOGRAMAS d inner join #temp_fecha_siguiente t on t.id_fecha_cursogramas = d.id_fecha_cursogramas&#xA;where nro_dia_laboral is null&#xA;&#xA;update H_CURSOGRAMAS &#xA;set nro_id_fecha_laboral_cierre =  nro_dia_laboral,&#xA;&#x9;id_periodo_laboral = d.id_periodo_laboral&#xA;from H_CURSOGRAMAS h inner join D_FECHAS_LABORALES_CURSOGRAMAS d on d.id_fecha_cursogramas = h.fecha_cierre_cursograma&#xA;&#xA;select  max(id_fecha_cursogramas) from D_FECHAS_LABORALES_CURSOGRAMAS&#xA;&#xA;&#xA;--- Prepara el ciclo para calcular todas las fechas del mes &#xA;declare @cant_periodo int &#xA;&#xA;declare @periodo int = dbo.devuelveperiodo((select max(id_fecha_cursogramas)from D_FECHAS_LABORALES_CURSOGRAMAS  f&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;inner join d_fecha d on f.id_fecha_cursogramas = d.id_fecha&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where datepart (dw,id_fecha_cursogramas) not in (1,7) and id_dia_habil = 1))-- Busca el periodo de la primer fecha habil anterior&#xA;&#xA;declare @maximo_dia int = case when @periodo in (select id_periodo from H_CURSOGRAMAS_RESUMEN_3M) then &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(select max(nro_dia_laboral) from H_CURSOGRAMAS_RESUMEN_3M where id_periodo = (select max(id_periodo) from H_CURSOGRAMAS_RESUMEN_3M )) + 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; else 1 end&#xA;&#xA;&#xA;DECLARE @Marca tinyint = case when @periodo in (select id_periodo from H_CURSOGRAMAS_RESUMEN_3M)-- Pregunto si el periodo esta en la tabla si no esta pongo la marca en 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and @maximo_dia in (select nro_dia_laboral from H_CURSOGRAMAS_RESUMEN_3M where id_periodo = @periodo)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;then 0 -- Marca 0 no inserta&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else 1 end -- Marca en 1 si inserta&#xA;&#xA;declare @DIAHABIL int = @maximo_dia&#xA;&#xA;WHILE (@DIAHABIL = @maximo_dia and @marca = 1)&#xA;BEGIN&#xA;&#xA;set @cant_periodo = (select  COUNT(DISTINCT id_periodo_laboral) from H_CURSOGRAMAS where   id_periodo_laboral in (dbo.PeriodosAnteriores(@periodo,4), -- Ultimos 3 meses cerrados&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dbo.PeriodosAnteriores(@periodo,3),&#x9;dbo.PeriodosAnteriores(@periodo,2)) and nro_id_fecha_laboral_cierre = @DIAHABIL)&#xA;set @cant_periodo = case when @cant_periodo = 0 then 1 else @cant_periodo end &#xA;&#xA;insert into H_CURSOGRAMAS_RESUMEN_3M&#xA;select @periodo,'1900-01-01 00:00:00.000',@DIAHABIL,2,0,0,0,0,0,0,0,0,0,0&#xA;where @DIAHABIL not in (select nro_dia_laboral  from H_CURSOGRAMAS_RESUMEN_3M where id_compania = 2 and id_periodo = @periodo )&#xA;&#xA;insert into H_CURSOGRAMAS_RESUMEN_3M&#xA;select @periodo,'1900-01-01 00:00:00.000',@DIAHABIL,1,0,0,0,0,0,0,0,0,0,0&#xA;where @DIAHABIL not in (select nro_dia_laboral  from H_CURSOGRAMAS_RESUMEN_3M where id_compania = 1 and id_periodo = @periodo )&#xA;&#xA;&#xA;-- Calculo los campos correspondientes para los ultimos 3 meses Para Staff&#xA;&#xA;UPDATE H_CURSOGRAMAS_RESUMEN_3M&#xA;SET cant_cursog_liquidados_avg = isnull(cant_cursog,0),&#xA;&#x9;imp_cursog_liquidados_avg = isnull(importe,0),&#xA;&#x9;items_avg = isnull(items,0),&#xA;&#x9;items_digital_avg= isnull(digital,0),&#xA;&#x9;items_manual_avg = isnull(imanual,0)&#xA;from h_cursogramas_resumen_3m h inner join (select @DIAHABIL as dia, count(*)/@cant_periodo cant_cursog ,sum(imp_facturacion)/@cant_periodo importe ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum(items_ordenes_cursograma)/@cant_periodo items , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(sum(items_archivo_cursograma) + Sum(items_preliquidacion_cursogramas)) /@cant_periodo digital,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(sum(items_ordenes_cursograma)- (sum(items_archivo_cursograma) + Sum(items_preliquidacion_cursogramas))) /@cant_periodo imanual&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;from H_CURSOGRAMAS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where   id_periodo_laboral in (select distinct id_periodo_laboral from h_cursogramas &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where nro_id_fecha_laboral_cierre = @DIAHABIL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;   and id_periodo_laboral in (dbo.PeriodosAnteriores(@periodo,4), -- Ultimos 3 meses cerrados&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dbo.PeriodosAnteriores(@periodo,3),&#x9;dbo.PeriodosAnteriores(@periodo,2))) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and nro_id_fecha_laboral_cierre &lt;= @DIAHABIL and id_compania = 2 ) t &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; on t.dia = h.nro_dia_laboral&#xA;where @DIAHABIL = h.nro_dia_laboral  and id_compania = 2 and id_periodo = @periodo-- Staff&#xA;&#xA;-- Calculo los campos correspondientes para los ultimos 3 meses Para Sancor&#xA;&#xA;UPDATE  h_cursogramas_resumen_3m &#xA;SET cant_cursog_liquidados_avg = isnull(cant_cursog,0),&#xA;&#x9;imp_cursog_liquidados_avg = isnull(importe,0),&#xA;&#x9;items_avg = isnull(items,0),&#xA;&#x9;items_digital_avg= isnull(digital,0),&#xA;&#x9;items_manual_avg = isnull(imanual,0)&#xA;from h_cursogramas_resumen_3m h inner join (select @DIAHABIL as dia, count(*)/@cant_periodo cant_cursog ,sum(imp_facturacion)/@cant_periodo importe ,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum(items_ordenes_cursograma)/@cant_periodo items , &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(sum(items_archivo_cursograma) + Sum(items_preliquidacion_cursogramas)) /@cant_periodo digital,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(sum(items_ordenes_cursograma)- (sum(items_archivo_cursograma) + Sum(items_preliquidacion_cursogramas))) /@cant_periodo imanual&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;from H_CURSOGRAMAS &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where   id_periodo_laboral in (select distinct id_periodo_laboral from h_cursogramas &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  where nro_id_fecha_laboral_cierre = @DIAHABIL &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  and id_periodo_laboral in (dbo.PeriodosAnteriores(@periodo,4), -- Ultimos 3 meses cerrados&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dbo.PeriodosAnteriores(@periodo,3),&#x9;dbo.PeriodosAnteriores(@periodo,2)))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and nro_id_fecha_laboral_cierre &lt;= @DIAHABIL and id_compania = 1 ) t &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; on t.dia = h.nro_dia_laboral&#xA;where @DIAHABIL = h.nro_dia_laboral  and id_compania = 1  and id_periodo = @periodo-- Sancor&#xA;&#xA;set @DIAHABIL += 1 &#xA;end &#xA;&#xA;&#xA;&#xA;&#xA;set @DIAHABIL = (Select min(nro_dia_laboral) from h_cursogramas_resumen_3m where cant_cursog_liquidados = 0 and id_compañia = 2 ) -- Calculo el dia habil a setear&#xA;set @cant_periodo  = (select  COUNT(DISTINCT id_periodo_laboral) from H_CURSOGRAMAS where   id_periodo_laboral in (dbo.PeriodosAnteriores(@periodo,2),(dbo.PeriodosAnteriores(@periodo,3)),(dbo.PeriodosAnteriores(@periodo,4))) and nro_id_fecha_laboral_cierre = @DIAHABIL)&#xA;-- Calculo los campos correspondiente para el dia anterior de staff&#xA;update h_cursogramas_resumen_3m&#xA;set cant_cursog_liquidados = cant, &#xA;imp_cursog_liquidados = importe,&#xA; items_liquidados = items, &#xA; items_archivo_liquidados = t.items_archivo,&#xA;  items_preliquidacion = t.items_prel&#xA;  from h_cursogramas_resumen_3m  h inner join (select @DIAHABIL dia, count(*) as cant , sum(imp_facturacion) as importe, sum(items_ordenes_cursograma) as items,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum(items_preliquidacion_cursogramas) as items_prel, sum(items_archivo_cursograma) as items_archivo from H_CURSOGRAMAS h&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where id_periodo_laboral = @periodo and nro_id_fecha_laboral_cierre &lt;= @DIAHABIL and id_compania = 2 ) t on t.dia = h.nro_dia_laboral&#xA;&#x9;where id_compania = 2 and nro_dia_laboral = @DIAHABIL and id_periodo = @periodo&#xA;&#xA;&#xA;set @DIAHABIL = (Select min(nro_dia_laboral) from h_cursogramas_resumen_3m where cant_cursog_liquidados = 0 and id_compañia = 1 ) -- Calculo el dia habil a setear&#xA;-- Calculo los campos correspondiente para el dia anterior de sancor&#xA;update h_cursogramas_resumen_3m&#xA;set cant_cursog_liquidados = cant, &#xA;imp_cursog_liquidados = importe,&#xA; items_liquidados = items, &#xA; items_archivo_liquidados = t.items_archivo,&#xA;  items_preliquidacion = t.items_prel&#xA;  from h_cursogramas_resumen_3m  h inner join (select @DIAHABIL dia, count(*) as cant , sum(imp_facturacion) as importe, sum(items_ordenes_cursograma) as items,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;sum(items_preliquidacion_cursogramas) as items_prel, sum(items_archivo_cursograma) as items_archivo from H_CURSOGRAMAS h&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;where id_periodo_laboral = @periodo and id_compania = 1 and nro_id_fecha_laboral_cierre &lt;= @DIAHABIL ) t on t.dia = h.nro_dia_laboral&#xA;where id_compania = 1 and nro_dia_laboral = @DIAHABIL and id_periodo = @periodo&#xA;&#xA;-- Para los campos que son mayores a esta fehca pego 0&#xA;update h_cursogramas_resumen_3m&#xA;set cant_cursog_liquidados_avg = 0, &#xA;imp_cursog_liquidados_avg = 0,&#xA; items_avg = 0, &#xA; items_digital_avg = 0,&#xA;  items_manual_avg = 0&#xA;  where @cant_periodo = 0 and nro_dia_laboral = @DIAHABIL and id_periodo = @periodo&#xA;&#xA;&#xA;&#xA;-- Pego la fecha correspondiente a este mes que representa cada dia laborable&#xA;update h_cursogramas_resumen_3m&#xA;set fecha_dia_laboral = t.id_fecha_cursogramas&#xA;from h_cursogramas_resumen_3m h  inner join (select nro_dia_laboral, max(id_fecha_cursogramas) as id_fecha_cursogramas from d_fechas_laborales_cursogramas where id_periodo = @periodo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; group by nro_dia_laboral) t on &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; h.nro_dia_laboral= t.nro_dia_laboral&#xA;where id_periodo = @periodo &#xA;&#xA;-- Para los campos que son mayores a esta fehca pego 0&#xA;update h_cursogramas_resumen_3m&#xA;set cant_cursog_liquidados = 0, &#xA;imp_cursog_liquidados = 0,&#xA; items_liquidados = 0, &#xA; items_archivo_liquidados = 0,&#xA;  items_preliquidacion = 0&#xA;  where fecha_dia_laboral  = '1900-01-01 00:00:00.000' and id_periodo = @periodo&#xA;&#xA;/*&#xA;update h_cursogramas_resumen_3m&#xA;set id_periodo = dbo.devuelveperiodo (fecha_dia_laboral)&#xA;*/&#xA;&#xA;delete from h_cursogramas_resumen_3m&#xA;where cant_cursog_liquidados_avg = 0&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Actualiza las D"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{7A786FB2-A36D-401E-A1B0-4730777C891B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Actualiza las D"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4CDEDF1B-2D4F-438C-AE1C-573E513BD1BD}"
          SQLTask:SqlStatementSource="/* Carga de d*/&#xA;DECLARE @InicioAnio date = (select DATEADD(DAY,1,max(fecha_hasta_semana)) from D_SEMANAS) ;&#xA;DECLARE @InicioSemana date = DATEADD(DAY, (7 - DATEPART(WEEKDAY, @InicioAnio)) + 1, @InicioAnio);&#xA;declare @id_semana int = (select max(id_semana) from D_SEMANAS) + 1&#xA;WHILE (@InicioSemana) &lt;= (DATEADD(DAY, 6, getdate()))&#xA;BEGIN&#x9;&#xA;&#x9;insert into D_SEMANAS&#xA;&#x9;SELECT @id_semana as id_semana, @InicioSemana as fecha_desde_semana, &#xA;&#x9;DATEADD(DAY, 6, @InicioSemana) as fecha_hasta_semana,'Vto. Semana del ' + cast(@InicioSemana as varchar) + ' al ' + &#xA;&#x9;cast(DATEADD(DAY, 6, @InicioSemana)as varchar),0 &#xA;&#x9;where @InicioSemana not in (select fecha_desde_semana from D_SEMANAS)&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;&#xA;&#x9;SET @InicioSemana = DATEADD(DAY, 7, @InicioSemana)&#xA;&#x9;SET @id_semana = @id_semana + 1&#xA;&#x9;&#xA;END &#xA;&#xA; &#xA;--- Mantiene actualizada la d semanas&#xA;update d_semanas&#xA;set id_marca_semana_vigente = 0&#xA;&#xA;update d_semanas&#xA;set id_marca_semana_vigente = 1 &#xA;where getdate() between fecha_desde_semana and fecha_hasta_semana&#xA;-- Inserta las nuevas fechas&#xA;insert into d_fechas_laborales_cursogramas&#xA;select distinct fecha_cierre_cursograma,0,dbo.DevuelvePeriodo(fecha_cierre_cursograma),0,0,0,0 from H_CURSOGRAMAS &#xA;where fecha_cierre_cursograma not in (select id_fecha_cursogramas from d_fechas_laborales_cursogramas) order by fecha_cierre_cursograma&#xA;-- Actualiza periodos&#xA;update [D_FECHAS_LABORALES_CURSOGRAMAS]&#xA;set id_periodo = dbo.devuelveperiodo(id_fecha_cursogramas)&#xA;-- Actualiza el id de dia trabajado&#xA;select * , ROW_NUMBER ( )   &#xA;    OVER (  PARTITION BY id_periodo order by id_fecha_cursogramas ) as id_fecha into  #fechas from [D_FECHAS_LABORALES_CURSOGRAMAS]&#xA;&#xA;update [D_FECHAS_LABORALES_CURSOGRAMAS]&#xA;SET id_dia_trabajado_nro = id_fecha&#xA;from [D_FECHAS_LABORALES_CURSOGRAMAS] d inner join #fechas f  on d.id_fecha_cursogramas = f.id_fecha_cursogramas  &#xA;-- Actualiza la fecha mayor es decir cuantos dias se trabajaro por mes&#xA;select id_periodo, max(id_dia_trabajado_nro) as maximo into #temp_maximos from [D_FECHAS_LABORALES_CURSOGRAMAS] group by id_periodo&#xA;update [D_FECHAS_LABORALES_CURSOGRAMAS]&#xA;SET cant_dias_trabajado_mes = maximo&#xA;from [D_FECHAS_LABORALES_CURSOGRAMAS] d inner join #temp_maximos f  on d.id_periodo = f.id_periodo&#xA;&#xA;&#xA;select * , ROW_NUMBER ( )   &#xA;    OVER (  order by id_fecha_cursogramas ) as id_fecha into  #fechas_historia from [D_FECHAS_LABORALES_CURSOGRAMAS]&#xA;update [D_FECHAS_LABORALES_CURSOGRAMAS]&#xA;set id_dia_trabajado_nro_hist  = id_fecha&#xA;from [D_FECHAS_LABORALES_CURSOGRAMAS] d inner join #fechas_historia f  on d.id_fecha_cursogramas = f.id_fecha_cursogramas  &#xA;&#xA;&#xA;drop table #temp_maximos&#xA;drop table #fechas&#xA;&#xA;-- Actualiza el formato de la D_Semanas del a fecha a mostrar&#xA;&#xA;&#x9;update D_SEMANAS &#xA;&#x9;set de_Semana = &#x9;'Vto. Semana del ' + cast(datepart(dd,fecha_desde_semana) as varchar)+'-' +cast(datepart(mm,fecha_desde_semana)as varchar)+'-'+ cast(datepart(yy,fecha_desde_semana)as varchar) + ' al ' + &#xA;&#x9;cast(datepart(dd,fecha_hasta_semana)as varchar) +'-' +cast(datepart(mm,fecha_hasta_semana)as varchar)+'-'+ cast(datepart(yy,fecha_hasta_semana)as varchar)  from D_SEMANAS&#xA;&#xA;&#xA;-- ACTUALIZA D_SECTORES_CURSOGRAMAS&#xA;insert into D_SECTORES_CURSOGRAMAS&#xA;select id_sector_cursograma, 'F/D',0&#xA;from h_cursogramas where id_sector_cursograma not in (select id_sector_cursograma from D_SECTORES_CURSOGRAMAS) &#xA;group by id_sector_cursograma&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Borra tablas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0729D0E5-6445-4531-8859-533FD64F49D9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Borra tablas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4CDEDF1B-2D4F-438C-AE1C-573E513BD1BD}"
          SQLTask:SqlStatementSource="&#xA;-- Elimina Auxiliares &#xA; truncate table aux_h_cursogramas&#xA; truncate table AUX_H_CURSOGRAMAS_2&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Carga Auxiliares"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{21EB804E-9580-4A28-8D1F-C84503EED297}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Carga Auxiliares"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{4CDEDF1B-2D4F-438C-AE1C-573E513BD1BD}"
          SQLTask:SqlStatementSource="&#xA;-- inserto los cursogramas que hay en los ultimos 4 meses en la tabla ya generada&#xA;insert into aux_H_cursogramas&#xA;select  * from openquery (host03,'SELECT &#xA;&#x9;T01.CUC_NUM , &#xA;&#x9;T01.CUC_ACC ,&#xA;&#x9;T01.CUC_FRE, &#xA;&#x9;T01.CUC_ITF,&#xA;&#x9;T01.CUC_FCI,&#xA;&#x9;T01.CUC_FVE ,&#xA;&#x9;CUC_CIE ,&#xA;&#x9;T01.CUC_FAA ,&#xA;&#x9;0,&#xA;&#x9;0,&#xA;&#x9;0,&#xA;&#x9;0,&#xA;&#x9;0, &#xA;&#x9;0,&#xA;&#x9;0,&#xA;&#x9;0,&#xA;&#x9;t01.SRV_COD,&#xA;&#x9;0,&#xA;&#x9;T01.ECA_COD,&#xA;&#x9;t01.Cuc_fac&#xA;&#x9;from dwhsmpd.qcursog t01&#xA;&#x9;group by &#xA;&#x9;T01.CUC_NUM , &#xA;&#x9;T01.CUC_ACC ,&#xA;&#x9;T01.CUC_FRE, &#xA;&#x9;T01.CUC_ITF,&#xA;&#x9;T01.CUC_FCI,&#xA;&#x9;T01.CUC_FVE ,&#xA;&#x9;T01.CUC_CIE, &#xA;&#x9;T01.CUC_FAA,&#xA;&#x9;T01.SRV_COD,&#xA;&#x9;T01.ECA_COD,&#xA;&#x9;t01.Cuc_fac&#xA;&#x9;')&#xA;&#xA;&#xA;&#xA;-- En la segunda aux inserto el detalle de los cursograma para despues hacer los calculos corresponndientes&#xA;&#xA; insert into AUX_H_CURSOGRAMAS_2&#xA; select  *  from openquery (host03,'&#xA;SELECT  O.CUC_NUM,  &#xA;        O.CUP_TOR ,&#xA;        O.CUP_NOR ,&#xA;        ORI_COD ,&#xA;        O.CUP_IMF,&#xA;&#x9;&#x9;AUDI.TRNMAR,&#xA;0,&#xA;0&#xA;from DESARROLLO.CUP008 O INNER join dwhsmpd.qcursog C on C.cuc_num = O.cuc_num  &#xA;&#x9; LEFT JOIN DESARROLLO.CUP009 AUDI ON &#xA;&#x9;&#x9;O.CUC_NUM=AUDI.TRN_CUC AND&#xA;&#x9;&#x9;O.BCP_COD=AUDI.TRN_BCP AND&#xA;&#x9;&#x9;O.LOT_POS=AUDI.TRN_POS AND&#xA;&#x9;&#x9;O.LOT_NUM=AUDI.TRN_LOT AND&#xA;&#x9;&#x9;O.CUP_SEC=AUDI.TRN_SEC AND&#xA;&#x9;&#x9;AUDI.TRN_COD=0 AND AUDI.TRNMAR IN (''O'', ''A'')&#xA;WHERE O.CUC_NUM &gt;= (select min(cuc_num) from dwhsmpd.qcursog) and &#xA;CUP_TNO&lt;&gt;''NC''')&#xA;-- Borro de la aux aquellos cursogramas que no corresponden&#xA;delete from &#xA; AUX_H_CURSOGRAMAS_2 where CUC_NUM not in (select nro_cursograma from AUX_H_CURSOGRAMAS)&#xA;&#xA;&#xA; -- Filtros de preliquida&#xA;select * into #cuc_preliquida from openquery (host03,'&#xA;SELECT &#xA;&#x9;T01.CUC_NUM , &#xA;&#x9;T01.CUC_ACC ,&#xA;&#x9;T01.CUC_FRE, &#xA;&#x9;T01.CUC_ITF,&#xA;&#x9;T01.CUC_FCI,&#xA;&#x9;T01.CUC_FVE ,&#xA;&#x9;T01.CUC_CIE ,&#xA;&#x9;T01.CUC_FAA ,&#xA;&#x9;SUM(CASE WHEN (AUDI.TRNMAR=''O'' OR T01.CUCPRL&lt;&gt;''N'' AND Rtrim(LTRIM(LOT.LOT_RAL)) =''PRELIQUIDA'')  THEN 1 ELSE 0 END) AS ITEMS_PRELIQ&#xA;FROM DESARROLLO.CUP004 T01 &#xA;&#x9;JOIN DESARROLLO.CUP007 LOT ON LOT.CUC_NUM=T01.CUC_NUM AND LOT.BCP_COD=T01.BCP_COD&#xA;&#x9;JOIN DESARROLLO.CUP008 O ON T01.CUC_NUM=O.CUC_NUM AND LOT.LOT_NUM=O.LOT_NUM&#xA;&#x9;LEFT JOIN DESARROLLO.CUP009 AUDI ON &#xA;&#x9;&#x9;O.CUC_NUM=AUDI.TRN_CUC AND&#xA;&#x9;&#x9;O.BCP_COD=AUDI.TRN_BCP AND&#xA;&#x9;&#x9;O.LOT_POS=AUDI.TRN_POS AND&#xA;&#x9;&#x9;O.LOT_NUM=AUDI.TRN_LOT AND&#xA;&#x9;&#x9;O.CUP_SEC=AUDI.TRN_SEC AND&#xA;&#x9;&#x9;AUDI.TRN_COD=0 AND AUDI.TRNMAR IN (''O'', ''A'')&#xA;where T01.CUC_BJA&lt;&gt;''B''&#xA;&#x9;and T01.CUCREI&lt;&gt;''R''&#xA;&#x9;and T01.ECA_COD&lt;&gt;''A''&#xA;&#x9;AND O.CUP_TNO&lt;&gt;''NC''&#xA;&#x9;and T01.CUC_FRE&gt;=''20190501''&#xA;&#x9;group by &#xA;&#x9;&#x9;T01.CUC_NUM , &#xA;&#x9;T01.CUC_ACC ,&#xA;&#x9;T01.CUC_FRE, &#xA;&#x9;T01.CUC_ITF,&#xA;&#x9;T01.CUC_FCI,&#xA;&#x9;T01.CUC_FVE ,&#xA;&#x9;T01.CUC_CIE ,&#xA;&#x9;T01.CUC_FAA&#xA;&#x9;')&#xA;&#xA;&#xA;-- Actualizo todos los campos restantes con los calculos correspondientes &#xA;update AUX_H_CURSOGRAMAS&#xA;set cant_ordenes = CANTIDAD_ORDENES,&#xA;&#x9;items_ordenes = A.ITEMS_ORDENES,&#xA;&#x9;cant_ordenes_amb = A.ORDENES_AMBULATORIO,&#xA;&#x9;cant_ordenes_int = ORDENES_INTERNACION,&#xA;&#x9;items_ordenes_amb = ITEMS_ORDENES_AMBULATORIO,&#xA;&#x9;items_ordenes_int = ITEMS_ORDENES_INTERNACION,&#xA;&#x9;fact_total_internacion = FACTURADO_INTERNACION,&#xA;&#x9;items_archivo = A.ITEMS_ARCHIVO&#xA;from AUX_H_CURSOGRAMAS H inner join (select cuc_num, count(*) as ITEMS_ORDENES, COUNT(DISTINCT (O.CUP_TOR * 100000000 + O.CUP_NOR)) AS CANTIDAD_ORDENES, &#xA;&#x9;COUNT(DISTINCT (CASE WHEN O.ORI_COD&lt;&gt; 'I' THEN O.CUP_TOR * 100000000 + O.CUP_NOR ELSE NULL END)) AS ORDENES_AMBULATORIO,&#xA;&#x9;COUNT(DISTINCT (CASE WHEN O.ORI_COD=  'I' THEN O.CUP_TOR * 100000000 + O.CUP_NOR ELSE NULL END)) AS ORDENES_INTERNACION,&#xA;&#x9;SUM(CASE WHEN O.ORI_COD&lt;&gt;'I' THEN 1 ELSE 0 END) AS ITEMS_ORDENES_AMBULATORIO,&#xA;&#x9;SUM(CASE WHEN O.ORI_COD='I' THEN 1 ELSE 0 END) AS ITEMS_ORDENES_INTERNACION,&#xA;&#x9;SUM(CASE WHEN O.ORI_COD= 'I' THEN O.CUP_IMF ELSE 0 END) AS FACTURADO_INTERNACION,&#xA;&#x9;SUM(CASE WHEN O.TRNMAR='A' THEN 1 ELSE 0 END) AS ITEMS_ARCHIVO&#xA;from AUX_H_CURSOGRAMAS_2 O &#xA;group by CUC_NUM) A on h.nro_cursograma = A.CUC_NUM&#xA;&#xA;update AUX_H_CURSOGRAMAS&#xA;set items_preliq = c.ITEMS_PRELIQ&#xA;from AUX_H_CURSOGRAMAS a inner join #cuc_preliquida c on c.CUC_NUM = a.nro_cursograma&#xA;&#xA;insert into D_posiciones_trazabilidad_cursogramas&#xA;select w53POS, w53des from AS400.HOST03.SMPDATD.T53FPOS where w53POS not in (select id_posicion_trazabilidad_cursograma from D_posiciones_trazabilidad_cursogramas)&#xA;&#xA;&#xA;insert into D_DEPARTAMENTOS_TRAZABILIDAD_CURSOGRAMAS&#xA;select w52dep, w52des from AS400.HOST03.SMPDATD.T52FDEP where w52dep not in (select id_departamento_trazabilidad_cursograma from D_DEPARTAMENTOS_TRAZABILIDAD_CURSOGRAMAS)&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{0E930808-FA52-4DB1-844A-FD767C5A1830}"
      DTS:From="Package\Borra tablas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Carga Auxiliares" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{03190A60-D63A-461D-8EC9-0310DFCE07F7}"
      DTS:From="Package\Carga Auxiliares"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Actualiza H_CURSOGRAMAS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{0B5D3DB1-9450-49EA-BF7B-8A40B90B9CF9}"
      DTS:From="Package\Actualiza H_CURSOGRAMAS"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Actualiza las D" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{242FB203-981C-4DD1-9843-EAA2E0F6CF69}"
      DTS:From="Package\Actualiza las D"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Actualiza H_CURSOGRAMAS_RESUMEN_3M" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="228,42"
          Id="Package\Actualiza H_CURSOGRAMAS"
          TopLeft="218.35534591195,238.698113207547" />
        <NodeLayout
          Size="311,42"
          Id="Package\Actualiza H_CURSOGRAMAS_RESUMEN_3M"
          TopLeft="176.85534591195,388.896226415094" />
        <NodeLayout
          Size="152,42"
          Id="Package\Actualiza las D"
          TopLeft="256.35534591195,313.797169811321" />
        <NodeLayout
          Size="138,42"
          Id="Package\Borra tablas"
          TopLeft="263.35534591195,88.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Carga Auxiliares"
          TopLeft="252.35534591195,163.599056603774" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="332.35534591195,130.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.0990566037736"
              Start="0,0"
              End="0,25.5990566037736">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5990566037736" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="332.35534591195,205.599056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.0990566037734"
              Start="0,0"
              End="0,25.5990566037734">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5990566037734" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="332.35534591195,280.698113207547">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.099056603774"
              Start="0,0"
              End="0,25.599056603774">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.599056603774" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="332.35534591195,355.797169811321">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.099056603773"
              Start="0,0"
              End="0,25.599056603773">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.599056603773" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>